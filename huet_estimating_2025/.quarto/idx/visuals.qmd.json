{"title":"BiodivLabel Analysis Script","markdown":{"yaml":{"title":"BiodivLabel Analysis Script","author":"Sarah Huet","format":"pdf","editor":"source","editor_options":{"chunk_output_type":"console"},"knitr":{"opts_chunk":{"collapse":true,"comment":"#>","R.options":{"knitr.graphics.auto_pdf":true}}}},"headingText":"Data","containsRefs":false,"markdown":"\n\n\n```{r import_data}\n\nlibrary(readr)\n\nstat_desc = read_csv(\"~/BiodivLabel/CASD_export/CASD_export_241017/stat_desc_BVIAS_SIQO2024-10-17.csv\", \n                            col_types = cols(mean = col_double(), \n                                             sd = col_double(), nobs = col_double(), \n                                             q0 = col_double()))[,1:18]\n\nstat_tukey_hsd = readr::read_csv(\"~/BiodivLabel/CASD_export/CASD_export_241017/tmp_TukeyHSD_2024-10-17.csv\")\n\nstat_paired_t_test = readr::read_csv(\"~/BiodivLabel/CASD_export/CASD_export_241017/tmp_paired_ttest_2024-10-17.csv\")\n  \n```\n\n\n```{r product_names, include=FALSE, echo=FALSE}\nlibrary(tibble)\n\ntmp_product_names <- tibble(\n  product_name = c(\n    \"Ble_tendre\",\n    \"Mais_grain\",\n    \"Triticale\",\n    \"Melange_cereales_d_ete\",\n    \"Autres_cereales\",\n    \"Orge_d_hiver_et_escourgeon\",\n    \"Orge_de_printemps\",\n    \"Tournesol\",\n    \"Lait\" \n  ),\n  labels = c(\n    \"Soft Wheat\",\n    \"Grain Maize\",\n    \"Triticale\",\n    \"Summer Cereal Mix\",\n    \"Other Cereals\",\n    \"Winter Barley\",\n    \"Spring Barley\",\n    \"Tournesol\",\n    \"Milk\" \n  )\n) %>%\n  mutate(\n    plot = case_when(\n      product_name %in% c(\"Ble_tendre\",\"Mais_grain\",\"Lait\") ~T,\n      .default = F\n    )\n  )\n\ntmp_FQS_names <- tibble(\n  FQS = c(\n    \"Conventionnel\",\n    \"AB\",\n    \"LR\",\n    \"Comte - Morbier\",\n    \"Beurre de Charentes-Poitou\",\n    \"AOP - AOC\",\n    \"Bleu d'Auvergne - Cantal\",\n    \"Fromages de Savoie\",\n    \"Munster\",\n    \"Counterfactual\"\n  ),\n  labels = c(\n    \"Conventional\",\n    \"Organic Farming\",\n    \"Label Rouge\",\n    \"Comté - Morbier\",\n    \"Charentes-Poitou Butter\",\n    \"AOP - AOC\",\n    \"Bleu d'Auvergne - Cantal\",\n    \"Savoie Cheeses\",\n    \"Munster\",\n    \"Counterfactual\"\n  ),\n  colors = c(\n    \"darkgrey\",\n    \"palegreen3\",\n    \"indianred\",\n    \"plum4\",\n    \"plum4\",\n    \"plum4\",\n    \"plum4\",\n    \"goldenrod3\",\n    \"plum4\",\n    \"#333333\"\n)) %>%\n  mutate(\n    plot = case_when(\n      FQS %in% c(\"Conventionnel\",\"AB\",\"LR\",\"Beurre de Charentes-Poitou\",\"Comte - Morbier\") ~T,\n      .default = F\n    ))\nnames(tmp_FQS_names$colors) <- tmp_FQS_names$labels \nnames(tmp_FQS_names$labels) <- tmp_FQS_names$labels\n\n# practice names\ntmp_practice_names <- Reduce(bind_rows,list(\n  practice_names$BVIAS,\n  practice_names$crops,\n  practice_names$herd,\n  practice_names$feed\n))\n\n```\n\n```{r practices_names}\n\nlibrary(dplyr)\n\n# crops ----\ntmp_practice_names <- tibble(\n  practice = rev(c(\"A.2.1\",\n                   \"A.2.2\",\n                   \"A.3.2\",\n                   \"A.3.3\",\n                   \"A.3.1\",\n                   \"A.4.3\",\n                   \"A.4.5\",\n                   \"A.5.1\",\n                   \"yield\")),\n  labels = rev(c(\"Hedge density \\n (linear meter / ha)\",\n                 \"Mean Field Size (ha)\",\n                 \"Soil cover (number of uncovered day)\",\n                 \"Cultural Diversity (Shannon Index)\",\n                 \"Tillage (L diesel / ha)\",\n                 \"Share of mineral fertilizer (%)\",\n                 \"Fertilization (kg N / ha)\", \n                 \"Pesticides (€~TFI~UDNu / ha)\",\n                 \"Yield (kg / ha)\")))\ntmp_practice_names$practice <- factor(tmp_practice_names$practice)\nnames(tmp_practice_names$labels) <- tmp_practice_names$practice\n\nif (exists(\"practice_names\")) {\n  practice_names[[\"crops\"]] <- tmp_practice_names\n} else {\n  practice_names = list()\n  practice_names[[\"crops\"]] <- tmp_practice_names\n}\n\n# Herd ----\n\ntmp_practice_names <- tibble(\n  practice = c(\"yield_l_pha\",\n               \"yield_l_panim\",\n               \"nb_cow_pha\",\n               \"cow_pMFA\",\n               \"feed_autonomy\",\n               \"kg_DM_panim_maize_produced\",\n               #\"kg_DM_panim_soy_meal\",\n               \"share_soybean\",\n               #\"share_concent_purchased\",\n               \"share_concent\",\n               \"protein_crop_ha_pha_pseudofarm\",\n               \"MFA_pcow\",\n               \"MFA_pha_pseudofarm\",\n               \"ha_temp_pasture_pha_pseudofarm\",\n               \"grassland_share_pseudofarm\"#,\n               #\"grassland_share_farm\"\n  ),\n  labels = c(\"Yield (L milk / ha pseudofarm)\",\n             \"Yield (L milk / dairy cow)\",\n             \"Livestock density (dairy cow / ha pseudofarm)\",\n             \"Livestock density (dairy cow / ha MFA)\",\n             \"Feed autonomy (kg produced feed / kg feed)\",\n             \"Forage maize (kg produced forage maize / dairy cow)\",\n             #\"Soyben meal (kg purchased soybean meal / dairy cow)\",\n             \"Soybean meal (kg purchased soybean meal / kg feed)\",\n             #\"Part des concentrés dans les aliments achetés (kg de concentrés / kg d'aliments achetés)\",\n             \"Concentrate (kg concentrate / kg feed)\",\n             \"Legumes (ha legumes / ha pseudofarm\",\n             \"Main Forage Area (MFA / dairy cow)\",\n             \"Main Forage Area (ha MFA / ha pseudofarm)\",\n             \"Temporary meadows (ha temp. meadow / ha pseudofarm)\",\n             \"Permanent grassland (ha perm. grassland / ha pseudofarm)\"#,\n             #\"Part des prairies permanentes (ha prairie / ha ferme)\"\n  ))\n\ntmp_practice_names$practice <- factor(tmp_practice_names$practice)\nnames(tmp_practice_names$labels) <- tmp_practice_names$practice\n\nif (exists(\"practice_names\")) {\n  practice_names[[\"herd\"]] <- tmp_practice_names\n} else {\n  practice_names = list()\n  practice_names[[\"herd\"]] <- tmp_practice_names\n}\n\n# Feed ----\n\ntmp_practice_names <- practice_names$crop %>%\n  mutate(practice = factor(paste0(\"feed_\",practice)))\nnames(tmp_practice_names$labels) <- tmp_practice_names$practice\n\nif (exists(\"practice_names\")) {\n  practice_names[[\"feed\"]] <- tmp_practice_names\n} else {\n  practice_names = list()\n  practice_names[[\"feed\"]] <- tmp_practice_names\n}\n\n# BVIAS ----\n\ntmp_practice_names <- tibble(\n  \"practice\" = c(\"BVIAS_ha\",\"BVIAS_kg\",\"BVIAS_t\"),\n  \"labels\" = c(\"BVIAS (ha)\",\"BVIAS (kg)\",\"BVIAS (t)\"))\ntmp_practice_names$practice <- factor(tmp_practice_names$practice)\nnames(tmp_practice_names$labels) <- tmp_practice_names$practice\n\nif (exists(\"practice_names\")) {\n    practice_names[[\"BVIAS\"]] <- tmp_practice_names\n} else {\n  practice_names = list()\n  practice_names[[\"BVIAS\"]] <- tmp_practice_names\n}\n\n# all ----\n# practice names\ntmp_practice_names <- Reduce(bind_rows,list(\n  practice_names$BVIAS,\n  practice_names$crops,\n  practice_names$herd,\n  practice_names$feed\n))\n\n```\n\n```{r tbl-results, include=FALSE, echo=FALSE}\n\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Table ----\n\ntmp_table0 <- stat_desc %>%\n  # add unmatched stat test\n  left_join(.,stat_tukey_hsd %>%\n              select(production_type, product_name, FQS, product_FQS, practice, practice_subset,\n                     stat_grp,stat_grp_conv,stat_grp_conv_diff,mean_conv_diff,pval_tukey) %>%\n              mutate(match = \"no_match\"),\n            by = join_by(production_type, product_name, FQS, product_FQS, practice, practice_subset,match)) %>%\n  # add matching results\n  left_join(.,stat_paired_t_test %>% \n              select(production_type, product_name, FQS, practice, match,\n                     mean_diff_match,pval_pttest,padjust_bonf),\n            by = join_by(production_type, product_name, FQS, practice, match)) %>%\n  # order factors\n  mutate(\n    practice = factor(practice,levels = tmp_practice_names$practice,labels = tmp_practice_names$labels,ordered = T),\n    product_name = factor(product_name,levels = tmp_product_names$product_name,labels = tmp_product_names$labels,ordered = T),\n    FQS = factor(FQS,levels = tmp_FQS_names$FQS,labels = tmp_FQS_names$labels,ordered = T)\n  )\n\n```\n\n# Main\n\n## fig-results_ha\n\n```{r BVIAS_ha}\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n\n# plot data ----\n\ntmp_plot_data <- tmp_table0 %>%\n  # select only one practice for some products\n  filter(\n    practice == tmp_practice_names$labels[tmp_practice_names$practice == \"BVIAS_ha\"]\n    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]\n    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%\n  # change names for conterfactuals\n  filter(match == \"no_match\" | FQS == \"Conventional\") %>%\n  mutate(FQS = factor(case_when(\n    match == \"no_match\" ~ FQS,\n    match != \"no_match\" ~ \"Counterfactual\"\n  ))) %>%\n  # add asterisk when signif\n  mutate(\n    stat_grp = case_when(\n      match == \"no_match\" ~ stat_grp,\n      match != \"no_match\" & padjust_bonf <= 0.05 ~ \"*\",\n      .default = \"\"\n  )) %>%\n  # add plot_x\n  mutate(\n    plot_x = paste0(product_name,match,FQS)\n  )\n\n\n# plot order ----\n\ntmp_plot_order <- tibble(\n  plot_x = rev(c(\"Soft Wheatno_matchConventional\",\n                 \"Soft Wheatno_matchOrganic Farming\",\n                 \"Soft WheatBle_tendre__ABCounterfactual\",\n                 \"Soft Wheatno_matchLabel Rouge\",\n                 \"Soft WheatBle_tendre__LRCounterfactual\",\n                 \"Grain Maizeno_matchConventional\",\n                 \"Grain Maizeno_matchOrganic Farming\",\n                 \"Grain MaizeMais_grain__ABCounterfactual\",\n                 \"Milkno_matchConventional\",\n                 \"Milkno_matchOrganic Farming\",\n                 \"MilkLait__ABCounterfactual\",\n                 \"Milkno_matchCharentes-Poitou Butter\",\n                 \"MilkLait__Beurre de Charentes-PoitouCounterfactual\",\n                 \"Milkno_matchComté - Morbier\",\n                 \"MilkLait__Comte - MorbierCounterfactual\"\n                 )),\n  labels = rev(c(\"Soft Wheat - Conventional\",\n                 \"Soft Wheat - Organic Farming\",\n                 \"Soft Wheat - Counterfactual Organic Farming\",\n                 \"Soft Wheat - Label Rouge\",\n                 \"Soft Wheat - Counterfactual Label Rouge\",\n                 \"Grain Maize - Conventional\",\n                 \"Grain Maize - Organic Farming\",\n                 \"Grain Maize - Counterfactual Organic Farming\",\n                 \"Milk - Conventional\",\n                 \"Milk - Organic Farming\",\n                 \"Milk - Counterfactual Organic Farming\",\n                 \"Milk - Charentes-Poitou Butter\",\n                 \"Milk - Counterfactual Charentes-Poitou Butter\",\n                 \"Milk - Comte - Morbier\",\n                 \"Milk - Counterfactual Comte - Morbier\")))\n\ntmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,\n                               levels = tmp_plot_order$plot_x,\n                               labels = tmp_plot_order$labels)\ntmp_plot_data <- tmp_plot_data %>% filter(!is.na(plot_x))\ntmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)\n\n# plot ----\n\nggplot() +\n  # mean\n  geom_point(data = tmp_plot_data,\n             aes(x = plot_x, y = mean, fill = FQS,colour = FQS),\n             shape = 21, size=2, stroke = 1, position = position_dodge(width = 0.75)) +\n  # CI95%\n  geom_errorbar(data = tmp_plot_data,\n                aes(x = plot_x, ymin = mean-1.96*(sd/sqrt(nobs)), ymax = mean+1.96*(sd/sqrt(nobs)), colour = FQS),\n                linewidth=1,width = 0.5,position = position_dodge(width = 0.75)) +\n  # sd\n  geom_errorbar(data = tmp_plot_data,\n                aes(x = plot_x, ymin = mean-sd, ymax = mean+sd, colour = FQS),\n                linewidth=0.5,width = 0.5,linetype = \"dashed\",position = position_dodge(width = 0.75)) +\n  # n\n  geom_text(data = tmp_plot_data,\n            aes(x = plot_x, y=max(mean+sd)*1.1,colour = FQS,label = paste0(\"n = \",as.character(nobs))),\n            size=5,position = position_dodge(width = 1)) +\n  # stat groups\n  geom_text(data = tmp_plot_data,\n            aes(x = plot_x,y=0,colour = FQS,label = stat_grp),\n            size=5,position = position_dodge(width = 1))+\n  # theme\n  coord_flip() +\n  ylim(c(0,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +\n  facet_wrap(vars(production_type),scales = \"free_y\",ncol = 1,\n             labeller = labeller(crop = \"Crops\", milk = \"Milk\")) +\n  labs(y = \"BVIAS_ha\",x= \"Products\") +\n  scale_fill_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels,) +\n  scale_colour_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels) +\n  theme_light() +\n  theme(legend.position = \"none\",\n        legend.direction = \"horizontal\",legend.title = element_blank(),\n        strip.background = element_rect(\n          color=\"#cccccc\", fill=\"white\", linewidth = 1, linetype=\"solid\"),\n        strip.text = element_text(colour = \"#333333\"))\n\n```\n\n## fig-results_t\n\n```{r BVIAS_t}\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n# plot data ----\n\ntmp_plot_data <- tmp_table0 %>%\n  # select only one practice for some products\n  filter(\n    practice == tmp_practice_names$labels[tmp_practice_names$practice == \"BVIAS_t\"]\n    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]\n    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%\n  # change names for conterfactuals\n  filter(match == \"no_match\" | FQS == \"Conventional\") %>%\n  mutate(FQS = factor(case_when(\n    match == \"no_match\" ~ FQS,\n    match != \"no_match\" ~ \"Counterfactual\"\n  ))) %>%\n  # add asterisk when signif\n  mutate(\n    stat_grp = case_when(\n      match == \"no_match\" ~ stat_grp,\n      match != \"no_match\" & padjust_bonf <= 0.05 ~ \"*\",\n      .default = \"\"\n  )) %>%\n  # add plot_x\n  mutate(\n    plot_x = paste0(product_name,match,FQS)\n  )\n\n\n# plot order ----\n\ntmp_plot_order <- tibble(\n  plot_x = rev(c(\"Soft Wheatno_matchConventional\",\n                 \"Soft Wheatno_matchOrganic Farming\",\n                 \"Soft WheatBle_tendre__ABCounterfactual\",\n                 \"Soft Wheatno_matchLabel Rouge\",\n                 \"Soft WheatBle_tendre__LRCounterfactual\",\n                 \"Grain Maizeno_matchConventional\",\n                 \"Grain Maizeno_matchOrganic Farming\",\n                 \"Grain MaizeMais_grain__ABCounterfactual\",\n                 \"Milkno_matchConventional\",\n                 \"Milkno_matchOrganic Farming\",\n                 \"MilkLait__ABCounterfactual\",\n                 \"Milkno_matchCharentes-Poitou Butter\",\n                 \"MilkLait__Beurre de Charentes-PoitouCounterfactual\",\n                 \"Milkno_matchComté - Morbier\",\n                 \"MilkLait__Comte - MorbierCounterfactual\"\n                 )),\n  labels = rev(c(\"Soft Wheat - Conventional\",\n                 \"Soft Wheat - Organic Farming\",\n                 \"Soft Wheat - Counterfactual Organic Farming\",\n                 \"Soft Wheat - Label Rouge\",\n                 \"Soft Wheat - Counterfactual Label Rouge\",\n                 \"Grain Maize - Conventional\",\n                 \"Grain Maize - Organic Farming\",\n                 \"Grain Maize - Counterfactual Organic Farming\",\n                 \"Milk - Conventional\",\n                 \"Milk - Organic Farming\",\n                 \"Milk - Counterfactual Organic Farming\",\n                 \"Milk - Charentes-Poitou Butter\",\n                 \"Milk - Counterfactual Charentes-Poitou Butter\",\n                 \"Milk - Comte - Morbier\",\n                 \"Milk - Counterfactual Comte - Morbier\")))\n\ntmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,\n                               levels = tmp_plot_order$plot_x,\n                               labels = tmp_plot_order$labels)\ntmp_plot_data <- tmp_plot_data %>% \n  filter(!is.na(plot_x))\ntmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)\n\n# plot ----\n\nggplot() +\n    # mean\n  geom_point(data = tmp_plot_data,\n             aes(x = plot_x, y = mean, fill = FQS,colour = FQS),\n             shape = 21, size=2, stroke = 1, position = position_dodge(width = 0.75)) +\n  # CI95%\n  geom_errorbar(data = tmp_plot_data,\n                aes(x = plot_x, ymin = mean-1.96*(sd/sqrt(nobs)), ymax = mean+1.96*(sd/sqrt(nobs)), colour = FQS),\n                linewidth=1,width = 0.5,position = position_dodge(width = 0.75)) +\n  # sd\n  geom_errorbar(data = tmp_plot_data,\n                aes(x = plot_x, ymin = mean-sd, ymax = mean+sd, colour = FQS),\n                linewidth=0.5,width = 0.5,linetype = \"dashed\",position = position_dodge(width = 0.75)) +\n  # n\n  geom_text(data = tmp_plot_data,\n            aes(x = plot_x, y=max(mean+sd)*1.1,colour = FQS,label = paste0(\"n = \",as.character(nobs))),\n            size=5,position = position_dodge(width = 1)) +\n  # stat groups\n  geom_text(data = tmp_plot_data,\n            aes(x = plot_x,y=0,colour = FQS,label = stat_grp),\n            size=5,position = position_dodge(width = 1))+\n  # theme\n  coord_flip() +\n  ylim(c(0,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +\n#  ylim(c(min(tmp_plot_data$mean-tmp_plot_data$sd)*1.03,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +\n  facet_wrap(vars(production_type),scales = \"free_y\",ncol = 1) +\n  labs(y = \"BVIAS_t\",x= \"Produits\") +\n  scale_fill_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels,) +\n  scale_colour_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels) +\n  theme_light() +\n  theme(legend.position = c(0,-1),\n        legend.direction = \"horizontal\",legend.title = element_blank(),\n        strip.background = element_rect(\n          color=\"#cccccc\", fill=\"white\", linewidth = 1, linetype=\"solid\"),\n        strip.text = element_text(colour = \"#333333\"))\n\n\n```\n\n## Practice_crops\n\n```{r practice_crops}\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n\n# plot data ----\n\ntmp_plot_data <- tmp_table0 %>%\n  # select only one practice for some products\n  filter(\n    practice_subset == \"crops\"\n    & production_type == \"crop\"\n    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]\n    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%\n  # add conventional mean\n    inner_join(.,tmp_table0 %>%\n              filter(FQS %in% c(\"Conventional\",\"Counterfactual\")) %>%\n              group_by(product_name,match,practice) %>%\n              reframe(mean_conv = mean,.groups = \"keep\"),\n            by = join_by(product_name, practice, match)) %>%\n  # change names for conterfactuals\n  filter(match == \"no_match\" | FQS != \"Conventional\") %>%\n  mutate(FQS = factor(case_when(\n    match == \"no_match\" ~ FQS,\n    match != \"no_match\" ~ \"Counterfactual\"\n  ))) %>%\n  # add asterisk when signif\n  mutate(\n    stat_grp = case_when(\n      match == \"no_match\" ~ stat_grp,\n      match != \"no_match\" & padjust_bonf <= 0.05 ~ \"*\",\n      .default = \"\"\n  )) %>%\n  # add plot_x\n  mutate(\n    plot_x = paste0(product_name,match,FQS)\n  )\n\n\n# plot order ----\n\ntmp_plot_order <- tibble(\n  plot_x = rev(c(\"Soft Wheatno_matchConventional\",\n                 \"Soft Wheatno_matchOrganic Farming\",\n                 \"Soft WheatBle_tendre__ABCounterfactual\",\n                 \"Soft Wheatno_matchLabel Rouge\",\n                 \"Soft WheatBle_tendre__LRCounterfactual\",\n                 \"Grain Maizeno_matchConventional\",\n                 \"Grain Maizeno_matchOrganic Farming\",\n                 \"Grain MaizeMais_grain__ABCounterfactual\"\n                 )),\n  labels = rev(c(\"Soft Wheat - Conventional\",\n                 \"Soft Wheat - Organic Farming\",\n                 \"Soft Wheat - Counterfactual Organic Farming\",\n                 \"Soft Wheat - Label Rouge\",\n                 \"Soft Wheat - Counterfactual Label Rouge\",\n                 \"Grain Maize - Conventional\",\n                 \"Grain Maize - Organic Farming\",\n                 \"Grain Maize - Counterfactual Organic Farming\"\n                 )))\n\ntmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,\n                               levels = tmp_plot_order$plot_x,\n                               labels = tmp_plot_order$labels)\ntmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)\n\ntmp_plot_data <- tmp_plot_data %>%\n  mutate(\n    both_pval = case_when(\n      pval_tukey <= 0.05 ~ pval_tukey,\n      padjust_bonf <= 0.05 ~ padjust_bonf,\n      .default = NA\n    ),\n    both_mean_diff = case_when(\n      both_pval <= 0.05 ~ mean/mean_conv,\n      .default = 0\n    )\n  ) %>%\n  mutate(\n    comp = case_when(\n      both_pval <= 0.05 & both_mean_diff < 1 ~ 1-both_mean_diff,\n      both_pval <= 0.05 & both_mean_diff >= 1 ~ both_mean_diff,\n      .default = 0\n    ),\n    comp_bin = case_when(\n      both_mean_diff > 1 ~ T,\n      .default = F\n    )\n  ) %>%\n  mutate(\n    text = case_when(\n      FQS == \"Counterfactual\" ~ mean_conv,\n      .default = mean\n    )\n  )\n\n\nggplot() +\n  geom_count(data = tmp_plot_data,\n             aes(x = practice, y = plot_x,\n                 colour = comp_bin,\n                 size = comp)\n             ) +\n  geom_text(data = tmp_plot_data,\n             aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),\n            size = 3.5, angle = 45) +\n  # theme\n  #scale_color_binned(type = \"viridis\")+\n  scale_size(\"Significant differences\",range = c(0,15)\n             ) +\n  scale_color_discrete(\"FQS > Conventional\") +\n  labs(x = \"Practices (rounded mean value)\", y= \"Products\") +\n  theme_light() +\n  theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),\n        text = element_text(size = 12))\n\n```\n\n## Practice herd\n```{r practice_herd}\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n\n# plot data ----\n\ntmp_plot_data <- tmp_table0 %>%\n  # select only one practice for some products\n  filter(\n    practice_subset == \"herd\"\n    & production_type == \"milk\"\n    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]\n    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%\n  # add conventional mean\n    inner_join(.,tmp_table0 %>%\n              filter(FQS %in% c(\"Conventional\",\"Counterfactual\")) %>%\n              group_by(product_name,match,practice) %>%\n              reframe(mean_conv = mean,.groups = \"keep\"),\n            by = join_by(product_name, practice, match)) %>%\n  # change names for conterfactuals\n  filter(match == \"no_match\" | FQS != \"Conventional\") %>%\n  mutate(FQS = factor(case_when(\n    match == \"no_match\" ~ FQS,\n    match != \"no_match\" ~ \"Counterfactual\"\n  ))) %>%\n  # add asterisk when signif\n  mutate(\n    stat_grp = case_when(\n      match == \"no_match\" ~ stat_grp,\n      match != \"no_match\" & padjust_bonf <= 0.05 ~ \"*\",\n      .default = \"\"\n  )) %>%\n  # add plot_x\n  mutate(\n    plot_x = paste0(product_name,match,FQS)\n  )\n\n\n# plot order ----\n\n\ntmp_plot_order <- tibble(\n  plot_x = rev(c(\"Milkno_matchConventional\",\n                 \"Milkno_matchOrganic Farming\",\n                 \"MilkLait__ABCounterfactual\",\n                 \"Milkno_matchCharentes-Poitou Butter\",\n                 \"MilkLait__Beurre de Charentes-PoitouCounterfactual\",\n                 \"Milkno_matchComté - Morbier\",\n                 \"MilkLait__Comte - MorbierCounterfactual\"\n                 )),\n  labels = rev(c(\"Milk - Conventional\",\n                 \"Milk - Organic Farming\",\n                 \"Milk - Counterfactual Organic Farming\",\n                 \"Milk - Charentes-Poitou Butter\",\n                 \"Milk - Counterfactual Charentes-Poitou Butter\",\n                 \"Milk - Comte - Morbier\",\n                 \"Milk - Counterfactual Comte - Morbier\")))\n\ntmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,\n                               levels = tmp_plot_order$plot_x,\n                               labels = tmp_plot_order$labels)\ntmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)\n\ntmp_plot_data <- tmp_plot_data %>%\n  mutate(\n    both_pval = case_when(\n      pval_tukey <= 0.05 ~ pval_tukey,\n      padjust_bonf <= 0.05 ~ padjust_bonf,\n      .default = NA\n    ),\n    both_mean_diff = case_when(\n      both_pval <= 0.05 ~ mean/mean_conv,\n      .default = 0\n    )\n  ) %>%\n  mutate(\n    comp = case_when(\n      both_pval <= 0.05 & both_mean_diff < 1 ~ 1-both_mean_diff,\n      both_pval <= 0.05 & both_mean_diff >= 1 ~ both_mean_diff,\n      .default = 0\n    ),\n    comp_bin = case_when(\n      both_mean_diff > 1 ~ T,\n      .default = F\n    )\n  ) %>%\n  mutate(\n    text = case_when(\n      FQS == \"Counterfactual\" ~ mean_conv,\n      .default = mean\n    )\n  )\n\n\nggplot() +\n  geom_count(data = tmp_plot_data,\n             aes(x = practice, y = plot_x,\n                 colour = comp_bin,\n                 size = comp)\n             ) +\n  geom_text(data = tmp_plot_data,\n             aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),\n            size = 3.25,angle = 45) +\n  # theme\n  scale_size(\"Significant differences\",range = c(0,15)) +\n  scale_color_discrete(\"FQS > Conventional\") +\n  labs(x = \"Practices (rounded mean value)\", y= \"Products\") +\n  theme_light() +\n  theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),\n        text = element_text(size = 12))\n\n```\n\n## Effect size\n\n```{r}\n\ntable_ES <- readr::read_csv(\"d:/users/srhuet/documents/BiodivLabel/CASD_export/CASD_export_241017/table_ES_table2024-10-17.csv\")\n\ntable_ES %>%\n filter(set %in% \"optim\") %>%\n  mutate(land_use_type = toupper(land_use_type),\n         id_col = factor(id_col,\n                         levels = practice_names$crops$practice[practice_names$crops$practice %in% id_col],\n                         labels = practice_names$crops$labels[practice_names$crops$practice %in% id_col])) %>%\n ggplot() +\n  aes(x = id_col, y = BVIAS_ES_5_95, fill = land_use_type) +\n  geom_bar(stat = \"summary\", fun = \"sum\", position = \"dodge2\") +\n  # theme\n  scale_fill_hue(direction = 1) +\n  coord_flip() +\n  facet_wrap(vars(land_use_type),scales = \"free_x\") +\n  labs(x = \"Practices\", y = \"Effect size (95th / 5th percentiles)\") +\n  theme_light() +\n  theme(legend.position = c(0,-1),\n        legend.direction = \"horizontal\",legend.title = element_blank(),\n        strip.background = element_rect(\n          color=\"#cccccc\", fill=\"white\", linewidth = 1, linetype=\"solid\"),\n        strip.text = element_text(colour = \"#333333\"))\n\n\n```\n\n\n\n# SM\n\n## Tables\n\n```{r tbl-results_crops}\n\n#| tbl-label: tbl-results_crops\n\nlibrary(gt)\n\ntmp_table <- tmp_table0 %>%\n  filter(production_type == \"crop\") %>%\n  select(!c(production_type,practice_subset)) %>%\n  arrange(practice,product_name,FQS,match) %>%\n  # groups\n  mutate(product_name = ifelse(row_number() == 1,\n                               as.character(product_name), \"\"),\n         .by = c(practice, product_name)) %>%\n  gt(groupname_col = \"practice\") %>%\n  tab_style(\n    style = list(\n      cell_fill(color = \"gray\"),\n      cell_text(weight = \"bolder\")\n    ),\n    locations = cells_row_groups(groups = everything())\n  ) %>%\n  # format numbers\n  fmt_auto() %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_conv_diff,pval_tukey),\n      rows = pval_tukey <= 0.05\n    )\n  ) %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_diff_match,padjust_bonf),\n      rows = padjust_bonf <= 0.05\n    )\n  ) %>%\n  # replace NAs\n  sub_missing(missing_text = \"-\") %>%\n  # column labels\n  tab_style(\n    style = list(\n      cell_text(weight = \"bolder\",size = \"large\")\n    ),\n    locations = cells_column_labels(everything())\n  ) %>%\n  cols_label(\n    practice = \"Pratiques\",\n    product_name = \"Production\",\n    FQS = \"Label\",\n    mean = \"Moyenne\",\n    sd = \"Ecart-Type\",\n    nobs = \"Effectif\",\n    mean_conv_diff = \"Différence avec la moyenne conventionnelle\",\n    pval_tukey = \"Tukey HSD p-value\",\n    nobs = \"Effectif apparié\",\n    mean_diff_match = \"Différence avec la moyenne contrefactuelle\",\n    padjust_bonf = \"Bonferroni adjusted t-test p-value\"\n  )\n\ntmp_table\n\ngtsave(tmp_table,\n       paste0(\"table_practice_crops_\",Sys.Date(),\".html\"),\n       \"data_out\")\n\n```\n\n```{r tbl-results_diary_feed}\n\ntmp_table <- tmp_table0 %>%\n  filter(production_type == \"milk\"\n         & practice %in% c(practice_names$BVIAS$labels,\n                           practice_names$feed$labels)\n         & FQS != \"AOP - AOC\") %>%\n  select(!c(production_type,practice_subset,product_name)) %>%\n  arrange(practice,FQS) %>%\n  # groups\n  gt(groupname_col = \"practice\") %>%\n  tab_style(\n    style = list(\n      cell_fill(color = \"gray\"),\n      cell_text(weight = \"bolder\")\n    ),\n    locations = cells_row_groups(groups = everything())\n  ) %>%\n  # format numbers\n  fmt_auto() %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_conv_diff,pval_tukey),\n      rows = pval_tukey <= 0.05\n    )\n  ) %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_diff_match,padjust_bonf),\n      rows = padjust_bonf <= 0.05\n    )\n  ) %>%\n  # replace NAs\n  sub_missing(missing_text = \"-\") %>%\n  # column labels\n  tab_style(\n    style = list(\n      cell_text(weight = \"bolder\",size = \"large\")\n    ),\n    locations = cells_column_labels(everything())\n  ) %>%\n  cols_label(\n    practice = \"Pratiques\",\n    FQS = \"Label\",\n    FQS_mean = \"Moyenne\",\n    std = \"Ecart-Type\",\n    r = \"Effectif\",\n    mean_conv_diff = \"Différence avec la moyenne conventionnelle\",\n    pval_tukey = \"Tukey HSD p-value\",\n    n_matched = \"Effectif apparié\",\n    mean_diff_match = \"Différence avec la moyenne contrefactuelle\",\n    padjust_bonf = \"Bonferroni adjusted t-test p-value\"\n  )\n\ntmp_table\n\ngtsave(tmp_table,\n       paste0(\"table_practice_diary_feed_\",Sys.Date(),\".html\"),\n       \"data_out\")\n\n```\n\n```{r tbl-results_diary_herd}\n\ntmp_table <- tmp_table0 %>%\n  filter(production_type == \"milk\"\n         & practice %in% c(tmp_practice_names_BVIAS$labels,\n                           tmp_practice_names_herd$labels)) %>%\n  select(!c(production_type,practice_subset,product_name)) %>%\n  arrange(practice,FQS) %>%\n  # groups\n  mutate(FQS = ifelse(row_number() == 1,\n                      as.character(FQS), \"\"),\n         .by = c(practice, FQS)) %>%\n  gt(groupname_col = \"practice\") %>%\n  tab_style(\n    style = list(\n      cell_fill(color = \"gray\"),\n      cell_text(weight = \"bolder\")\n    ),\n    locations = cells_row_groups(groups = everything())\n  ) %>%\n  # format numbers\n  fmt_auto() %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_conv_diff,pval_tukey),\n      rows = pval_tukey <= 0.05\n    )\n  ) %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_diff_match,padjust_bonf),\n      rows = padjust_bonf <= 0.05\n    )\n  ) %>%\n  # replace NAs\n  sub_missing(missing_text = \"-\") %>%\n  # column labels\n  tab_style(\n    style = list(\n      cell_text(weight = \"bolder\",size = \"large\")\n    ),\n    locations = cells_column_labels(everything())\n  ) %>%\n  cols_label(\n    practice = \"Pratiques\",\n    FQS = \"Label\",\n    FQS_mean = \"Moyenne\",\n    std = \"Ecart-Type\",\n    r = \"Effectif\",\n    mean_conv_diff = \"Différence avec la moyenne conventionnelle\",\n    pval_tukey = \"Tukey HSD p-value\",\n    n_matched = \"Effectif apparié\",\n    mean_diff_match = \"Différence avec la moyenne contrefactuelle\",\n    padjust_bonf = \"Bonferroni adjusted t-test p-value\"\n  )\n\ntmp_table\n\ngtsave(tmp_table,\n       paste0(\"table_practice_diary_herd_\",Sys.Date(),\".html\"),\n       \"data_out\")\n\n```\n\n\n\n","srcMarkdownNoYaml":"\n\n# Data\n\n```{r import_data}\n\nlibrary(readr)\n\nstat_desc = read_csv(\"~/BiodivLabel/CASD_export/CASD_export_241017/stat_desc_BVIAS_SIQO2024-10-17.csv\", \n                            col_types = cols(mean = col_double(), \n                                             sd = col_double(), nobs = col_double(), \n                                             q0 = col_double()))[,1:18]\n\nstat_tukey_hsd = readr::read_csv(\"~/BiodivLabel/CASD_export/CASD_export_241017/tmp_TukeyHSD_2024-10-17.csv\")\n\nstat_paired_t_test = readr::read_csv(\"~/BiodivLabel/CASD_export/CASD_export_241017/tmp_paired_ttest_2024-10-17.csv\")\n  \n```\n\n\n```{r product_names, include=FALSE, echo=FALSE}\nlibrary(tibble)\n\ntmp_product_names <- tibble(\n  product_name = c(\n    \"Ble_tendre\",\n    \"Mais_grain\",\n    \"Triticale\",\n    \"Melange_cereales_d_ete\",\n    \"Autres_cereales\",\n    \"Orge_d_hiver_et_escourgeon\",\n    \"Orge_de_printemps\",\n    \"Tournesol\",\n    \"Lait\" \n  ),\n  labels = c(\n    \"Soft Wheat\",\n    \"Grain Maize\",\n    \"Triticale\",\n    \"Summer Cereal Mix\",\n    \"Other Cereals\",\n    \"Winter Barley\",\n    \"Spring Barley\",\n    \"Tournesol\",\n    \"Milk\" \n  )\n) %>%\n  mutate(\n    plot = case_when(\n      product_name %in% c(\"Ble_tendre\",\"Mais_grain\",\"Lait\") ~T,\n      .default = F\n    )\n  )\n\ntmp_FQS_names <- tibble(\n  FQS = c(\n    \"Conventionnel\",\n    \"AB\",\n    \"LR\",\n    \"Comte - Morbier\",\n    \"Beurre de Charentes-Poitou\",\n    \"AOP - AOC\",\n    \"Bleu d'Auvergne - Cantal\",\n    \"Fromages de Savoie\",\n    \"Munster\",\n    \"Counterfactual\"\n  ),\n  labels = c(\n    \"Conventional\",\n    \"Organic Farming\",\n    \"Label Rouge\",\n    \"Comté - Morbier\",\n    \"Charentes-Poitou Butter\",\n    \"AOP - AOC\",\n    \"Bleu d'Auvergne - Cantal\",\n    \"Savoie Cheeses\",\n    \"Munster\",\n    \"Counterfactual\"\n  ),\n  colors = c(\n    \"darkgrey\",\n    \"palegreen3\",\n    \"indianred\",\n    \"plum4\",\n    \"plum4\",\n    \"plum4\",\n    \"plum4\",\n    \"goldenrod3\",\n    \"plum4\",\n    \"#333333\"\n)) %>%\n  mutate(\n    plot = case_when(\n      FQS %in% c(\"Conventionnel\",\"AB\",\"LR\",\"Beurre de Charentes-Poitou\",\"Comte - Morbier\") ~T,\n      .default = F\n    ))\nnames(tmp_FQS_names$colors) <- tmp_FQS_names$labels \nnames(tmp_FQS_names$labels) <- tmp_FQS_names$labels\n\n# practice names\ntmp_practice_names <- Reduce(bind_rows,list(\n  practice_names$BVIAS,\n  practice_names$crops,\n  practice_names$herd,\n  practice_names$feed\n))\n\n```\n\n```{r practices_names}\n\nlibrary(dplyr)\n\n# crops ----\ntmp_practice_names <- tibble(\n  practice = rev(c(\"A.2.1\",\n                   \"A.2.2\",\n                   \"A.3.2\",\n                   \"A.3.3\",\n                   \"A.3.1\",\n                   \"A.4.3\",\n                   \"A.4.5\",\n                   \"A.5.1\",\n                   \"yield\")),\n  labels = rev(c(\"Hedge density \\n (linear meter / ha)\",\n                 \"Mean Field Size (ha)\",\n                 \"Soil cover (number of uncovered day)\",\n                 \"Cultural Diversity (Shannon Index)\",\n                 \"Tillage (L diesel / ha)\",\n                 \"Share of mineral fertilizer (%)\",\n                 \"Fertilization (kg N / ha)\", \n                 \"Pesticides (€~TFI~UDNu / ha)\",\n                 \"Yield (kg / ha)\")))\ntmp_practice_names$practice <- factor(tmp_practice_names$practice)\nnames(tmp_practice_names$labels) <- tmp_practice_names$practice\n\nif (exists(\"practice_names\")) {\n  practice_names[[\"crops\"]] <- tmp_practice_names\n} else {\n  practice_names = list()\n  practice_names[[\"crops\"]] <- tmp_practice_names\n}\n\n# Herd ----\n\ntmp_practice_names <- tibble(\n  practice = c(\"yield_l_pha\",\n               \"yield_l_panim\",\n               \"nb_cow_pha\",\n               \"cow_pMFA\",\n               \"feed_autonomy\",\n               \"kg_DM_panim_maize_produced\",\n               #\"kg_DM_panim_soy_meal\",\n               \"share_soybean\",\n               #\"share_concent_purchased\",\n               \"share_concent\",\n               \"protein_crop_ha_pha_pseudofarm\",\n               \"MFA_pcow\",\n               \"MFA_pha_pseudofarm\",\n               \"ha_temp_pasture_pha_pseudofarm\",\n               \"grassland_share_pseudofarm\"#,\n               #\"grassland_share_farm\"\n  ),\n  labels = c(\"Yield (L milk / ha pseudofarm)\",\n             \"Yield (L milk / dairy cow)\",\n             \"Livestock density (dairy cow / ha pseudofarm)\",\n             \"Livestock density (dairy cow / ha MFA)\",\n             \"Feed autonomy (kg produced feed / kg feed)\",\n             \"Forage maize (kg produced forage maize / dairy cow)\",\n             #\"Soyben meal (kg purchased soybean meal / dairy cow)\",\n             \"Soybean meal (kg purchased soybean meal / kg feed)\",\n             #\"Part des concentrés dans les aliments achetés (kg de concentrés / kg d'aliments achetés)\",\n             \"Concentrate (kg concentrate / kg feed)\",\n             \"Legumes (ha legumes / ha pseudofarm\",\n             \"Main Forage Area (MFA / dairy cow)\",\n             \"Main Forage Area (ha MFA / ha pseudofarm)\",\n             \"Temporary meadows (ha temp. meadow / ha pseudofarm)\",\n             \"Permanent grassland (ha perm. grassland / ha pseudofarm)\"#,\n             #\"Part des prairies permanentes (ha prairie / ha ferme)\"\n  ))\n\ntmp_practice_names$practice <- factor(tmp_practice_names$practice)\nnames(tmp_practice_names$labels) <- tmp_practice_names$practice\n\nif (exists(\"practice_names\")) {\n  practice_names[[\"herd\"]] <- tmp_practice_names\n} else {\n  practice_names = list()\n  practice_names[[\"herd\"]] <- tmp_practice_names\n}\n\n# Feed ----\n\ntmp_practice_names <- practice_names$crop %>%\n  mutate(practice = factor(paste0(\"feed_\",practice)))\nnames(tmp_practice_names$labels) <- tmp_practice_names$practice\n\nif (exists(\"practice_names\")) {\n  practice_names[[\"feed\"]] <- tmp_practice_names\n} else {\n  practice_names = list()\n  practice_names[[\"feed\"]] <- tmp_practice_names\n}\n\n# BVIAS ----\n\ntmp_practice_names <- tibble(\n  \"practice\" = c(\"BVIAS_ha\",\"BVIAS_kg\",\"BVIAS_t\"),\n  \"labels\" = c(\"BVIAS (ha)\",\"BVIAS (kg)\",\"BVIAS (t)\"))\ntmp_practice_names$practice <- factor(tmp_practice_names$practice)\nnames(tmp_practice_names$labels) <- tmp_practice_names$practice\n\nif (exists(\"practice_names\")) {\n    practice_names[[\"BVIAS\"]] <- tmp_practice_names\n} else {\n  practice_names = list()\n  practice_names[[\"BVIAS\"]] <- tmp_practice_names\n}\n\n# all ----\n# practice names\ntmp_practice_names <- Reduce(bind_rows,list(\n  practice_names$BVIAS,\n  practice_names$crops,\n  practice_names$herd,\n  practice_names$feed\n))\n\n```\n\n```{r tbl-results, include=FALSE, echo=FALSE}\n\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Table ----\n\ntmp_table0 <- stat_desc %>%\n  # add unmatched stat test\n  left_join(.,stat_tukey_hsd %>%\n              select(production_type, product_name, FQS, product_FQS, practice, practice_subset,\n                     stat_grp,stat_grp_conv,stat_grp_conv_diff,mean_conv_diff,pval_tukey) %>%\n              mutate(match = \"no_match\"),\n            by = join_by(production_type, product_name, FQS, product_FQS, practice, practice_subset,match)) %>%\n  # add matching results\n  left_join(.,stat_paired_t_test %>% \n              select(production_type, product_name, FQS, practice, match,\n                     mean_diff_match,pval_pttest,padjust_bonf),\n            by = join_by(production_type, product_name, FQS, practice, match)) %>%\n  # order factors\n  mutate(\n    practice = factor(practice,levels = tmp_practice_names$practice,labels = tmp_practice_names$labels,ordered = T),\n    product_name = factor(product_name,levels = tmp_product_names$product_name,labels = tmp_product_names$labels,ordered = T),\n    FQS = factor(FQS,levels = tmp_FQS_names$FQS,labels = tmp_FQS_names$labels,ordered = T)\n  )\n\n```\n\n# Main\n\n## fig-results_ha\n\n```{r BVIAS_ha}\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n\n# plot data ----\n\ntmp_plot_data <- tmp_table0 %>%\n  # select only one practice for some products\n  filter(\n    practice == tmp_practice_names$labels[tmp_practice_names$practice == \"BVIAS_ha\"]\n    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]\n    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%\n  # change names for conterfactuals\n  filter(match == \"no_match\" | FQS == \"Conventional\") %>%\n  mutate(FQS = factor(case_when(\n    match == \"no_match\" ~ FQS,\n    match != \"no_match\" ~ \"Counterfactual\"\n  ))) %>%\n  # add asterisk when signif\n  mutate(\n    stat_grp = case_when(\n      match == \"no_match\" ~ stat_grp,\n      match != \"no_match\" & padjust_bonf <= 0.05 ~ \"*\",\n      .default = \"\"\n  )) %>%\n  # add plot_x\n  mutate(\n    plot_x = paste0(product_name,match,FQS)\n  )\n\n\n# plot order ----\n\ntmp_plot_order <- tibble(\n  plot_x = rev(c(\"Soft Wheatno_matchConventional\",\n                 \"Soft Wheatno_matchOrganic Farming\",\n                 \"Soft WheatBle_tendre__ABCounterfactual\",\n                 \"Soft Wheatno_matchLabel Rouge\",\n                 \"Soft WheatBle_tendre__LRCounterfactual\",\n                 \"Grain Maizeno_matchConventional\",\n                 \"Grain Maizeno_matchOrganic Farming\",\n                 \"Grain MaizeMais_grain__ABCounterfactual\",\n                 \"Milkno_matchConventional\",\n                 \"Milkno_matchOrganic Farming\",\n                 \"MilkLait__ABCounterfactual\",\n                 \"Milkno_matchCharentes-Poitou Butter\",\n                 \"MilkLait__Beurre de Charentes-PoitouCounterfactual\",\n                 \"Milkno_matchComté - Morbier\",\n                 \"MilkLait__Comte - MorbierCounterfactual\"\n                 )),\n  labels = rev(c(\"Soft Wheat - Conventional\",\n                 \"Soft Wheat - Organic Farming\",\n                 \"Soft Wheat - Counterfactual Organic Farming\",\n                 \"Soft Wheat - Label Rouge\",\n                 \"Soft Wheat - Counterfactual Label Rouge\",\n                 \"Grain Maize - Conventional\",\n                 \"Grain Maize - Organic Farming\",\n                 \"Grain Maize - Counterfactual Organic Farming\",\n                 \"Milk - Conventional\",\n                 \"Milk - Organic Farming\",\n                 \"Milk - Counterfactual Organic Farming\",\n                 \"Milk - Charentes-Poitou Butter\",\n                 \"Milk - Counterfactual Charentes-Poitou Butter\",\n                 \"Milk - Comte - Morbier\",\n                 \"Milk - Counterfactual Comte - Morbier\")))\n\ntmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,\n                               levels = tmp_plot_order$plot_x,\n                               labels = tmp_plot_order$labels)\ntmp_plot_data <- tmp_plot_data %>% filter(!is.na(plot_x))\ntmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)\n\n# plot ----\n\nggplot() +\n  # mean\n  geom_point(data = tmp_plot_data,\n             aes(x = plot_x, y = mean, fill = FQS,colour = FQS),\n             shape = 21, size=2, stroke = 1, position = position_dodge(width = 0.75)) +\n  # CI95%\n  geom_errorbar(data = tmp_plot_data,\n                aes(x = plot_x, ymin = mean-1.96*(sd/sqrt(nobs)), ymax = mean+1.96*(sd/sqrt(nobs)), colour = FQS),\n                linewidth=1,width = 0.5,position = position_dodge(width = 0.75)) +\n  # sd\n  geom_errorbar(data = tmp_plot_data,\n                aes(x = plot_x, ymin = mean-sd, ymax = mean+sd, colour = FQS),\n                linewidth=0.5,width = 0.5,linetype = \"dashed\",position = position_dodge(width = 0.75)) +\n  # n\n  geom_text(data = tmp_plot_data,\n            aes(x = plot_x, y=max(mean+sd)*1.1,colour = FQS,label = paste0(\"n = \",as.character(nobs))),\n            size=5,position = position_dodge(width = 1)) +\n  # stat groups\n  geom_text(data = tmp_plot_data,\n            aes(x = plot_x,y=0,colour = FQS,label = stat_grp),\n            size=5,position = position_dodge(width = 1))+\n  # theme\n  coord_flip() +\n  ylim(c(0,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +\n  facet_wrap(vars(production_type),scales = \"free_y\",ncol = 1,\n             labeller = labeller(crop = \"Crops\", milk = \"Milk\")) +\n  labs(y = \"BVIAS_ha\",x= \"Products\") +\n  scale_fill_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels,) +\n  scale_colour_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels) +\n  theme_light() +\n  theme(legend.position = \"none\",\n        legend.direction = \"horizontal\",legend.title = element_blank(),\n        strip.background = element_rect(\n          color=\"#cccccc\", fill=\"white\", linewidth = 1, linetype=\"solid\"),\n        strip.text = element_text(colour = \"#333333\"))\n\n```\n\n## fig-results_t\n\n```{r BVIAS_t}\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n# plot data ----\n\ntmp_plot_data <- tmp_table0 %>%\n  # select only one practice for some products\n  filter(\n    practice == tmp_practice_names$labels[tmp_practice_names$practice == \"BVIAS_t\"]\n    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]\n    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%\n  # change names for conterfactuals\n  filter(match == \"no_match\" | FQS == \"Conventional\") %>%\n  mutate(FQS = factor(case_when(\n    match == \"no_match\" ~ FQS,\n    match != \"no_match\" ~ \"Counterfactual\"\n  ))) %>%\n  # add asterisk when signif\n  mutate(\n    stat_grp = case_when(\n      match == \"no_match\" ~ stat_grp,\n      match != \"no_match\" & padjust_bonf <= 0.05 ~ \"*\",\n      .default = \"\"\n  )) %>%\n  # add plot_x\n  mutate(\n    plot_x = paste0(product_name,match,FQS)\n  )\n\n\n# plot order ----\n\ntmp_plot_order <- tibble(\n  plot_x = rev(c(\"Soft Wheatno_matchConventional\",\n                 \"Soft Wheatno_matchOrganic Farming\",\n                 \"Soft WheatBle_tendre__ABCounterfactual\",\n                 \"Soft Wheatno_matchLabel Rouge\",\n                 \"Soft WheatBle_tendre__LRCounterfactual\",\n                 \"Grain Maizeno_matchConventional\",\n                 \"Grain Maizeno_matchOrganic Farming\",\n                 \"Grain MaizeMais_grain__ABCounterfactual\",\n                 \"Milkno_matchConventional\",\n                 \"Milkno_matchOrganic Farming\",\n                 \"MilkLait__ABCounterfactual\",\n                 \"Milkno_matchCharentes-Poitou Butter\",\n                 \"MilkLait__Beurre de Charentes-PoitouCounterfactual\",\n                 \"Milkno_matchComté - Morbier\",\n                 \"MilkLait__Comte - MorbierCounterfactual\"\n                 )),\n  labels = rev(c(\"Soft Wheat - Conventional\",\n                 \"Soft Wheat - Organic Farming\",\n                 \"Soft Wheat - Counterfactual Organic Farming\",\n                 \"Soft Wheat - Label Rouge\",\n                 \"Soft Wheat - Counterfactual Label Rouge\",\n                 \"Grain Maize - Conventional\",\n                 \"Grain Maize - Organic Farming\",\n                 \"Grain Maize - Counterfactual Organic Farming\",\n                 \"Milk - Conventional\",\n                 \"Milk - Organic Farming\",\n                 \"Milk - Counterfactual Organic Farming\",\n                 \"Milk - Charentes-Poitou Butter\",\n                 \"Milk - Counterfactual Charentes-Poitou Butter\",\n                 \"Milk - Comte - Morbier\",\n                 \"Milk - Counterfactual Comte - Morbier\")))\n\ntmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,\n                               levels = tmp_plot_order$plot_x,\n                               labels = tmp_plot_order$labels)\ntmp_plot_data <- tmp_plot_data %>% \n  filter(!is.na(plot_x))\ntmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)\n\n# plot ----\n\nggplot() +\n    # mean\n  geom_point(data = tmp_plot_data,\n             aes(x = plot_x, y = mean, fill = FQS,colour = FQS),\n             shape = 21, size=2, stroke = 1, position = position_dodge(width = 0.75)) +\n  # CI95%\n  geom_errorbar(data = tmp_plot_data,\n                aes(x = plot_x, ymin = mean-1.96*(sd/sqrt(nobs)), ymax = mean+1.96*(sd/sqrt(nobs)), colour = FQS),\n                linewidth=1,width = 0.5,position = position_dodge(width = 0.75)) +\n  # sd\n  geom_errorbar(data = tmp_plot_data,\n                aes(x = plot_x, ymin = mean-sd, ymax = mean+sd, colour = FQS),\n                linewidth=0.5,width = 0.5,linetype = \"dashed\",position = position_dodge(width = 0.75)) +\n  # n\n  geom_text(data = tmp_plot_data,\n            aes(x = plot_x, y=max(mean+sd)*1.1,colour = FQS,label = paste0(\"n = \",as.character(nobs))),\n            size=5,position = position_dodge(width = 1)) +\n  # stat groups\n  geom_text(data = tmp_plot_data,\n            aes(x = plot_x,y=0,colour = FQS,label = stat_grp),\n            size=5,position = position_dodge(width = 1))+\n  # theme\n  coord_flip() +\n  ylim(c(0,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +\n#  ylim(c(min(tmp_plot_data$mean-tmp_plot_data$sd)*1.03,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +\n  facet_wrap(vars(production_type),scales = \"free_y\",ncol = 1) +\n  labs(y = \"BVIAS_t\",x= \"Produits\") +\n  scale_fill_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels,) +\n  scale_colour_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels) +\n  theme_light() +\n  theme(legend.position = c(0,-1),\n        legend.direction = \"horizontal\",legend.title = element_blank(),\n        strip.background = element_rect(\n          color=\"#cccccc\", fill=\"white\", linewidth = 1, linetype=\"solid\"),\n        strip.text = element_text(colour = \"#333333\"))\n\n\n```\n\n## Practice_crops\n\n```{r practice_crops}\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n\n# plot data ----\n\ntmp_plot_data <- tmp_table0 %>%\n  # select only one practice for some products\n  filter(\n    practice_subset == \"crops\"\n    & production_type == \"crop\"\n    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]\n    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%\n  # add conventional mean\n    inner_join(.,tmp_table0 %>%\n              filter(FQS %in% c(\"Conventional\",\"Counterfactual\")) %>%\n              group_by(product_name,match,practice) %>%\n              reframe(mean_conv = mean,.groups = \"keep\"),\n            by = join_by(product_name, practice, match)) %>%\n  # change names for conterfactuals\n  filter(match == \"no_match\" | FQS != \"Conventional\") %>%\n  mutate(FQS = factor(case_when(\n    match == \"no_match\" ~ FQS,\n    match != \"no_match\" ~ \"Counterfactual\"\n  ))) %>%\n  # add asterisk when signif\n  mutate(\n    stat_grp = case_when(\n      match == \"no_match\" ~ stat_grp,\n      match != \"no_match\" & padjust_bonf <= 0.05 ~ \"*\",\n      .default = \"\"\n  )) %>%\n  # add plot_x\n  mutate(\n    plot_x = paste0(product_name,match,FQS)\n  )\n\n\n# plot order ----\n\ntmp_plot_order <- tibble(\n  plot_x = rev(c(\"Soft Wheatno_matchConventional\",\n                 \"Soft Wheatno_matchOrganic Farming\",\n                 \"Soft WheatBle_tendre__ABCounterfactual\",\n                 \"Soft Wheatno_matchLabel Rouge\",\n                 \"Soft WheatBle_tendre__LRCounterfactual\",\n                 \"Grain Maizeno_matchConventional\",\n                 \"Grain Maizeno_matchOrganic Farming\",\n                 \"Grain MaizeMais_grain__ABCounterfactual\"\n                 )),\n  labels = rev(c(\"Soft Wheat - Conventional\",\n                 \"Soft Wheat - Organic Farming\",\n                 \"Soft Wheat - Counterfactual Organic Farming\",\n                 \"Soft Wheat - Label Rouge\",\n                 \"Soft Wheat - Counterfactual Label Rouge\",\n                 \"Grain Maize - Conventional\",\n                 \"Grain Maize - Organic Farming\",\n                 \"Grain Maize - Counterfactual Organic Farming\"\n                 )))\n\ntmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,\n                               levels = tmp_plot_order$plot_x,\n                               labels = tmp_plot_order$labels)\ntmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)\n\ntmp_plot_data <- tmp_plot_data %>%\n  mutate(\n    both_pval = case_when(\n      pval_tukey <= 0.05 ~ pval_tukey,\n      padjust_bonf <= 0.05 ~ padjust_bonf,\n      .default = NA\n    ),\n    both_mean_diff = case_when(\n      both_pval <= 0.05 ~ mean/mean_conv,\n      .default = 0\n    )\n  ) %>%\n  mutate(\n    comp = case_when(\n      both_pval <= 0.05 & both_mean_diff < 1 ~ 1-both_mean_diff,\n      both_pval <= 0.05 & both_mean_diff >= 1 ~ both_mean_diff,\n      .default = 0\n    ),\n    comp_bin = case_when(\n      both_mean_diff > 1 ~ T,\n      .default = F\n    )\n  ) %>%\n  mutate(\n    text = case_when(\n      FQS == \"Counterfactual\" ~ mean_conv,\n      .default = mean\n    )\n  )\n\n\nggplot() +\n  geom_count(data = tmp_plot_data,\n             aes(x = practice, y = plot_x,\n                 colour = comp_bin,\n                 size = comp)\n             ) +\n  geom_text(data = tmp_plot_data,\n             aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),\n            size = 3.5, angle = 45) +\n  # theme\n  #scale_color_binned(type = \"viridis\")+\n  scale_size(\"Significant differences\",range = c(0,15)\n             ) +\n  scale_color_discrete(\"FQS > Conventional\") +\n  labs(x = \"Practices (rounded mean value)\", y= \"Products\") +\n  theme_light() +\n  theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),\n        text = element_text(size = 12))\n\n```\n\n## Practice herd\n```{r practice_herd}\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\n\n# plot data ----\n\ntmp_plot_data <- tmp_table0 %>%\n  # select only one practice for some products\n  filter(\n    practice_subset == \"herd\"\n    & production_type == \"milk\"\n    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]\n    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%\n  # add conventional mean\n    inner_join(.,tmp_table0 %>%\n              filter(FQS %in% c(\"Conventional\",\"Counterfactual\")) %>%\n              group_by(product_name,match,practice) %>%\n              reframe(mean_conv = mean,.groups = \"keep\"),\n            by = join_by(product_name, practice, match)) %>%\n  # change names for conterfactuals\n  filter(match == \"no_match\" | FQS != \"Conventional\") %>%\n  mutate(FQS = factor(case_when(\n    match == \"no_match\" ~ FQS,\n    match != \"no_match\" ~ \"Counterfactual\"\n  ))) %>%\n  # add asterisk when signif\n  mutate(\n    stat_grp = case_when(\n      match == \"no_match\" ~ stat_grp,\n      match != \"no_match\" & padjust_bonf <= 0.05 ~ \"*\",\n      .default = \"\"\n  )) %>%\n  # add plot_x\n  mutate(\n    plot_x = paste0(product_name,match,FQS)\n  )\n\n\n# plot order ----\n\n\ntmp_plot_order <- tibble(\n  plot_x = rev(c(\"Milkno_matchConventional\",\n                 \"Milkno_matchOrganic Farming\",\n                 \"MilkLait__ABCounterfactual\",\n                 \"Milkno_matchCharentes-Poitou Butter\",\n                 \"MilkLait__Beurre de Charentes-PoitouCounterfactual\",\n                 \"Milkno_matchComté - Morbier\",\n                 \"MilkLait__Comte - MorbierCounterfactual\"\n                 )),\n  labels = rev(c(\"Milk - Conventional\",\n                 \"Milk - Organic Farming\",\n                 \"Milk - Counterfactual Organic Farming\",\n                 \"Milk - Charentes-Poitou Butter\",\n                 \"Milk - Counterfactual Charentes-Poitou Butter\",\n                 \"Milk - Comte - Morbier\",\n                 \"Milk - Counterfactual Comte - Morbier\")))\n\ntmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,\n                               levels = tmp_plot_order$plot_x,\n                               labels = tmp_plot_order$labels)\ntmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)\n\ntmp_plot_data <- tmp_plot_data %>%\n  mutate(\n    both_pval = case_when(\n      pval_tukey <= 0.05 ~ pval_tukey,\n      padjust_bonf <= 0.05 ~ padjust_bonf,\n      .default = NA\n    ),\n    both_mean_diff = case_when(\n      both_pval <= 0.05 ~ mean/mean_conv,\n      .default = 0\n    )\n  ) %>%\n  mutate(\n    comp = case_when(\n      both_pval <= 0.05 & both_mean_diff < 1 ~ 1-both_mean_diff,\n      both_pval <= 0.05 & both_mean_diff >= 1 ~ both_mean_diff,\n      .default = 0\n    ),\n    comp_bin = case_when(\n      both_mean_diff > 1 ~ T,\n      .default = F\n    )\n  ) %>%\n  mutate(\n    text = case_when(\n      FQS == \"Counterfactual\" ~ mean_conv,\n      .default = mean\n    )\n  )\n\n\nggplot() +\n  geom_count(data = tmp_plot_data,\n             aes(x = practice, y = plot_x,\n                 colour = comp_bin,\n                 size = comp)\n             ) +\n  geom_text(data = tmp_plot_data,\n             aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),\n            size = 3.25,angle = 45) +\n  # theme\n  scale_size(\"Significant differences\",range = c(0,15)) +\n  scale_color_discrete(\"FQS > Conventional\") +\n  labs(x = \"Practices (rounded mean value)\", y= \"Products\") +\n  theme_light() +\n  theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),\n        text = element_text(size = 12))\n\n```\n\n## Effect size\n\n```{r}\n\ntable_ES <- readr::read_csv(\"d:/users/srhuet/documents/BiodivLabel/CASD_export/CASD_export_241017/table_ES_table2024-10-17.csv\")\n\ntable_ES %>%\n filter(set %in% \"optim\") %>%\n  mutate(land_use_type = toupper(land_use_type),\n         id_col = factor(id_col,\n                         levels = practice_names$crops$practice[practice_names$crops$practice %in% id_col],\n                         labels = practice_names$crops$labels[practice_names$crops$practice %in% id_col])) %>%\n ggplot() +\n  aes(x = id_col, y = BVIAS_ES_5_95, fill = land_use_type) +\n  geom_bar(stat = \"summary\", fun = \"sum\", position = \"dodge2\") +\n  # theme\n  scale_fill_hue(direction = 1) +\n  coord_flip() +\n  facet_wrap(vars(land_use_type),scales = \"free_x\") +\n  labs(x = \"Practices\", y = \"Effect size (95th / 5th percentiles)\") +\n  theme_light() +\n  theme(legend.position = c(0,-1),\n        legend.direction = \"horizontal\",legend.title = element_blank(),\n        strip.background = element_rect(\n          color=\"#cccccc\", fill=\"white\", linewidth = 1, linetype=\"solid\"),\n        strip.text = element_text(colour = \"#333333\"))\n\n\n```\n\n\n\n# SM\n\n## Tables\n\n```{r tbl-results_crops}\n\n#| tbl-label: tbl-results_crops\n\nlibrary(gt)\n\ntmp_table <- tmp_table0 %>%\n  filter(production_type == \"crop\") %>%\n  select(!c(production_type,practice_subset)) %>%\n  arrange(practice,product_name,FQS,match) %>%\n  # groups\n  mutate(product_name = ifelse(row_number() == 1,\n                               as.character(product_name), \"\"),\n         .by = c(practice, product_name)) %>%\n  gt(groupname_col = \"practice\") %>%\n  tab_style(\n    style = list(\n      cell_fill(color = \"gray\"),\n      cell_text(weight = \"bolder\")\n    ),\n    locations = cells_row_groups(groups = everything())\n  ) %>%\n  # format numbers\n  fmt_auto() %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_conv_diff,pval_tukey),\n      rows = pval_tukey <= 0.05\n    )\n  ) %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_diff_match,padjust_bonf),\n      rows = padjust_bonf <= 0.05\n    )\n  ) %>%\n  # replace NAs\n  sub_missing(missing_text = \"-\") %>%\n  # column labels\n  tab_style(\n    style = list(\n      cell_text(weight = \"bolder\",size = \"large\")\n    ),\n    locations = cells_column_labels(everything())\n  ) %>%\n  cols_label(\n    practice = \"Pratiques\",\n    product_name = \"Production\",\n    FQS = \"Label\",\n    mean = \"Moyenne\",\n    sd = \"Ecart-Type\",\n    nobs = \"Effectif\",\n    mean_conv_diff = \"Différence avec la moyenne conventionnelle\",\n    pval_tukey = \"Tukey HSD p-value\",\n    nobs = \"Effectif apparié\",\n    mean_diff_match = \"Différence avec la moyenne contrefactuelle\",\n    padjust_bonf = \"Bonferroni adjusted t-test p-value\"\n  )\n\ntmp_table\n\ngtsave(tmp_table,\n       paste0(\"table_practice_crops_\",Sys.Date(),\".html\"),\n       \"data_out\")\n\n```\n\n```{r tbl-results_diary_feed}\n\ntmp_table <- tmp_table0 %>%\n  filter(production_type == \"milk\"\n         & practice %in% c(practice_names$BVIAS$labels,\n                           practice_names$feed$labels)\n         & FQS != \"AOP - AOC\") %>%\n  select(!c(production_type,practice_subset,product_name)) %>%\n  arrange(practice,FQS) %>%\n  # groups\n  gt(groupname_col = \"practice\") %>%\n  tab_style(\n    style = list(\n      cell_fill(color = \"gray\"),\n      cell_text(weight = \"bolder\")\n    ),\n    locations = cells_row_groups(groups = everything())\n  ) %>%\n  # format numbers\n  fmt_auto() %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_conv_diff,pval_tukey),\n      rows = pval_tukey <= 0.05\n    )\n  ) %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_diff_match,padjust_bonf),\n      rows = padjust_bonf <= 0.05\n    )\n  ) %>%\n  # replace NAs\n  sub_missing(missing_text = \"-\") %>%\n  # column labels\n  tab_style(\n    style = list(\n      cell_text(weight = \"bolder\",size = \"large\")\n    ),\n    locations = cells_column_labels(everything())\n  ) %>%\n  cols_label(\n    practice = \"Pratiques\",\n    FQS = \"Label\",\n    FQS_mean = \"Moyenne\",\n    std = \"Ecart-Type\",\n    r = \"Effectif\",\n    mean_conv_diff = \"Différence avec la moyenne conventionnelle\",\n    pval_tukey = \"Tukey HSD p-value\",\n    n_matched = \"Effectif apparié\",\n    mean_diff_match = \"Différence avec la moyenne contrefactuelle\",\n    padjust_bonf = \"Bonferroni adjusted t-test p-value\"\n  )\n\ntmp_table\n\ngtsave(tmp_table,\n       paste0(\"table_practice_diary_feed_\",Sys.Date(),\".html\"),\n       \"data_out\")\n\n```\n\n```{r tbl-results_diary_herd}\n\ntmp_table <- tmp_table0 %>%\n  filter(production_type == \"milk\"\n         & practice %in% c(tmp_practice_names_BVIAS$labels,\n                           tmp_practice_names_herd$labels)) %>%\n  select(!c(production_type,practice_subset,product_name)) %>%\n  arrange(practice,FQS) %>%\n  # groups\n  mutate(FQS = ifelse(row_number() == 1,\n                      as.character(FQS), \"\"),\n         .by = c(practice, FQS)) %>%\n  gt(groupname_col = \"practice\") %>%\n  tab_style(\n    style = list(\n      cell_fill(color = \"gray\"),\n      cell_text(weight = \"bolder\")\n    ),\n    locations = cells_row_groups(groups = everything())\n  ) %>%\n  # format numbers\n  fmt_auto() %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_conv_diff,pval_tukey),\n      rows = pval_tukey <= 0.05\n    )\n  ) %>%\n  tab_style(\n    style = list(\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = c(mean_diff_match,padjust_bonf),\n      rows = padjust_bonf <= 0.05\n    )\n  ) %>%\n  # replace NAs\n  sub_missing(missing_text = \"-\") %>%\n  # column labels\n  tab_style(\n    style = list(\n      cell_text(weight = \"bolder\",size = \"large\")\n    ),\n    locations = cells_column_labels(everything())\n  ) %>%\n  cols_label(\n    practice = \"Pratiques\",\n    FQS = \"Label\",\n    FQS_mean = \"Moyenne\",\n    std = \"Ecart-Type\",\n    r = \"Effectif\",\n    mean_conv_diff = \"Différence avec la moyenne conventionnelle\",\n    pval_tukey = \"Tukey HSD p-value\",\n    n_matched = \"Effectif apparié\",\n    mean_diff_match = \"Différence avec la moyenne contrefactuelle\",\n    padjust_bonf = \"Bonferroni adjusted t-test p-value\"\n  )\n\ntmp_table\n\ngtsave(tmp_table,\n       paste0(\"table_practice_diary_herd_\",Sys.Date(),\".html\"),\n       \"data_out\")\n\n```\n\n\n\n"},"formats":{"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":true,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"produce-source-notebook":true,"notebook-preserve-cells":true},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"visuals.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"block-headings":true,"manuscript":{"article":"index.qmd","notebooks":[{"notebook":"index.qmd","title":"Article Notebook","order":9999},{"notebook":"annex.qmd"},{"notebook":"visuals.qmd"}],"mecaFile":"index-meca.zip"},"author":[{"name":"Sarah HUET","orcid":"0000-0002-5449-6959","corresponding":true,"email":"sarah.huet@inrae.fr","roles":["Model","Manuscript writting and editing"],"affiliation":["CESAER UMR 1041, INRAE/Institut Agro/Université Bourgogne Franche-Comté, Dijon, France"]},{"name":"Clélia SIRAMI","orcid":"0000-0003-1741-3082","email":"clelia.sirami@inrae.fr","affiliation":["Dynafor UMR 1201, INRAE/Université de Toulouse, Castanet-Tolosan, France"]},{"name":"Abdoul DIALLO","orcid":"0000-0003-0350-8144","email":"abdoul.diallo@inrae.fr","affiliation":["CESAER UMR 1041, INRAE/Institut Agro/Université Bourgogne Franche-Comté, Dijon, France"]},{"name":"Julie REGOLO","orcid":"0009-0005-9962-4300","email":"julie.regolo@inrae.fr","affiliation":["US-ODR, INRAE, Auzeville-Tolosane, France"]},{"name":"Ainhoa IHASUSTA","email":"ainhoa.ihasusta@inrae.fr","affiliation":["CESBIO UMR 5126, Université de Toulouse/CNES/CNRS/INRAE/IRD/UPS, Toulouse, France"]},{"name":"Ludovic ARNAUD","orcid":"0000-0002-6106-7589","email":"ludovic.arnaud@inrae.fr","affiliation":["CESBIO UMR 5126, Université de Toulouse/CNES/CNRS/INRAE/IRD/UPS, Toulouse, France"]},{"name":"Valentin BELLASSEN","orcid":"0000-0001-8581-2814","email":"valentin.bellassen@inrae.fr","affiliation":["CESAER UMR 1041, INRAE/Institut Agro/Université Bourgogne Franche-Comté, Dijon, France"]},"Sarah Huet"],"keywords":"certified food, farming practices, biodiversity, environmental footprint, agriculture sustainability","date":"last-modified","bibliography":["references.bib"],"quarto-internal":{"subarticles":[{"input":"D:\\users\\srhuet\\documents\\BiodivLabel\\huet_estimating_2025\\index.qmd","token":"nb-article","render":true},{"input":"D:\\users\\srhuet\\documents\\BiodivLabel\\huet_estimating_2025\\annex.qmd","token":"nb-1","render":true},{"input":"D:\\users\\srhuet\\documents\\BiodivLabel\\huet_estimating_2025\\visuals.qmd","token":"nb-2","render":true}]},"notebook-preview-options":{"back":true},"theme":"cosmo","title-block-style":"manuscript","lightbox":"auto","title":"BiodivLabel Analysis Script","editor":"source","editor_options":{"chunk_output_type":"console"},"knitr":{"opts_chunk":{"collapse":true,"comment":"#>","R.options":{"knitr.graphics.auto_pdf":true}}},"clear-hidden-classes":"none","remove-hidden":"all","unroll-markdown-cells":true},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","docx","jats"]}