),
## N_intake estimate
## N_intake: daily N consumed per animal of category T, kg N animal-1 day-1, per growth stage-1 “i" when applicable
## Equation 10.32
Nin_estim = (GE/18.45)*((CP/100)/6.25)
)
if (my_DB == "RICA") {
# transfert table
tmp_TT_livestock <- read_xlsx("data_in/supp_data.xlsx", sheet ="TT_livestock") %>%
rename(code_livestock = CODE6)
# RICA data
tmp_RICA_2020_anim <- RICA_2020_ani %>%
# add units
left_join(.,tmp_TT_livestock %>% select(CODE6,EFFEC6_unit,species)) %>%
# summaries populations
group_by(IDENT,CODE6) %>%
# /!\ warning: animal population units differ between years
summarise(EFFEC = sum(EFFEC6*EFFEC6_unit)) %>% ungroup() %>%
filter(
# remove livestock without population
EFFEC >0
# remove eggs & chicks
& CODE6 != 984
& CODE6 != 974
# remove bees
& CODE6 != 993
) %>%
# 4148 farms
rename(
farm_id =IDENT,
code_livestock = CODE6
) %>%
# add species and UGB
left_join(., tmp_TT_livestock) %>%
# data are for one animal, so need to convert in livestock unit using LSU coefficient (see eurostat)
mutate(
livestock_unit = EFFEC * UGB # add UGB from tmp_TT_livestock
)
}
if (my_DB == "FADN") {
# transfert table
tmp_FADN_code <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_livestock_code")
tmp_TT_livestock0 <- read_xlsx("data_in/supp_data.xlsx", sheet ="TT_livestock")
tmp_TT_livestock <- tmp_TT_livestock0 %>%
# add row for diary buffalo
rbind(tmp_TT_livestock0 %>%
filter(FADN_code_letter == "LCOWDAIR") %>%
select(!all_of(colnames(tmp_FADN_code))) %>%
cbind(tmp_FADN_code %>%
filter(FADN_code_letter == "LBUFDAIRPRS"))) %>%
rename(code_livestock = FADN_code_letter) %>%
# concatenate when multiple rows for one FADN code
filter(!is.na(code_livestock)) %>%
group_by(code_livestock) %>%
summarise(
species = unique(na.omit(species)),
# for livestock categories, see Table 10.1 IPCC Guidelines 2019 Refinement
IPCC_mix_cat = paste0(unique(na.omit(unlist(strsplit(IPCC_mix_cat,";")))),collapse = ";"),
UGB = unique(na.omit(UGB))
)
# FADN data
tmp_input <- FADN_18 %>%
## livestock unit
select(ID, all_of(intersect(paste0(tmp_FADN_code$FADN_code_letter,"_ALU"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID),names_to = "code_livestock",values_to = "livestock_unit") %>%
rename(farm_id = ID) %>%
mutate(code_livestock = gsub("_ALU","",code_livestock)) %>%
# add species
left_join(., tmp_TT_livestock)  %>%
# add livestock unit coefficient to convert to animal
left_join(.,tmp_TT_livestock0 %>%
filter(!is.na(FADN_code_letter)) %>%
select(FADN_code_letter,UGB) %>%
distinct() %>%
rename(code_livestock = FADN_code_letter)) %>%
# remove livestock without population
filter(livestock_unit >0 )
}
tmp_feed_intake <- feed_by_livestock %>%
# add livestock unit coefficient to convert to animal
left_join(.,tmp_TT_livestock %>% select(code_livestock,UGB)) %>%
# estimate feed intake per animal using livestock unit coefficient to convert to animal
group_by(farm_id,code_livestock) %>%
summarise(
DM_kg_animal = sum(DM_kg_crop_LU*UGB),
# add crude protein content
CP_p100 = (sum(CP_kg_crop_LU*UGB) / DM_kg_animal)*100)
# calculate N excretion rates from IPCC N intake estimation equations ----
tmp_cattle_Nin <- tmp_input %>%
# filter cattle
filter(species == "cattle") %>% # 3053 farms
# add feed intake data
inner_join(.,tmp_feed_intake) %>%
# estimate N intake
rowwise() %>%
mutate(
# N_intake from DMI
## daily N consumed per animal of category T, kg N animal-1 day-1, per growth stage-1 “i" when applicable
## DMI: dry matter intake, kg DM animal-1 day-1
## CP_p100: percent crude protein in dry matter, %
## Equation 10.32
Nin_DMI = (DM_kg_animal/365)*((CP_p100/100)/6.25),
# N_intake estimate
## To estimate N intake when no DMI data are available, IPCC Guidelines provided a full set of equations
## Net Energy for Maintenance NE_m
## Cfi: a coefficient which varies for each animal category, MJ day-1 kg-1
## Table 10.4
Cfi = case_when(
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("cows_milk_prod")) ~ 0.386,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("bulls_breed")) ~ 0.370,
.default = 0.322
),
## Weight: live-weight of animal, kg
## Table 10A.1 & Table 10A.2 for "Regions"="Western Europe" for "calves_preweaning"
## Source: FRA_2023_2020_13042023_110851.xlsx from fra-2023-crf-25apr23_AR5
Weight = case_when( # !!! use average body weight as we don't have live-weight of animals
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("cows_milk_prod")) ~ 676.08,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("bulls_breed")) ~ 676.08,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("other_mature_cattle")) ~ 676.08,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle_postweaning")) ~ 439.92,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle")) ~ 439.92,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("calves_preweaning")) ~ 230
),
## NE_m: net energy required by the animal for maintenance, MJ day-1
## Equation 10.3
NE_m = Cfi*(Weight^0.75),
## Net Energy for Activity NE_a
## Ca: coefficient corresponding to animal’s feeding situation, dimensionless
## Table 10.5
Ca = case_when( # !!! choice:
# we considered that cattle in farms with permanent meadow are grazing
farm_id %in% feed_grassland$farm_id[feed_grassland$crop %in% c("341","CGRSXRG")] ~ 0.17,
# we considered that cattle in farms with rangelands are grazing large areas
farm_id %in% feed_grassland$farm_id[feed_grassland$crop %in% c("342","CRG")] ~ 0.36,
# we considered that cattle in farms without permanent meadow or rangelands are fed in stall
.default = 0
),
## NE_a: net energy for animal activity, MJ day-1
## Equation 10.4
NE_a = Ca*NE_m,
## /!\ voir moyenne fr +/- cahier charge labels | variable RA
## Net Energy for Growth NE_g
## BW: the average live body weight of the animals in the population, kg
## Tables 10A.1 & 10A.2
BW = case_when(
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("cows_milk_prod")) ~ 600,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("bulls_breed")) ~ 600,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("other_mature_cattle")) ~ 600,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle_postweaning")) ~ 400,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle")) ~ 400,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("calves_preweaning")) ~ 230
),
## C: a coefficient with a value of 0.8 for females, 1.0 for castrates and 1.2 for bulls
C =
case_when(
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("bulls_breed")) ~ 1.2,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("cows_milk_prod","other_mature_cattle","growing_cattle")) ~ 0.8,
.default = 1
),
## MW: the mature body weight of an adult animal individually, mature females, mature males and steers) in moderate body condition, kg
MW = 600, # choice: mature weight = 600 kg as in Tables 10A.1 & 10A.2
## WG: the average daily weight gain of the animals in the population, kg day-1
WG = case_when(
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("cows_milk_prod")) ~ 0,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("bulls_breed")) ~ 0,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("other_mature_cattle")) ~ 0,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle_postweaning")) ~ 0.4,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle")) ~ 0.4,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("calves_preweaning")) ~ 0.3
),
## NE_g: net energy needed for growth, MJ day-1
## Equation 10.6
NE_g = 22.02*((BW/(C*MW))^0.75)*(WG^1.097),
## Net Energy for Lactation NE_l
## net energy for lactation, MJ day-1
## Equation 10.8 & Table 10A.1
NE_l = case_when(
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("cows_milk_prod")) ~ 20.3*(1.47+0.40*4.2),
.default = 0
),
# /!\ milk production !!!
## Net Energy for Work NE_work
NE_work = 0,# choice: omit work
## Net Energy for Pregnancy NE_p
## C_preg: pregnancy coefficient
## Table 10.7 & /!\ Table 10A.1 mature_dairy_cattle = 90% of indiv. pregnant
C_preg = case_when(
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("cows_milk_prod")) ~ 0.10,
.default = 0
),
## NE_p: net energy required for pregnancy, MJ day-1
## Equation 10.13
NE_p = C_preg * NE_m,
## Digestibility
## DE: digestibility of feed expressed as a fraction of gross energy (digestible energy/gross energy*100, i.e. DE%)
## Tables 10A.1 & 10A.2
DE = case_when(
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("cows_milk_prod")) ~ 71,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("bulls_breed")) ~ 60,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("other_mature_cattle")) ~ 60, # as mature males
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle_postweaning")) ~ 65,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle")) ~ 65,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("calves_preweaning")) & code_livestock !=  932 ~ 95, # calves on milk
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("calves_preweaning")) & code_livestock == 932 ~ 73 # calves on forage (broutards only ???)
),
# !!! we could estimate DE = qté aliment - prod lait
## Ratio of net energy for maintenance REM
## REM: ratio of net energy available in diet for maintenance to digestible energy
## Equation 10.14
REM = 1.123-(4.092*(10^-3)*DE)+(1.126*(10^-5)*(DE^2))-(25.4/DE),
## Ratio of net energy for growth REG
# /!\ choice: even for non-growing cattle? seems yes as in Table 10.3
## REG: ratio of net energy available for growth in a diet to digestible energy consumed
## Equation 10.15
REG = 1.164 - (5.16*(10^-3)*DE)+(1.308*(10^-5)*(DE^2))-(37.4/DE),
## Gross Energy GE
## GE: gross energy, MJ day-1
## Equation 10.16
GE = (((NE_m+NE_a+NE_l+NE_work+NE_p)/REM) + (NE_g/REG))/(DE/100),
## CP
## CP: percent crude protein in dry matter for growth stage “i”
## Tables 10A.1 & 10A.2
CP = case_when(
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("cows_milk_prod")) ~ 16.1,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("bulls_breed")) ~ 14.7,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("other_mature_cattle")) ~ 14.7, # as mature males
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle_postweaning")) ~ 16.5,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("growing_cattle")) ~ 16.5,
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("calves_preweaning")) & code_livestock != 932  ~ 17.1, # calves on milk
any(unlist(strsplit(IPCC_mix_cat,";")) %in% c("calves_preweaning")) & code_livestock == 932 ~ 16.5 # calves on forage (broutards only ???)
),
## N_intake estimate
## N_intake: daily N consumed per animal of category T, kg N animal-1 day-1, per growth stage-1 “i" when applicable
## Equation 10.32
Nin_estim = (GE/18.45)*((CP/100)/6.25)
)
# quality check
## IPCC Guidelines 2019, equation 10.18 et table 10.8 => compare DMI kg day-1
tmp = tmp_cattle_Nin %>%
mutate(DMI_pday = DM_kg_animal / 365,
DMI_10.17 = BW^0.75 * ((0.0582*6 - 0.00266*6^2 - 0.1128 )/(0.239 * 6)),
DMI_10.18 = BW^0.75 * ((0.0582*6 - 0.00266*6^2 - 0.0869 )/(0.239 * 6)),
DMI_10.18a = 3.83+0.0143*BW*0.96)
tmp %>%
group_by(species) %>%
reframe(DMI_pday = quantile(DMI_pday,c(0.1,0.25,0.5,0.75,0.9),na.rm = T),
BW = quantile(BW,c(0.1,0.25,0.5,0.75,0.9)),
DMI_10.17 = quantile(DMI_10.17,c(0.1,0.25,0.5,0.75,0.9)),
DMI_10.18 = quantile(DMI_10.18,c(0.1,0.25,0.5,0.75,0.9)),
DMI_10.18a = quantile(DMI_10.18a,c(0.1,0.25,0.5,0.75,0.9)))
## compare Nin_DMI & Nin_estim
tmp_cattle_Nin %>%
group_by(species) %>%
reframe(Nin_DMI = quantile(Nin_DMI,c(0.1,0.25,0.5,0.75,0.9),na.rm = T),
Nin_estim = quantile(Nin_estim,c(0.1,0.25,0.5,0.75,0.9),na.rm = T))
if (my_DB == "RICA") {
### RICA data on animal production
tmp_RICA_2020_pan <- read_delim(
"//casd.fr/casdfs/Projets/EVAPDRH/Data/RICA_RICA_2020/RICA2020_tables_CSV/pan20.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE,
col_types = cols(IDENT = col_character()))
### select milk data
tmp_milk <- tmp_RICA_2020_pan %>%
filter(CODE7 %in% c("021", "022", "031", "032")) %>%
group_by(IDENT) %>%
summarise(
MILK_total = sum(QPROD7*10^2)
) %>% # 1427 farms
# add diary cow population
inner_join(.,tmp_RICA_2020_anim %>% filter(code_livestock == 929) %>% group_by(IDENT) %>% summarise(EFFEC = sum(EFFEC))) %>%
# calculate MILK kg animal-1 day-1
mutate(MILK = (MILK_total / EFFEC)/365)
# quality check: cf. Table 10A.1 => range for MILK 7 to 23 : ok
#quantile(tmp_milk$MILK,c(0.1,0.25,0.5,0.75,0.9))
}
if (my_DB == "FADN") {
# FADN data
### select milk data
tmp_milk <- FADN_18 %>%
select(ID,PMLKCOW_PRQ) %>%
filter(PMLKCOW_PRQ >0) %>%
mutate(code_animprod = "PMLKCOW") %>%
rename(farm_id = ID,
MILK_total = PMLKCOW_PRQ) %>%
# add diary cow population
inner_join(.,tmp_cattle_Nin %>%
filter(code_livestock == "LCOWDAIR") %>%
select(farm_id,code_livestock,livestock_unit)) %>%
# calculate MILK kg animal-1 day-1
## for diary cows, livestock unit coefficient =1 thus LU == number of animal
mutate(MILK = (MILK_total / livestock_unit)/365)
}
quantile(tmp_milk$MILK[tmp_milk$farm_id %in% tmp_farm_FR])
if (my_DB == "FADN") {
# FADN data
### select milk data
tmp_milk <- FADN_18 %>%
select(ID,PMLKCOW_PRQ) %>%
filter(PMLKCOW_PRQ >0) %>%
mutate(code_animprod = "PMLKCOW") %>%
rename(farm_id = ID,
MILK_total = PMLKCOW_PRQ) %>%
# add diary cow population
inner_join(.,tmp_cattle_Nin %>%
filter(code_livestock == "LCOWDAIR") %>%
select(farm_id,code_livestock,livestock_unit)) %>%
# calculate MILK kg animal-1 day-1
## for diary cows, livestock unit coefficient =1 thus LU == number of animal
mutate(MILK = (MILK_total*10^3 / livestock_unit)/365)
}
quantile(tmp_milk$MILK[tmp_milk$farm_id %in% tmp_farm_FR])
# here we choose a proxy of "Soil movement" metric as the total GNR consumption (in liter) minus the mean consumption without tillage per hectare divided by the UAA in crop production
# I distribute the metric value as: total to arable, zero to pasture
# I calculate the mean GNR used without tillage per hectare as the mean value of GNR used for direct seeding in wheat, maize and the wheat-maize rotation (Pellerin, 2013)
tmp_mean_GNR = mean(c(60,48,54))
if (my_DB == "RICA") {
# transfert table
tmp_TT_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops") %>%
rename(crop = RICA_code_number)
tmp_input <- RICA_2020_veg %>%
# summaries areas
group_by(IDENT,CODE3)%>%
summarise(
area_ha = sum(SUPER3*10^-2,na.rm = T)
) %>%
# add off-road diesel consumption
left_join(., RICA_2020 %>% select(IDENT,CHRCAQG)) %>%
filter(
# keep only crops with areas
area_ha > 0, # 6869 farms
# remove farms without any consumption of off-road diesel as it seems improbable
fuels_value >0 # 6264 farms
)
}
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>% rename(crop = FADN_code_letter) %>% select(crop)
) %>% distinct()
tmp_input <- FADN_18 %>%
# area in hectares for each crop
# off-road diesel consumption
## IFULS_V	H_LM_1040_V	Motor fuels and lubricants Value	in EUR
select(ID,IFULS_V, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID,IFULS_V),names_to = "crop",values_to = "area_ha") %>%
mutate(crop = gsub("_TA","",crop)) %>%
rename(farm_id = ID,fuels_value = IFULS_V) %>%
# select variables and obs
select(farm_id,crop,area_ha,fuels_value) %>%
filter(
# keep only crops with areas
area_ha > 0, # 6869 farms
# remove farms without any consumption of off-road diesel as it seems improbable
fuels_value >0 # 6264 farms
)
}
rm(list = names(.GlobalEnv)[grep("tmp",names(.GlobalEnv))])
if (my_DB == "RICA") {
# transfert table
tmp_TT_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops") %>%
rename(crop = RICA_code_number)
tmp_input <- RICA_2020_veg %>%
# summaries areas
group_by(IDENT,CODE3)%>%
summarise(
area_ha = sum(SUPER3*10^-2,na.rm = T)
) %>%
# add off-road diesel consumption
left_join(., RICA_2020 %>% select(IDENT,CHRCAQG)) %>%
filter(
# keep only crops with areas
area_ha > 0, # 6869 farms
# remove farms without any consumption of off-road diesel as it seems improbable
fuels_value >0 # 6264 farms
)
}
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>% rename(crop = FADN_code_letter) %>% select(crop)
) %>% distinct()
tmp_input <- FADN_18 %>%
# area in hectares for each crop
# off-road diesel consumption
## IFULS_V	H_LM_1040_V	Motor fuels and lubricants Value	in EUR
select(ID,IFULS_V, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID,IFULS_V),names_to = "crop",values_to = "area_ha") %>%
mutate(crop = gsub("_TA","",crop)) %>%
rename(farm_id = ID,fuels_value = IFULS_V) %>%
# select variables and obs
select(farm_id,crop,area_ha,fuels_value) %>%
filter(
# keep only crops with areas
area_ha > 0, # 6869 farms
# remove farms without any consumption of off-road diesel as it seems improbable
fuels_value >0 # 6264 farms
)
}
quantile(tmp_input$fuels_value[tmp_input$farm_id %in% FADN_18$ID[FADN_18$COUNTRY == "FRA"]])
quantile(BV_A.3.1$A.3.1[BV_A.3.1$farm_id %in% FADN_18$ID[FADN_18$COUNTRY == "FRA"]])
if (my_DB == "RICA") {
# transfert table
tmp_TT_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops") %>%
rename(crop = RICA_code_number)
tmp_input <- RICA_2020_veg %>%
# summaries areas by crops
group_by(IDENT,CODE3)%>%
summarise(
area_ha = sum(SUPER3*10^-2,na.rm = T)
) %>%
# add mineral nitrogen consumption (kg N)
left_join(.,RICA_2020 %>% select(IDENT,CONSON,AGBIO)) %>%
mutate(crop = CODE3,
org_farming = case_when(
AGBIO %in% c(2,4) ~ T,
.default = F
)) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0, # 7264 farms
# remove organic farms with CONSON>0, as mineral fertilization is supposed to be null in organic farms
!(org_farming == 1 & CONSON >0)
)
# 7069 farms
}
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>% rename(crop = FADN_code_letter) %>% select(crop,EPK_ferti_crop_name) %>%
group_by(crop) %>%
summarise(
EPK_ferti_crop_name = paste0(unique(na.omit(unlist(strsplit(EPK_ferti_crop_name,";")))),collapse = ";")
))
tmp_input <- FADN_18 %>%
# area in hectares for each crop
# Quantity of N used in mineral fertilisers
## INUSE_Q	H_SC_3031_Q	Quantity of N used in mineral fertilisers Quantity	in tonnes
select(ID,ORGANIC,INUSE_Q, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18))),
names_to = "crop",values_to = "area_ha") %>%
mutate(crop = gsub("_TA","",crop),
org_farming = case_when(
ORGANIC %in% c(2,4) ~ T,
.default = F
)) %>%
rename(farm_id = ID) %>%
mutate(CONSON = INUSE_Q*10^3) %>%
# select variables and obs
select(farm_id,org_farming,crop,area_ha,CONSON) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0,
# remove organic farms with CONSON>0, as mineral fertilization is supposed to be null in organic farms
!(org_farming == 1 & CONSON >0)
)
}
quantile(BV_A.4.5$A.4.5[BV_A.4.5$farm_id %in% FADN_18$ID[FADN_18$COUNTRY == "FRA"]])
quantile(tmp_input$CONSON[tmp_input$farm_id %in% FADN_18$ID[FADN_18$COUNTRY == "FRA"]])
source("R/in_practice_A43.R",local = knitr::knit_global())
quantile(BV_A.4.3$A.4.3[BV_A.4.3$farm_id %in% FADN_18$ID[FADN_18$COUNTRY == "FRA"]])
source("R/in_practice_A43.R",local = knitr::knit_global())
quantile(BV_A.4.3$A.4.3[BV_A.4.3$farm_id %in% FADN_18$ID[FADN_18$COUNTRY == "FRA"]])
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>% rename(crop = FADN_code_letter) %>%
group_by(crop,land_use_type) %>%
summarise(
TFI_crop_name = paste0(unique(na.omit(unlist(strsplit(TFI_crop_name,";")))),collapse = ";")
))
tmp_input <- FADN_18 %>%
# area in hectares for each crop
# Value of crop protection products
## IPROT_V	H_SC_3040_V	Crop protection products Value	in EUR
select(ID,ORGANIC,IPROT_V, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18))),
names_to = "crop",values_to = "area_ha") %>%
mutate(crop = gsub("_TA","",crop),
org_farming = case_when(
ORGANIC %in% c(2,4) ~ T,
.default = F
)) %>%
rename(farm_id = ID) %>%
mutate(CONSOPEST = IPROT_V) %>%
# select variables and obs
select(farm_id,org_farming,crop,area_ha,CONSOPEST) %>%
filter(
# keep only crops with areas
area_ha > 0 #  farms
)
}
quantile(tmp_input$CONSOPEST[tmp_input$farm_id %in% FADN_18$ID[FADN_18$COUNTRY == "FRA"]])
((2/3)-(3/5))/(3/5)
(2*5)/(3*3)
1-((2*5)/(3*3))
((2*5)/(3*3))-1
(2-3)/5
(2/5)-(3/5)
(2/5)-(5/5)
(2-5)/5
