---
title: |
 **Supplementary Material of: Estimating Biodiversity Impact from Agricultural Statistics: an application to Food Quality Schemes in France**
editor: source
editor_options: 
  chunk_output_type: inline
format:
  docx:
    reference-doc: custom-reference-doc.docx
    toc: false
    number-sections: true
    #default-image-extension: svg
    fig-format: jpeg
    fig-align: center
    fig-width: 7.5
    df-print: paged
    link-citations: true
    link-bibliography: true
resource-path: [./images]  
bibliography: references.bib
csl: ecological-economics.csl
---

# Section 1: Supplementary Method

## Landscape variables

To take into account the landscape dimension in the BVIAS model applied to environmental labeling, we estimate three parameters: hedge density, agricultural plot size, crop diversity and ground cover. To calculate the variables necessary for estimating these parameters, we first extract from the 2020 French LPIS [@ign_registre_2020] all plots from farms registered our 2020 FADN-AC-FQS database.

To extract these plots, we use the PACAGE plot numbers (identification number of the plot in the Common Agricultural Policy registration) as primary join key. We face three situations:
-   The farm has the same PACAGE number in FADN and AC: then the LPIS plots with this PACAGE number are associated with that FADN-AC-FQS farm;
-   The PACAGE numbers differ between FADN and AC and only one of them corresponds to a LPIS PACAGE number: the LPIS plots of this PACAGE number are associated with that FADN-AC-FQS farm
-   No PACAGE number is registered in either the FADN or the AC, or the PACAGE numbers differ between FADN and AC, and none of them corresponds to a LPIS PACAGE number: no plot is associated with a FADN-AC-FQS holding. Such cases are found for 443 and 318 metropolitan farms, respectively. These holdings are mainly concentrated in the OTEX viticulture, market gardening and pig and/or poultry farming.

This extraction results in a subsample of the LPIS that we intersect with the Hedges layer of the BD TOPO® database [@ign_bd_2020] to determine the variables required to estimate the three parameters.

### Hedge density {#sec-SM_hedge}

Hedge density is the ratio of the sum in linear meters of hedge to the area of the holding (UAA). For the calculation of linear lengths, we use the same procedure as previously used in a similar work at the scale of the regions of France [@bamiere_marginal_2023].

Firstly, we need to expand the LPIS blocks. Hedges are not always inside, outside or at the edge of LPIS blocks (all three cases present). However, they rarely cut a block in half. The first step is to expand the LPIS blocks by a buffer zone of 10m. The length of 10 m for the buffer zone is determined visually. It seems that beyond 10 m, it is common to make mistakes when combining a hedge with two islets which are actually separated by a road. Conversely, below 10 m, it seems common to count as “no cultivation” hedges that are clearly on the edge of a field.

Secondly, we intersected the hedge lines with the expanded blocks to determine a border length. There are four cases for each piece of hedge from the intersection: 
1. The piece of hedge does not intersect any enlarged block. The piece of hedge is considered to be lined with non-agricultural uses on both sides and twice its length is assigned to “No culture”. 
2. The piece of hedge intersects a single expanded block. The piece of hedge is considered to be bordered by agricultural use on one side, and non-agricultural use on the other. Its length is assigned once to the crop/grassland type of the block and another time to “No crop”. 
3. The hedge piece intersects two blocks. The hedge piece is considered to be bordered on both sides by agricultural use. Its length is assigned once to the type of crop/grassland of each block. 
4. The piece of hedge intersects more than two blocks. Its length is then affected more than twice. This case results in an aberration (hedge with more than three sides). To avoid this, the corresponding lengths are multiplied by the ratio of the initial length and the sum of the affected lengths so that the sum of the corrected lengths is exactly equal to the initial hedge piece length.

Then, to calculate the hedge density for each farm, we distinguish four plot categories for each variable (hedge length and UAA):
-   Total
-   Permanent grassland (including grasslands, moors and alpine pastures)
-   Arboriculture (including vines)
-   Other crops

### Mean field size {#sec-SM_MFS}

The mean field size is the ratio of the UAA to the number of plots. We distinguish four plot categories for each variable (UAA and number of plots):
-   Total
-   Permanent grassland (including grasslands, moors and alpine pastures)
-   Arboriculture (including vines)
-   Other crops

### Crop diversity {#sec-SM_crop_div}

We calculate the Shannon index (@eq-shannon), using the number of crops as the number of species and the surface area as the abundance, only for arable land use type at the farm scale:

$$
H' = - \sum^{R}_{i=1} p_i \cdot \ln p_i
$$ {#eq-shannon}

where $R$ is the total number of crops, $p$ is the ratio of the area for the crop $i$ on the total arable area.

### Ground cover {#sec-SM_ground_cover}

The vegetation cover data is generated from the Sentinel-2 (S2) raster data [@european_space_agency_sentinel-2_2022]. The method is based on the calculation of the NDVI (Normalized Difference Vegetation Index) [@araya_cropphenology_2018; @bockstaller_apports_2021] for the crop year 2020 (i.e., the period from 01/10/2019 to 30/09/2020, summing 366 days as 2020 is a bissextile year). A day is counted as "green" if the index is greater than a threshold of 0.3 that separates a bare soil state to a vegetated soil state [@araya_cropphenology_2018]. From the raster data, we calculated the average number of covered days using the area statistics algorithm in QGIS [@qgis_development_team_qgis_2022] for four plot categories:

-   Total
-   Permanent grassland (including grasslands, moors and alpine pastures)
-   Arboriculture (including vines)
-   Other crops

The number of uncovered days is then calculated as: $\textrm{Number of uncovered days} = 366 - \textrm{number of covered days}$.

## Model calibration and validation according to literature {#sec-SM_calibration}

In order to calibrate and validate our model, we compare estimated biodiversity levels with in situ measurements identified in the literature. These in situ measurements serve as references and we adjust the limits of the intervals of the land use types (grassland and arable), the parameters of the normalization functions of the input variables (cultural practices and landscape variables) and the weighting coefficients of the variables in order to minimize the distance between our results and the in situ measurements selected.

### Levels of biodiversity in different land use types

To compare the levels of biodiversity of different land use types, we base our analysis on @gallego-zamorano_changes_2022 who estimated the richness in plant species according to nine archetypes of land use in relation to the richness in plant species in a natural space. We define the equivalent of each archetype in our modelling framework (@tbl-LU_range).

::: {#tbl-LU_range}
| Land use archetypes [@gallego-zamorano_changes_2022] | Equivalent in our modeling framework                              | Plant species richness relative to primary vegetation |
|----------------------|---------------------------|-----------------------|
| Pasture, Minimal-intensity use (P-M)                 | $BV_{LU}$ upper bound for grasslands ($BV_{LU,P,ha,max}$)         | 0,92 (P-M average)^1^                                 |
| Pasture, Light- and high-intensity use (P-LH)        | Pastures with all variables at the median of our grassland sample | 0,57 (95% CI: 0,44-0,76)                              |
| Pasture, Light- and high-intensity use (P-LH)        | $BV_{LU}$ lower bound for grasslands ($BV_{LU,P,ha,min}$)         | 0,44 (P-LH lower bound)^2^                            |
| Cropland, Minimal-intensity use (C-M)                | $BV_{LU}$ upper bound for croplands ($BV_{LU,C,ha,max}$)          | 0,52 (C-M average)^1^                                 |
| Cropland, High-intensity use (C-H)                   | Croplands with all variables at the median of our arable sample   | 0,32 (95% CI: 0,23-0,44)                              |
| Cropland, High-intensity use (C-H)                   | $BV_{LU}$ lower bound for grasslands ($BV_{LU,C,ha,min}$)         | 0,23 (C-H lower bound)^2^                             |

: *Calibration by land use type*. ^1^ For the minimal-intensity archetypes, the observed variability is due to the idiosyncrasy of biodiversity rather than the variability of the intensity of practices: we therefore choose the average as the limit. ^2^ For high-intensity archetypes, variability is due to the variability of intensity of practices rather than the idiosyncrasies of biodiversity: we therefore choose the lower limit as maximum intensity of practice.
:::

### Effect of practices on biodiversity level

#### Within-field practices

In the absence of a meta-analysis of the effect of pesticides on taxa and “essential” functional groups (pollinators, vertebrates), we use aquatic invertebrates as a benchmark whose diversity is reduced by *27*-*42*% in an environment with high pesticide use [@beketov_pesticides_2013]. This is consistent with the use of ecofreshwater toxicity for weighting estimated inputs of pesticides in our model (see @sec-MM_pesticides).

We consider that within-field practices of nitrogen fertilization and pesticide application have comparable effects on biodiversity. Pesticides are as often implicated in the causes of biodiversity loss as fertilization [@sanchez-bayo_worldwide_2019].

::: {#tbl-calibration_archetype}
| Archetypes                                                                                                            | Taxa considered                                                         | Geographical area                                 | Equivalent in our modeling framework | Expected result from literature |     |
|-------------|------------|------------|------------|------------|------------|
| Low VS maximum use of pesticides [@beketov_pesticides_2013]                                                           | Stream invertebrates                                                    | Germany, France and Australia                     | @eq-ES_pesticides ^1^                | 0.35                            |     |
| Few VS maximum nitrogen inputs [@sanchez-bayo_worldwide_2019]                                                         | Entomofauna                                                             | Worldwide                                         | @eq-ES_nitrogen                      | 0.352                           |     |
| High crop diversity with 3 crop type sampled VS low crop diversity with 1 crop type sampled [@sirami_increasing_2019] | Plants, bees, butterflies, hoverflies, carabids, spiders, and birds | France, United Kingdom, Germany, Spain and Canada | @eq-ES_shannon                       | 0.18                            |     |
| Small VS large mean field size [@sirami_increasing_2019]                                                              |                                                                         |                                                   | @eq-ES_MFS                           | 0.05                            |     |
| High VS low density of small woody features [@valle_farmland_2023]                                                    | Birds, bats and bush-crickets                                           | France                                            | @eq-ES_SNC                           | 0.20                            |     |
| Organic VS conventional wheat & grassland [@tuck_land-use_2014]                                                       | Arthropods, birds, microbes and plants                                  | Europe and North America                          | @eq-ES_org_conv ^3^                     | 0.30 (wheat) & 0.15 (grassland) |     |

: *Calibration by effect size*. ^1^ n our modelling framework, the best translation of a landscape with few pesticides as described in @beketov_pesticides_2013 is an average landscape with half-grassland and half-crop with few pesticides. The best expression of a landscape with an intensive use of pesticides is a landscape composed only of the most pesticide intensive crops. ^2^ Nitrogen fertilization impact assumed to be equal to pesticide impact, according to @sanchez-bayo_worldwide_2019. ^3^ Ratio of predictions after matching procedure for structural characteristics of farms (simple matching).
:::

$$
\frac{ \frac{BV_{loc,P,ha} ( \textrm{pesticide use } 5^{th} \textrm{ percentile, other variable medians} ) + BV_{loc,C,ha} \textrm{pesticide use } 5^{th} \textrm{ percentile, other variable medians} ) }{2} - BV_{loc,C,ha} ( \textrm{pesticide use } 95^{th} \textrm{ percentile, other variable medians} ) }{ \frac{ BV_{loc,P,ha} ( \textrm{pesticide use } 5^{th} \textrm{ percentile, other variable medians} ) + BV_{loc,C,ha} ( \textrm{pesticide use } 5^{th} \textrm{ percentile, other variable medians} ) }{ 2 } }
$$ {#eq-ES_pesticides}

$$
\frac{\frac{BV_{loc,P,ha} (\textrm{nitrogen input } 5^{th} \textrm{ percentile, other variable medians}) + BV_{loc,C,ha} ( \textrm{nitrogen input } 5^{th} \textrm{ percentile, other variable medians})}{2} - BV_{loc,C,ha} ( \textrm{nitrogen input } 95^{th} \textrm{ percentile, other variable medians})}{\frac{BV_{loc,P,ha} ( \textrm{nitrogen input } 5^{th} \textrm{ percentile, other variable medians}) + BV_{loc,C,ha} ( \textrm{nitrogen input } 5^{th} \textrm{ percentile, other variable medians})}{2}}
$$ {#eq-ES_nitrogen}

$$
\frac{ BV_{loc,ha}(\textrm{Shannon index } 75^{th} \textrm{ percentile of farms with 3 crops, other variable medians}) - BV_{loc,ha} (\textrm{Shannon index } 25^{th} \textrm{ percentile of farms with 1 crops, other variable medians})}{BV_{loc,ha}(\textrm{Shannon index } 75^{th} \textrm{ percentile of farms with 3 crops, other variable medians})}
$$ {#eq-ES_shannon}

$$
\frac{ BV_{loc,ha}(\textrm{hedge density } 75^{th} \textrm{ percentile, other variable medians}) - BV_{loc,ha} (\textrm{hedge density } 25^{th} \textrm{ percentile, other variable medians})}{BV_{loc,ha}(\textrm{hedge density } 75^{th} \textrm{ percentile, other variable medians})}
$$ {#eq-ES_SNC}

$$
\frac{ BV_{loc,ha}(\textrm{mean field size } 25^{th} \textrm{ percentile, other variable medians}) - BV_{loc,ha} (\textrm{mean field size } 75^{th} \textrm{ percentile, other variable medians})}{BV_{loc,ha}(\textrm{mean field size } 25^{th} \textrm{ percentile, other variable medians})}
$$ {#eq-ES_MFS}

$$
\frac{ BV_{loc,ha}(\textrm{organic soft wheat}) - BV_{loc,ha}(\textrm{conventional soft wheat})}{BV_{loc,ha}(\textrm{organic soft wheat})}
$$ {#eq-ES_org_conv}

#### Landscape effects

To compare the effects of mean field size and crop diversity, we relied on @sirami_increasing_2019, one of the only studies that provides effect sizes for these two variables (@tbl-calibration_archetype).

To compare the effects of hedges we use @valle_farmland_2023 which estimate the effect of small woody features (@tbl-calibration_archetype). To retrieve the average percentile corresponding to the breaking point and the average effect size of the predicted species diversity (Simpson index) of the three taxa, we used WebPlotDigitizer (version 5.2) to calculate the area under the density curve and retrieve breaking point Simpson index value (see sheet “valle_2023_WebPlotDigitizer” from supp_data.xlsx).

#### Comparison of labels

The effect of organic farming on biodiversity has been examined by numerous studies whose results have been aggregated in a meta-analysis comparing in situ measurements of species richness between organic and conventional agriculture [@tuck_land-use_2014]. We take the observed differences to calibrate the model (@tbl-calibration_archetype).

#### The case of grassland

In our modelling framework, since grasslands are not ploughed nor receive pesticides, we do not use these variables to calibrate the set of grassland parameters. Similarly, the crop diversity does not apply to grassland. We also considered that the effects of hedges and parcel size are negligible for grasslands. These five variables will therefore be weighted to zero for the calculation of the BVIAS of grasslands.

### Model calibration

First, the range of possible biodiversity values (in which $BV_{LU}$ is projected for normalization; see @sec-MM_BVI_model) for each land use type (arable and grassland) are defined as in @gallego-zamorano_changes_2022 (@tbl-LU_range). Secondly, the set of response function parameters ($BVC_{i,l,v}$, see @sec-MM_BVI_model) and the aggregation weights for each type of land use are calibrated (separately for arable and grassland). The calibration pursues the objective of minimizing the fourth power of the distance between our predicted values and the target values of @tbl-LU_range (average croplands and grasslands) and @tbl-calibration_archetype: • Initially, the functional forms of the responses are taken from @lindner_valuing_2019. Unlike Lindner’s method @lindner_bringing_2022 that aggregates variables by averaging them, the variable weights used for their aggregation are assigned manually such that their value corresponds to the effect size of variables listed in the literature (@tbl-calibration_archetype), with a minimum weight of 0.05 (for the negative effect sizes and the variables not listed in the literature). • Then, both the functional forms of the responses (all constants except epsilon and gamma, which modulates the response range, and beta which define the variation direction; see code available online) and the aggregation weights are calibrated using the basic optim function of R (Team, 2023) • Note that the effect size of each variable (or its relative importance) results from the combination of both weights and functional forms. In principle, a very “responsive” functional form combined with low weight can confer the same importance as a very “flat” functional form combined with high weight.

## References

::: {#refs}
:::

# Section 2: Supplementary results

## Supplementary Tables

### Descriptive statistics

::: {#tbl-stat_desc_input_arable}

```{r tbl-stat_desc_input_arable}

library(dplyr)
library(gt)

tmp_data <- readr::read_csv("~/BiodivLabel/CASD_export/CASD_export_250122/stat_input_by_LU_arable_2025-01-22.csv")

source("~/BiodivLabel/huet_estimating_2025/result_tables.R")

# add variable despcription
tmp_table <- tibble(description = unlist(strsplit(paste0(rev(practice_names$crops$labels[-c(1:2)]),"_-","_-"),"_"))) %>%
    cbind(tmp_data)


tmp_table %>%
    gt() %>%
    cols_label(
        description = "Practice",
        metric_number = "Input variable",
        ...2 = "Value",
        Mean = "Mean",
        SD = "sd",
        Min = "Min",
        P25 = "25th percentile",
        Median = "Median",
        P75 = "75th percentile",
        Max = "Max"
    ) %>%
    # replace value names
    sub_values(values = "value", replacement = "Raw") %>%
    sub_values(values = "x_max", replacement = "Cut at 95th percentile") %>%
    sub_values(values = "x_norm", replacement = "Normalized") %>%
    # replace NAs
    sub_missing(missing_text = "-") %>%
    # format numbers
    fmt_auto()



```


**Descriptive statistics of the input variables for the arable land use type**
:::

::: {#tbl-stat_desc_input_grassland}

```{r tbl-stat_desc_input_grassland}

library(dplyr)
library(gt)

tmp_data <- readr::read_csv("~/BiodivLabel/CASD_export/CASD_export_250122/stat_input_by_LU_grassland_2025-01-22.csv")

source("~/BiodivLabel/huet_estimating_2025/result_tables.R")

# add variable despcription
tmp_table <- tibble(description = unlist(strsplit(paste0(rev(practice_names$crops$labels)[6:7],"_-","_-"),"_"))) %>%
    cbind(tmp_data)


tmp_table %>%
    gt() %>%
    cols_label(
        description = "Practice",
        metric_number = "Input variable",
        ...2 = "Value",
        Mean = "Mean",
        SD = "sd",
        Min = "Min",
        P25 = "25th percentile",
        Median = "Median",
        P75 = "75th percentile",
        Max = "Max"
    ) %>%
    # replace value names
    sub_values(values = "value", replacement = "Raw") %>%
    sub_values(values = "x_max", replacement = "Cut at 95th percentile") %>%
    sub_values(values = "x_norm", replacement = "Normalized") %>%
    # replace NAs
    sub_missing(missing_text = "-") %>%
    # format numbers
    fmt_auto()



```

**Descriptive statistics of the input variables for the grassland land use type**
:::

### Optimization results

::: {#tbl-optim_dist width="100%"}
```{r tbl-optim_dist}

library(dplyr)
library(gt)

tmp_data <- readr::read_csv("~/BiodivLabel/CASD_export/CASD_export_250122/table_MSE_distance_table_2025-01-22.csv")

tmp_table <- tmp_data %>%
    arrange(.,land_use_type) %>%
    bind_rows(.,
      tmp_data %>%
        summarise(
          archetype = "Mean distance",
          distance_init = mean(distance_init),
          distance_optim = mean(distance_optim))) %>%
    mutate(
        archetype = case_when(
            archetype == "median_crop" ~ "Median crop",
            archetype == "ES_A.2.1" ~ "Hedge Density",
            archetype == "ES_A.2.2" ~ "Mean Field Size",
            archetype == "ES_A.3.3" ~ "Crop diversity",
            archetype == "ES_A.4.5" ~ "Fertilization",
            archetype == "ES_A.5.1" ~ "Pesticide",
            archetype == "comp_org" ~ "Organic wheat / Conventional wheat",
            archetype == "median_grassland" ~ "Median grassland",
            archetype == "Mean distance" ~ "Mean distance"
        )
    ) 

tmp_table %>%
    gt() %>%
    cols_label(
        land_use_type = "Land use type",
        archetype = "Archetypes",
        litt_values = "Literature values",
        BVAS_init = "Biodiversity Value before optimization",
        distance_init = "Distance before optimization",
        BVAS_optim = "Biodiversity Value after optimization",
        distance_optim = "Distance after optimization"
    ) %>%
    # replace NAs
    sub_missing(missing_text = "-") %>%
    # format numbers
    fmt_auto()


```

**Distances between BVIAS results and the literature values**, before and after optimization
:::

::: {#tbl-optim_weights width="100%"}
```{r tbl-optim_weights}

library(dplyr)
library(gt)

tmp_data <- readr::read_csv("~/BiodivLabel/CASD_export/CASD_export_250122/BV_weight_2025-01-22.csv")

tmp_table <- tmp_data %>%
    pivot_wider(names_from = set,values_from = weight) %>%
    arrange(.,land_use_type,metric_number) %>%
    mutate(
        metric_label = case_when(
            metric_number == "A.2.1" ~ "Hedge density (linear meter / ha)",
            metric_number == "A.2.2" ~ "Mean Field Size (ha)",
            metric_number == "A.3.2" ~ "Ground cover (number of uncovered day)",
            metric_number == "A.3.3" ~ "Crop Diversity (Shannon Index)",
            metric_number == "A.3.1" ~ "Tillage (L diesel / ha)",
            metric_number == "A.4.3" ~ "Share of mineral fertilizer (%)",
            metric_number == "A.4.5" ~ "Fertilization (kg N / ha)",
            metric_number == "A.5.1" ~ "Pesticides (€~TFI~UDNu / ha)"
        )
    ) 

tmp_table %>%
    select(land_use_type,metric_number,metric_label,init,optim) %>%
    gt() %>%
    cols_label(
        land_use_type = "Land use type",
        metric_number = "Input variable",
        metric_label = "Description",
        init = "Initial weights",
        optim = "Optimized weights"
    ) %>%
    # replace NAs
    sub_missing(missing_text = "-") %>%
    # format numbers
    fmt_auto()



```

**Distances between BVIAS results and the literature values**, before and after optimization
:::

### Practices

#### Crops

::: {#tbl-results_practices_crops width="100%"}

```{r tbl-results_practices_crops}

library(dplyr)
library(tidyr)
library(gt)

source("~/BiodivLabel/huet_estimating_2025/result_tables.R")

tmp_table <- tmp_table0 %>%
    #filter products
    filter(production_type == "crop" & !is.na(product_name)) %>%
    # select columns
    select(practice,product_name,match,FQS,
           nobs,mean,sd,p100_diff_conv,pval_tukey,p100_diff_counterfactuals,padjust_bonf) %>%
    # keep only averages
    filter(match == "no_match") %>%
    # add counterfactuals
    rbind(
        tmp_table0 %>%
            #filter products
            filter(production_type == "crop" & !is.na(product_name)) %>%
            # filter counterfactuals
            filter(match != "no_match" & FQS == "Conventional") %>%
            # select columns
            select(practice,product_name,match,FQS,
                   nobs,mean,sd,p100_diff_conv,pval_tukey) %>%
            # add % diff to counterfactuals
            inner_join(
                tmp_table0 %>%
                    filter(match != "no_match" & FQS != "Conventional") %>%
                    select(practice,product_name,match,FQS,p100_diff_counterfactuals,padjust_bonf) %>%
                    rename(FQS_match = FQS),
                by = join_by(practice,product_name,match)) %>%
            # rename FQS
            mutate(FQS = paste0(FQS_match," Counterfactuals")) %>%
            select(!FQS_match)
    ) %>%
    select(!c(match)) %>%
    mutate(FQS = factor(FQS,
                        levels = c("Conventional",paste0(rep(levels(tmp_table0$FQS)[2:9],each = 2),
                                                         c(""," Counterfactuals")))))%>%
    arrange(practice,product_name,FQS)

tmp_table %>%
  # groups
  mutate(product_name = ifelse(row_number() == 1,
                               as.character(product_name), ""),
         .by = c(practice, product_name)) %>%
  gt(groupname_col = "practice") %>%
  tab_style(
    style = list(
      cell_fill(color = "gray"),
      cell_text(weight = "bolder")
    ),
    locations = cells_row_groups(groups = everything())
  ) %>%
  # format numbers
  fmt_auto() %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = c(p100_diff_conv,pval_tukey),
      rows = pval_tukey <= 0.05
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = c(p100_diff_counterfactuals,padjust_bonf),
      rows = padjust_bonf <= 0.05
    )
  ) %>%
  # replace NAs
  sub_missing(missing_text = "-") %>%
  # column labels
  tab_style(
    style = list(
      cell_text(weight = "bolder",size = "large")
    ),
    locations = cells_column_labels(everything())
  ) %>%
  cols_label(
    practice = "Practices",
    product_name = "Product",
    FQS = "FQS",
    nobs = "Observations",
    mean = "Mean",
    sd = "Standard Deviation",
    p100_diff_conv = "Difference with conventional mean (%)",
    pval_tukey = "Tukey HSD p-value",
    p100_diff_counterfactuals = "Average difference with counterfactuals (%)",
    padjust_bonf = "Paired t-test Bonferroni adjusted p-value"
  )


```

**Differences in crop cultivation practices between certified and conventional cereal production.** Significant differences before (Tukey HSD test, p-value $\leq$ 0.05) and after matching (paired t-test, Bonferroni adjusted p-value $\leq$ 0.05) are written in bold.
:::

#### Husbandry

::: {#tbl-results_practices_dairy_herd width="100%"}
```{r tbl-results_practices_dairy_herd}

library(dplyr)
library(tidyr)
library(gt)

source("~/BiodivLabel/huet_estimating_2025/result_tables.R")

tmp_table <- tmp_table0 %>%
    filter(production_type == "milk" & !is.na(product_name)) %>%
    select(practice,product_name,match,FQS,
           nobs,mean,sd,p100_diff_conv,pval_tukey,p100_diff_counterfactuals,padjust_bonf) %>%

    filter(!(match !="no_match" & FQS != "Conventional")) %>%
    left_join(.,
              tmp_table0 %>%
                  filter(production_type == "milk" & !is.na(product_name)) %>%
                  filter(match != "no_match" & FQS !="Conventional") %>%
                  select(practice,product_name,match,FQS) %>%
                  distinct() %>%
                  rename(FQS_match = FQS),
              by = join_by(practice, product_name, match)) %>%
    mutate(FQS = case_when(
        match != "no_match" ~paste0(FQS_match," Counterfactual"),
        .default = FQS
    )) %>%
    mutate(FQS = factor(FQS,
                        levels = as.vector(tibble(
                            labels = c(levels(tmp_table0$FQS),paste0(levels(tmp_table0$FQS),
                                                                     " Counterfactual")),
                            order = c(seq(1:length(levels(tmp_table0$FQS))),
                                      seq(1:length(levels(tmp_table0$FQS)))+0.5)) %>%
                                arrange(order) %>% select(labels))$labels)) %>%
    select(!c(match,product_name,FQS_match)) %>%
    arrange(practice,FQS,.by_group = TRUE) %>%
    filter(practice %in% c(practice_names$BVIAS$labels,practice_names$herd$labels))

tmp_table <- tmp_table0 %>%
    #filter products
    filter(production_type == "milk" & !is.na(product_name)) %>%
    # select columns
    select(practice,product_name,match,FQS,
           nobs,mean,sd,p100_diff_conv,pval_tukey,p100_diff_counterfactuals,padjust_bonf) %>%
    # keep only averages
    filter(match == "no_match") %>%
    # add counterfactuals
    rbind(
        tmp_table0 %>%
            #filter products
            filter(production_type == "milk" & !is.na(product_name)) %>%
            # filter counterfactuals
            filter(match != "no_match" & FQS == "Conventional") %>%
            # select columns
            select(practice,product_name,match,FQS,
                   nobs,mean,sd,p100_diff_conv,pval_tukey) %>%
            # add % diff to counterfactuals
            inner_join(
                tmp_table0 %>%
                    filter(match != "no_match" & FQS != "Conventional") %>%
                    select(practice,product_name,match,FQS,p100_diff_counterfactuals,padjust_bonf) %>%
                    rename(FQS_match = FQS),
                by = join_by(practice,product_name,match)) %>%
            # rename FQS
            mutate(FQS = paste0(FQS_match," Counterfactuals")) %>%
            select(!FQS_match)
    ) %>%
    select(!c(match,product_name)) %>%
    mutate(FQS = factor(FQS,
                        levels = c("Conventional",paste0(rep(levels(tmp_table0$FQS)[2:9],each = 2),
                                                         c(""," Counterfactuals"))))) %>%
    arrange(practice,FQS,.by_group = TRUE) %>%
    filter(practice %in% c(practice_names$BVIAS$labels,practice_names$herd$labels))



tmp_table %>%
  # groups
  mutate(FQS = ifelse(row_number() == 1,
                               as.character(FQS), ""),
         .by = c(practice, FQS)) %>%
  gt(groupname_col = "practice") %>%
  tab_style(
    style = list(
      cell_fill(color = "gray"),
      cell_text(weight = "bolder")
    ),
    locations = cells_row_groups(groups = everything())
  ) %>%
  # format numbers
  fmt_auto() %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = c(p100_diff_conv,pval_tukey),
      rows = pval_tukey <= 0.05
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = c(p100_diff_counterfactuals,padjust_bonf),
      rows = padjust_bonf <= 0.05
    )
  ) %>%
  # replace NAs
  sub_missing(missing_text = "-") %>%
  # column labels
  tab_style(
    style = list(
      cell_text(weight = "bolder",size = "large")
    ),
    locations = cells_column_labels(everything())
  ) %>%
  cols_label(
    practice = "Practices",
    FQS = "FQS",
    nobs = "Observations",
    mean = "Mean",
    sd = "Standard Deviation",
    p100_diff_conv = "Difference with conventional mean (%)",
    pval_tukey = "Tukey HSD p-value",
    p100_diff_counterfactuals = "Average difference with counterfactuals (%)",
    padjust_bonf = "Paired t-test Bonferroni adjusted p-value"
  )


```

**Differences in husbandry practices between certified and conventional milk production.** Significant differences before (Tukey HSD test, p-value $\leq$ 0.05) and after matching (paired t-test, Bonferroni adjusted p-value $\leq$ 0.05) are written in bold.
:::

#### Feed crops

::: {#tbl-results_practices_dairy_feed width="100%"}

```{r tbl-results_practices_dairy_feed}

library(dplyr)
library(tidyr)
library(gt)

source("~/BiodivLabel/huet_estimating_2025/result_tables.R")

tmp_table <- tmp_table0 %>%
    #filter products
    filter(production_type == "milk" & !is.na(product_name)) %>%
    # select columns
    select(practice,product_name,match,FQS,
           nobs,mean,sd,p100_diff_conv,pval_tukey,p100_diff_counterfactuals,padjust_bonf) %>%
    # keep only averages
    filter(match == "no_match") %>%
    # add counterfactuals
    rbind(
        tmp_table0 %>%
            #filter products
            filter(production_type == "milk" & !is.na(product_name)) %>%
            # filter counterfactuals
            filter(match != "no_match" & FQS == "Conventional") %>%
            # select columns
            select(practice,product_name,match,FQS,
                   nobs,mean,sd,p100_diff_conv,pval_tukey) %>%
            # add % diff to counterfactuals
            inner_join(
                tmp_table0 %>%
                    filter(match != "no_match" & FQS != "Conventional") %>%
                    select(practice,product_name,match,FQS,p100_diff_counterfactuals,padjust_bonf) %>%
                    rename(FQS_match = FQS),
                by = join_by(practice,product_name,match)) %>%
            # rename FQS
            mutate(FQS = paste0(FQS_match," Counterfactuals")) %>%
            select(!FQS_match)
    ) %>%
    select(!c(match,product_name)) %>%
    mutate(FQS = factor(FQS,
                        levels = c("Conventional",paste0(rep(levels(tmp_table0$FQS)[2:9],each = 2),
                                                         c(""," Counterfactuals"))))) %>%
    arrange(practice,FQS,.by_group = TRUE) %>%
    filter(practice %in% c(practice_names$feed$labels))

tmp_table %>%
  # groups
  mutate(FQS = ifelse(row_number() == 1,
                               as.character(FQS), ""),
         .by = c(practice, FQS)) %>%
  gt(groupname_col = "practice") %>%
  tab_style(
    style = list(
      cell_fill(color = "gray"),
      cell_text(weight = "bolder")
    ),
    locations = cells_row_groups(groups = everything())
  ) %>%
  # format numbers
  fmt_auto() %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = c(p100_diff_conv,pval_tukey),
      rows = pval_tukey <= 0.05
    )
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = c(p100_diff_counterfactuals,padjust_bonf),
      rows = padjust_bonf <= 0.05
    )
  ) %>%
  # replace NAs
  sub_missing(missing_text = "-") %>%
  # column labels
  tab_style(
    style = list(
      cell_text(weight = "bolder",size = "large")
    ),
    locations = cells_column_labels(everything())
  ) %>%
  cols_label(
    practice = "Practices",
    FQS = "FQS",
    nobs = "Observations",
    mean = "Mean",
    sd = "Standard Deviation",
    p100_diff_conv = "Difference with conventional mean (%)",
    pval_tukey = "Tukey HSD p-value",
    p100_diff_counterfactuals = "Average difference with counterfactuals (%)",
    padjust_bonf = "Paired t-test Bonferroni adjusted p-value"
  )


```

**Differences in livestock feed production practices between certified and conventional milk production.** Significant differences before (Tukey HSD test, p-value $\leq$ 0.05) and after matching (paired t-test, Bonferroni adjusted p-value $\leq$ 0.05) are written in bold.
:::

### Nutritional values

::: {#tbl-nutri_values}
| Product | Description in the Ciqual data base | Energy, Regulation EU No 1169/2011 (kcal/100g) | Protein (g/100g) |
|:-------------|:------------------|-------------------------:|-------------:|
| Wheat   | Wheat flour, type 110               |                                            343 |             9,61 |
| Milk    | Milk, whole, pasteurised            |                                           56,5 |              3,3 |

*Nutritional values* as retrieve from @agence_nationale_de_securite_sanitaire_de_lalimentation_de_lenvironnement_et_du_travail_anses_table_2020.
:::

## Supplementary Figures

::: {#fig-input_distrib layout-nrow="2"}
![](~/BiodivLabel/huet_estimating_2025/images/stat_input_by_LU_arable_2025-01-22_page-0001.jpg)

![](~/BiodivLabel/huet_estimating_2025/images/stat_input_by_LU_grassland_2025-01-22_page-0001.jpg)

**Distribution of input variables** for arable and grassland land use types
:::

::: {#fig-BVC_functions layout-nrow="2"}
![](~/BiodivLabel/huet_estimating_2025/images/plot_BVC_functions_before_optimization_2025-01-22_page-0001.jpg)

![](~/BiodivLabel/huet_estimating_2025/images/plot_BVC_functions_after_optimization_2025-01-22_page-0001.jpg)

**Biodiversity value contribution** as function of the normalized input variables and their distribution, by land use type, before and after optimization
:::

::: {#fig-practice_herd_feed}
```{r practice_herd_feed, fig.align='center',fig.width=15,fig.height=10,fig.fullwidth=TRUE}

library(dplyr)
library(tidyr)
library(ggplot2)

source("~/BiodivLabel/huet_estimating_2025/result_tables.R")

# plot data ----

tmp_plot_data <- tmp_table0 %>%
  # select only one practice for some products
  filter(
    practice_subset == "feed"
    & production_type == "milk"
    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]
    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%
  # add conventional mean
    inner_join(.,tmp_table0 %>%
              filter(FQS %in% c("Conventional","Counterfactual")) %>%
              group_by(product_name,match,practice) %>%
              reframe(mean_conv = mean),
            by = join_by(product_name, practice, match)) %>%
  # change names for counterfactuals
  filter(match == "no_match" | FQS != "Conventional") %>%
  mutate(FQS = factor(case_when(
    match == "no_match" ~ FQS,
    match != "no_match" ~ "Counterfactual"
  ))) %>%
  # add asterisk when signif
  mutate(
    stat_grp = case_when(
      match == "no_match" ~ stat_grp,
      match != "no_match" & padjust_bonf <= 0.05 ~ "*",
      .default = ""
  )) %>%
  # add plot_x
  mutate(
    plot_x = paste0(product_name,match,FQS)
  )


# plot order ----


tmp_plot_order <- tibble(
  plot_x = rev(c("Milkno_matchConventional",
                 "Milkno_matchOrganic Farming",
                 "MilkLait__ABCounterfactual",
                 "Milkno_matchCharentes-Poitou Butter",
                 "MilkLait__Beurre de Charentes-PoitouCounterfactual",
                 "Milkno_matchComté - Morbier",
                 "MilkLait__Comte - MorbierCounterfactual"
                 )),
  labels = rev(c("Milk - Conventional",
                 "Milk - Organic Farming",
                 "Milk - Counterfactual Organic Farming",
                 "Milk - Charentes-Poitou Butter",
                 "Milk - Counterfactual Charentes-Poitou Butter",
                 "Milk - Comte - Morbier",
                 "Milk - Counterfactual Comte - Morbier")))

tmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,
                               levels = tmp_plot_order$plot_x,
                               labels = tmp_plot_order$labels)
tmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)

tmp_plot_data <- tmp_plot_data %>%
    filter(!is.na(plot_x) & !is.na(practice)) %>%
    mutate(
        plot_count_size = case_when(
            pval_tukey <= 0.05 | padjust_bonf <= 0.05 ~ abs((mean_conv - mean)/mean_conv*100),
            .default = NA
        ),
        plot_count_colour = case_when(
            mean/mean_conv > 1 ~ T,
            .default = F
        ),
    plot_mean = case_when(
      FQS == "Counterfactual" ~ mean_conv,
      .default = mean
    )
  ) %>%
  # filter practices
  filter(
    practice %in% practice_names$feed$labels[
        practice_names$feed$practice %in%
            paste0(rep("feed",each = length(practice_names$crops$practice)),"_",practice_names$crops$practice)]
)

ggplot() +
  # circles
    geom_count(data = tmp_plot_data,
               aes(x = practice, y = plot_x,
                   colour = plot_count_colour,
                   size = plot_count_size)
    ) +
  # means
    geom_text(data = tmp_plot_data,
              aes(x = practice, y = plot_x,
                  label = format(plot_mean,scientific = T,digits = 2)),
              size = 5, angle = 45, colour = "#666666") +
    # theme
    #scale_color_binned(type = "viridis")+
    scale_color_discrete("Significant differences \n \n FQS > Conventional") +
    scale_size_binned("% difference \n with conventional",range = c(1, 12.5)) +
    labs(x = "Practices (mean)", y = "Products") +
    theme_light() +
    theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
          axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
          text = element_text(size = 18),
          legend.position = "right",
          legend.box="vertical",
          legend.margin = margin(),
          legend.direction = "vertical",
          legend.justification  = "right")

```

**Feed production practices (average of all feed) for some FQSs and conventional milk productions.** The mean is displayed with a dot for significant differences between FQS and either conventional (dot displayed on FQS row; Tukey HSD p-value $\leq$ 0.05) or counterfactual (dot displayed on counterfactual row; paired t-test, Bonferroni adjusted p-value $\leq$ 0.05). The dot color depends on whether the comparison between the FQS and either conventional or counterfactual is positive (blue dot) or negative (red dot). The dot size depends on the proportion of the difference between the FQS and either conventional or counterfactual. The full results for all FQSs and products studied are presented in @tbl-results_practices_dairy_feed.

:::

::: {#fig-practice_herd_feed_produced}
```{r practice_herd_feed_produced, fig.align='center',fig.width=15,fig.height=10,fig.fullwidth=TRUE}

library(dplyr)
library(tidyr)
library(ggplot2)

source("~/BiodivLabel/huet_estimating_2025/result_tables.R")

# plot data ----

tmp_plot_data <- tmp_table0 %>%
  # select only one practice for some products
  filter(
    practice_subset == "feed"
    & production_type == "milk"
    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]
    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%
  # add conventional mean
    inner_join(.,tmp_table0 %>%
              filter(FQS %in% c("Conventional","Counterfactual")) %>%
              group_by(product_name,match,practice) %>%
              reframe(mean_conv = mean),
            by = join_by(product_name, practice, match)) %>%
  # change names for counterfactuals
  filter(match == "no_match" | FQS != "Conventional") %>%
  mutate(FQS = factor(case_when(
    match == "no_match" ~ FQS,
    match != "no_match" ~ "Counterfactual"
  ))) %>%
  # add asterisk when signif
  mutate(
    stat_grp = case_when(
      match == "no_match" ~ stat_grp,
      match != "no_match" & padjust_bonf <= 0.05 ~ "*",
      .default = ""
  )) %>%
  # add plot_x
  mutate(
    plot_x = paste0(product_name,match,FQS)
  )


# plot order ----


tmp_plot_order <- tibble(
  plot_x = rev(c("Milkno_matchConventional",
                 "Milkno_matchOrganic Farming",
                 "MilkLait__ABCounterfactual",
                 "Milkno_matchCharentes-Poitou Butter",
                 "MilkLait__Beurre de Charentes-PoitouCounterfactual",
                 "Milkno_matchComté - Morbier",
                 "MilkLait__Comte - MorbierCounterfactual"
                 )),
  labels = rev(c("Milk - Conventional",
                 "Milk - Organic Farming",
                 "Milk - Counterfactual Organic Farming",
                 "Milk - Charentes-Poitou Butter",
                 "Milk - Counterfactual Charentes-Poitou Butter",
                 "Milk - Comte - Morbier",
                 "Milk - Counterfactual Comte - Morbier")))

tmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,
                               levels = tmp_plot_order$plot_x,
                               labels = tmp_plot_order$labels)
tmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)

tmp_plot_data <- tmp_plot_data %>%
    filter(!is.na(plot_x) & !is.na(practice)) %>%
    mutate(
        plot_count_size = case_when(
            pval_tukey <= 0.05 | padjust_bonf <= 0.05 ~ abs((mean_conv - mean)/mean_conv*100),
            .default = NA
        ),
        plot_count_colour = case_when(
            mean/mean_conv > 1 ~ T,
            .default = F
        ),
    plot_mean = case_when(
      FQS == "Counterfactual" ~ mean_conv,
      .default = mean
    )
  ) %>%
  # filter practices
  filter(
    practice %in% practice_names$feed$labels[
        practice_names$feed$practice %in%
            paste0(rep("feed_produced",each = length(practice_names$crops$practice)),"_",
                     practice_names$crops$practice)]
)

ggplot() +
  # circles
    geom_count(data = tmp_plot_data,
               aes(x = practice, y = plot_x,
                   colour = plot_count_colour,
                   size = plot_count_size)
    ) +
  # means
    geom_text(data = tmp_plot_data,
              aes(x = practice, y = plot_x,
                  label = format(plot_mean,scientific = T,digits = 2)),
              size = 5, angle = 45, colour = "#666666") +
    # theme
    #scale_color_binned(type = "viridis")+
    scale_color_discrete("Significant differences \n \n FQS > Conventional") +
    scale_size_binned("% difference \n with conventional",range = c(1, 12.5)) +
    labs(x = "Practices (mean)", y = "Products") +
    theme_light() +
    theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
          axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
          text = element_text(size = 18),
          legend.position = "right",
          legend.box="vertical",
          legend.margin = margin(),
          legend.direction = "vertical",
          legend.justification  = "right")

```

**Feed production practices (average of feed produced at farm) for some FQSs and conventional milk productions.** The mean is displayed with a dot for significant differences between FQS and either conventional (dot displayed on FQS row; Tukey HSD p-value $\leq$ 0.05) or counterfactual (dot displayed on counterfactual row; paired t-test, Bonferroni adjusted p-value $\leq$ 0.05). The dot color depends on whether the comparison between the FQS and either conventional or counterfactual is positive (blue dot) or negative (red dot). The dot size depends on the proportion of the difference between the FQS and either conventional or counterfactual. The full results for all FQSs and products studied are presented in @tbl-results_practices_dairy_feed.

:::

::: {#fig-practice_herd_feed_grassland}
```{r practice_herd_feed_grassland, fig.align='center',fig.width=15,fig.height=10,fig.fullwidth=TRUE}

library(dplyr)
library(tidyr)
library(ggplot2)

source("~/BiodivLabel/huet_estimating_2025/result_tables.R")

# plot data ----

tmp_plot_data <- tmp_table0 %>%
  # select only one practice for some products
  filter(
    practice_subset == "feed"
    & production_type == "milk"
    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]
    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%
  # add conventional mean
    inner_join(.,tmp_table0 %>%
              filter(FQS %in% c("Conventional","Counterfactual")) %>%
              group_by(product_name,match,practice) %>%
              reframe(mean_conv = mean),
            by = join_by(product_name, practice, match)) %>%
  # change names for counterfactuals
  filter(match == "no_match" | FQS != "Conventional") %>%
  mutate(FQS = factor(case_when(
    match == "no_match" ~ FQS,
    match != "no_match" ~ "Counterfactual"
  ))) %>%
  # add asterisk when signif
  mutate(
    stat_grp = case_when(
      match == "no_match" ~ stat_grp,
      match != "no_match" & padjust_bonf <= 0.05 ~ "*",
      .default = ""
  )) %>%
  # add plot_x
  mutate(
    plot_x = paste0(product_name,match,FQS)
  )


# plot order ----


tmp_plot_order <- tibble(
  plot_x = rev(c("Milkno_matchConventional",
                 "Milkno_matchOrganic Farming",
                 "MilkLait__ABCounterfactual",
                 "Milkno_matchCharentes-Poitou Butter",
                 "MilkLait__Beurre de Charentes-PoitouCounterfactual",
                 "Milkno_matchComté - Morbier",
                 "MilkLait__Comte - MorbierCounterfactual"
                 )),
  labels = rev(c("Milk - Conventional",
                 "Milk - Organic Farming",
                 "Milk - Counterfactual Organic Farming",
                 "Milk - Charentes-Poitou Butter",
                 "Milk - Counterfactual Charentes-Poitou Butter",
                 "Milk - Comte - Morbier",
                 "Milk - Counterfactual Comte - Morbier")))

tmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,
                               levels = tmp_plot_order$plot_x,
                               labels = tmp_plot_order$labels)
tmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)

tmp_plot_data <- tmp_plot_data %>%
    filter(!is.na(plot_x) & !is.na(practice)) %>%
    mutate(
        plot_count_size = case_when(
            pval_tukey <= 0.05 | padjust_bonf <= 0.05 ~ abs((mean_conv - mean)/mean_conv*100),
            .default = NA
        ),
        plot_count_colour = case_when(
            mean/mean_conv > 1 ~ T,
            .default = F
        ),
    plot_mean = case_when(
      FQS == "Counterfactual" ~ mean_conv,
      .default = mean
    )
  ) %>%
  # filter practices
  filter(
    practice %in% practice_names$feed$labels[
        practice_names$feed$practice %in%
            paste0(rep("feed_grassland",each = length(c("A.4.3","A.4.5"))),"_",
                     c("A.4.3","A.4.5"))]
)

ggplot() +
  # circles
    geom_count(data = tmp_plot_data,
               aes(x = practice, y = plot_x,
                   colour = plot_count_colour,
                   size = plot_count_size)
    ) +
  # means
    geom_text(data = tmp_plot_data,
              aes(x = practice, y = plot_x,
                  label = format(plot_mean,scientific = T,digits = 2)),
              size = 5, angle = 45, colour = "#666666") +
    # theme
    #scale_color_binned(type = "viridis")+
    scale_color_discrete("Significant differences \n \n FQS > Conventional") +
    scale_size_binned("% difference \n with conventional",range = c(1, 12.5)) +
    labs(x = "Practices (mean)", y = "Products") +
    theme_light() +
    theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
          axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
          text = element_text(size = 18),
          legend.position = "right",
          legend.box="vertical",
          legend.margin = margin(),
          legend.direction = "vertical",
          legend.justification  = "right")

```

**Feed production practices (average of grasslands) for some FQSs and conventional milk productions.** The mean is displayed with a dot for significant differences between FQS and either conventional (dot displayed on FQS row; Tukey HSD p-value $\leq$ 0.05) or counterfactual (dot displayed on counterfactual row; paired t-test, Bonferroni adjusted p-value $\leq$ 0.05). The dot color depends on whether the comparison between the FQS and either conventional or counterfactual is positive (blue dot) or negative (red dot). The dot size depends on the proportion of the difference between the FQS and either conventional or counterfactual. The full results for all FQSs and products studied are presented in @tbl-results_practices_dairy_feed.

:::

::: {#fig-practice_herd_feed_purchased}
```{r practice_herd_feed_purchased, fig.align='center',fig.width=15,fig.height=10,fig.fullwidth=TRUE}

library(dplyr)
library(tidyr)
library(ggplot2)

source("~/BiodivLabel/huet_estimating_2025/result_tables.R")

# plot data ----

tmp_plot_data <- tmp_table0 %>%
  # select only one practice for some products
  filter(
    practice_subset == "feed"
    & production_type == "milk"
    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]
    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%
  # add conventional mean
    inner_join(.,tmp_table0 %>%
              filter(FQS %in% c("Conventional","Counterfactual")) %>%
              group_by(product_name,match,practice) %>%
              reframe(mean_conv = mean),
            by = join_by(product_name, practice, match)) %>%
  # change names for counterfactuals
  filter(match == "no_match" | FQS != "Conventional") %>%
  mutate(FQS = factor(case_when(
    match == "no_match" ~ FQS,
    match != "no_match" ~ "Counterfactual"
  ))) %>%
  # add asterisk when signif
  mutate(
    stat_grp = case_when(
      match == "no_match" ~ stat_grp,
      match != "no_match" & padjust_bonf <= 0.05 ~ "*",
      .default = ""
  )) %>%
  # add plot_x
  mutate(
    plot_x = paste0(product_name,match,FQS)
  )


# plot order ----


tmp_plot_order <- tibble(
  plot_x = rev(c("Milkno_matchConventional",
                 "Milkno_matchOrganic Farming",
                 "MilkLait__ABCounterfactual",
                 "Milkno_matchCharentes-Poitou Butter",
                 "MilkLait__Beurre de Charentes-PoitouCounterfactual",
                 "Milkno_matchComté - Morbier",
                 "MilkLait__Comte - MorbierCounterfactual"
                 )),
  labels = rev(c("Milk - Conventional",
                 "Milk - Organic Farming",
                 "Milk - Counterfactual Organic Farming",
                 "Milk - Charentes-Poitou Butter",
                 "Milk - Counterfactual Charentes-Poitou Butter",
                 "Milk - Comte - Morbier",
                 "Milk - Counterfactual Comte - Morbier")))

tmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,
                               levels = tmp_plot_order$plot_x,
                               labels = tmp_plot_order$labels)
tmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)

tmp_plot_data <- tmp_plot_data %>%
    filter(!is.na(plot_x) & !is.na(practice)) %>%
    mutate(
        plot_count_size = case_when(
            pval_tukey <= 0.05 | padjust_bonf <= 0.05 ~ abs((mean_conv - mean)/mean_conv*100),
            .default = NA
        ),
        plot_count_colour = case_when(
            mean/mean_conv > 1 ~ T,
            .default = F
        ),
    plot_mean = case_when(
      FQS == "Counterfactual" ~ mean_conv,
      .default = mean
    )
  ) %>%
  # filter practices
  filter(
    practice %in% practice_names$feed$labels[
        practice_names$feed$practice %in%
            paste0(rep("feed_purchased",each = length(practice_names$crops$practice)),"_",
                     practice_names$crops$practice)]
)

ggplot() +
  # circles
    geom_count(data = tmp_plot_data,
               aes(x = practice, y = plot_x,
                   colour = plot_count_colour,
                   size = plot_count_size)
    ) +
  # means
    geom_text(data = tmp_plot_data,
              aes(x = practice, y = plot_x,
                  label = format(plot_mean,scientific = T,digits = 2)),
              size = 5, angle = 45, colour = "#666666") +
    # theme
    #scale_color_binned(type = "viridis")+
    scale_color_discrete("Significant differences \n \n FQS > Conventional") +
    scale_size_binned("% difference \n with conventional",range = c(1, 12.5)) +
    labs(x = "Practices (mean)", y = "Products") +
    theme_light() +
    theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
          axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
          text = element_text(size = 18),
          legend.position = "right",
          legend.box="vertical",
          legend.margin = margin(),
          legend.direction = "vertical",
          legend.justification  = "right")

```

**Feed production practices (average of purchased feed) for some FQSs and conventional milk productions.** The mean is displayed with a dot for significant differences between FQS and either conventional (dot displayed on FQS row; Tukey HSD p-value $\leq$ 0.05) or counterfactual (dot displayed on counterfactual row; paired t-test, Bonferroni adjusted p-value $\leq$ 0.05). The dot color depends on whether the comparison between the FQS and either conventional or counterfactual is positive (blue dot) or negative (red dot). The dot size depends on the proportion of the difference between the FQS and either conventional or counterfactual. The full results for all FQSs and products studied are presented in @tbl-results_practices_dairy_feed.

:::

# Section 3: Propensity score Matching details

