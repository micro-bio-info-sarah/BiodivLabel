aes(x = practice, y = plot_x,
colour = comp_bin,
size = comp)
) +
geom_text(data = tmp_plot_data,
aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),
size = 3.25,angle = 45) +
# theme
#scale_color_binned(type = "viridis")+
scale_size("Significant differences",range = c(0,15)
) +
scale_color_discrete("FQS > Conventional") +
labs(x = "Practices (mean)", y = "Products") +
theme_light() +
theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
text = element_text(size = 12),
legend.position = "bottom",
legend.box="horizontal",
legend.margin = margin(),
legend.direction = "vertical")
ggplot() +
geom_count(data = tmp_plot_data,
aes(x = practice, y = plot_x,
colour = comp_bin,
size = comp)
) +
geom_text(data = tmp_plot_data,
aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),
size = 3.25,angle = 45) +
# theme
#scale_color_binned(type = "viridis")+
scale_size("Significant differences",range = c(0,15)
) +
scale_color_discrete("FQS > Conventional") +
labs(x = "Practices (mean)", y = "Products") +
theme_light() +
theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
text = element_text(size = 12),
legend.position = "bottom",
legend.box="horizontal",
legend.margin = margin(),
legend.direction = "vertical",
legend.box.just = "left")
ggplot() +
geom_count(data = tmp_plot_data,
aes(x = practice, y = plot_x,
colour = comp_bin,
size = comp)
) +
geom_text(data = tmp_plot_data,
aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),
size = 3.25,angle = 45) +
# theme
#scale_color_binned(type = "viridis")+
scale_size("Significant differences",range = c(0,15)
) +
scale_color_discrete("FQS > Conventional") +
labs(x = "Practices (mean)", y = "Products") +
theme_light() +
theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
text = element_text(size = 12),
legend.position = "bottom",
legend.box="horizontal",
legend.margin = margin(),
legend.direction = "vertical",
legend.justification =  = "left")
ggplot() +
geom_count(data = tmp_plot_data,
aes(x = practice, y = plot_x,
colour = comp_bin,
size = comp)
) +
geom_text(data = tmp_plot_data,
aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),
size = 3.25,angle = 45) +
# theme
#scale_color_binned(type = "viridis")+
scale_size("Significant differences",range = c(0,15)
) +
scale_color_discrete("FQS > Conventional") +
labs(x = "Practices (mean)", y = "Products") +
theme_light() +
theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
text = element_text(size = 12),
legend.position = "bottom",
legend.box="horizontal",
legend.margin = margin(),
legend.direction = "vertical",
legend.justification  = "left")
ggplot() +
geom_count(data = tmp_plot_data,
aes(x = practice, y = plot_x,
colour = comp_bin,
size = comp)
) +
geom_text(data = tmp_plot_data,
aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),
size = 3.25,angle = 45) +
# theme
#scale_color_binned(type = "viridis")+
scale_size("Significant differences",range = c(0,15)
) +
scale_color_discrete("FQS > Conventional") +
labs(x = "Practices (mean)", y = "Products") +
theme_light() +
theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
text = element_text(size = 12),
legend.position = "bottom",
legend.box="horizontal",
legend.margin = margin(),
legend.direction = "vertical",
legend.justification  = "right")
gc()
library(dplyr)
library(tidyr)
library(ggplot2)
source("~/BiodivLabel/huet_estimating_2025/result_tables.R")
# plot data ----
tmp_plot_data <- tmp_table0 %>%
# select only one practice for some products
filter(
practice_subset == "crops"
& production_type == "crop"
& product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]
& FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%
# add conventional mean
inner_join(.,tmp_table0 %>%
filter(FQS %in% c("Conventional","Counterfactual")) %>%
group_by(product_name,match,practice) %>%
reframe(mean_conv = mean,.groups = "keep"),
by = join_by(product_name, practice, match)) %>%
# change names for counterfactuals
filter(match == "no_match" | FQS != "Conventional") %>%
mutate(FQS = factor(case_when(
match == "no_match" ~ FQS,
match != "no_match" ~ "Counterfactual"
))) %>%
# add asterisk when signif
mutate(
stat_grp = case_when(
match == "no_match" ~ stat_grp,
match != "no_match" & padjust_bonf <= 0.05 ~ "*",
.default = ""
)) %>%
# add plot_x
mutate(
plot_x = paste0(product_name,match,FQS)
)
# plot order ----
tmp_plot_order <- tibble(
plot_x = rev(c("Soft Wheatno_matchConventional",
"Soft Wheatno_matchOrganic Farming",
"Soft WheatBle_tendre__ABCounterfactual",
"Soft Wheatno_matchLabel Rouge",
"Soft WheatBle_tendre__LRCounterfactual",
"Grain Maizeno_matchConventional",
"Grain Maizeno_matchOrganic Farming",
"Grain MaizeMais_grain__ABCounterfactual"
)),
labels = rev(c("Soft Wheat - Conventional",
"Soft Wheat - Organic Farming",
"Soft Wheat - Counterfactual Organic Farming",
"Soft Wheat - Label Rouge",
"Soft Wheat - Counterfactual Label Rouge",
"Grain Maize - Conventional",
"Grain Maize - Organic Farming",
"Grain Maize - Counterfactual Organic Farming"
)))
tmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,
levels = tmp_plot_order$plot_x,
labels = tmp_plot_order$labels)
tmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)
tmp_plot_data <- tmp_plot_data %>%
mutate(
both_pval = case_when(
pval_tukey <= 0.05 ~ pval_tukey,
padjust_bonf <= 0.05 ~ padjust_bonf,
.default = NA
),
both_mean_diff = case_when(
both_pval <= 0.05 ~ mean/mean_conv,
.default = 0
)
) %>%
mutate(
comp = case_when(
both_pval <= 0.05 & both_mean_diff < 1 ~ 1-both_mean_diff,
both_pval <= 0.05 & both_mean_diff >= 1 ~ both_mean_diff,
.default = 0
),
comp_bin = case_when(
both_mean_diff > 1 ~ T,
.default = F
)
) %>%
mutate(
text = case_when(
FQS == "Counterfactual" ~ mean_conv,
.default = mean
)
)
ggplot() +
geom_count(data = tmp_plot_data,
aes(x = practice, y = plot_x,
colour = comp_bin,
size = comp)
) +
geom_text(data = tmp_plot_data,
aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),
size = 3.5, angle = 45) +
# theme
#scale_color_binned(type = "viridis")+
scale_size("Significant differences",range = c(0,15)
) +
scale_color_discrete("FQS > Conventional") +
labs(x = "Practices (mean)", y = "Products") +
theme_light() +
theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),
axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),
text = element_text(size = 12),
legend.position = "bottom",
legend.box="horizontal",
legend.margin = margin(),
legend.direction = "vertical",
legend.justification  = "right")
library(dplyr)
library(tidyr)
library(gt)
source("~/BiodivLabel/huet_estimating_2025/result_tables.R")
tmp_table <- tmp_table0 %>%
filter(production_type == "crop" & !is.na(product_name)) %>%
select(practice,product_name,match,FQS,
nobs,mean,sd,mean_conv_diff,pval_tukey,mean_diff_match,padjust_bonf) %>%
filter(!(match !="no_match" & FQS != "Conventional")) %>%
left_join(.,
tmp_table0 %>%
filter(production_type == "crop" & !is.na(product_name)) %>%
filter(match != "no_match" & FQS !="Conventional") %>%
select(practice,product_name,match,FQS) %>%
distinct() %>%
rename(FQS_match = FQS),
by = join_by(practice, product_name, match)) %>%
mutate(FQS = case_when(
match != "no_match" ~paste0(FQS_match," Counterfactual"),
.default = FQS
)) %>%
select(!c(match,FQS_match)) %>%
arrange(practice,product_name,FQS)
tmp_table %>%
# groups
mutate(product_name = ifelse(row_number() == 1,
as.character(product_name), ""),
.by = c(practice, product_name)) %>%
gt(groupname_col = "practice") %>%
tab_style(
style = list(
cell_fill(color = "gray"),
cell_text(weight = "bolder")
),
locations = cells_row_groups(groups = everything())
) %>%
# format numbers
fmt_auto() %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(mean_conv_diff,pval_tukey),
rows = pval_tukey <= 0.05
)
) %>%
tab_style(
style = list(
cell_text(weight = "bold")
),
locations = cells_body(
columns = c(mean_diff_match,padjust_bonf),
rows = padjust_bonf <= 0.05
)
) %>%
# replace NAs
sub_missing(missing_text = "-") %>%
# column labels
tab_style(
style = list(
cell_text(weight = "bolder",size = "large")
),
locations = cells_column_labels(everything())
) %>%
cols_label(
practice = "Practices",
product_name = "Product",
FQS = "FQS",
nobs = "Observations",
mean = "Mean",
sd = "Standard Deviation",
mean_conv_diff = "Difference from conventional mean (%)",
pval_tukey = "Tukey HSD p-value",
mean_diff_match = "Average paired difference from counterfactual mean",
padjust_bonf = "Paired t-test Bonferroni adjusted p-value"
)
library(dplyr)
library(tidyr)
library(ggplot2)
source("~/BiodivLabel/huet_estimating_2025/result_tables.R")
# plot data ----
tmp_plot_data <- tmp_table0 %>%
# select only one practice for some products
filter(
practice == tmp_practice_names$labels[tmp_practice_names$practice == "BVIAS_ha"]
& product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]
& FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%
# change names for counterfactuals
filter(match == "no_match" | FQS == "Conventional") %>%
mutate(FQS = factor(case_when(
match == "no_match" ~ FQS,
match != "no_match" ~ "Counterfactual"
))) %>%
# add asterisk when signif
mutate(
stat_grp = case_when(
match == "no_match" ~ stat_grp,
match != "no_match" & padjust_bonf <= 0.05 ~ "*",
.default = ""
)) %>%
# add plot_x
mutate(
plot_x = paste0(product_name,match,FQS)
)
# plot order ----
tmp_plot_order <- tibble(
plot_x = rev(c("Soft Wheatno_matchConventional",
"Soft Wheatno_matchOrganic Farming",
"Soft WheatBle_tendre__ABCounterfactual",
"Soft Wheatno_matchLabel Rouge",
"Soft WheatBle_tendre__LRCounterfactual",
"Grain Maizeno_matchConventional",
"Grain Maizeno_matchOrganic Farming",
"Grain MaizeMais_grain__ABCounterfactual",
"Milkno_matchConventional",
"Milkno_matchOrganic Farming",
"MilkLait__ABCounterfactual",
"Milkno_matchCharentes-Poitou Butter",
"MilkLait__Beurre de Charentes-PoitouCounterfactual",
"Milkno_matchComté - Morbier",
"MilkLait__Comte - MorbierCounterfactual"
)),
labels = rev(c("Soft Wheat - Conventional",
"Soft Wheat - Organic Farming",
"Soft Wheat - Counterfactual Organic Farming",
"Soft Wheat - Label Rouge",
"Soft Wheat - Counterfactual Label Rouge",
"Grain Maize - Conventional",
"Grain Maize - Organic Farming",
"Grain Maize - Counterfactual Organic Farming",
"Milk - Conventional",
"Milk - Organic Farming",
"Milk - Counterfactual Organic Farming",
"Milk - Charentes-Poitou Butter",
"Milk - Counterfactual Charentes-Poitou Butter",
"Milk - Comte - Morbier",
"Milk - Counterfactual Comte - Morbier")))
tmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,
levels = tmp_plot_order$plot_x,
labels = tmp_plot_order$labels)
tmp_plot_data <- tmp_plot_data %>% filter(!is.na(plot_x))
tmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)
# plot ----
ggplot() +
# mean
geom_point(data = tmp_plot_data,
aes(x = plot_x, y = mean, fill = FQS,colour = FQS),
shape = 21, size=2, stroke = 1, position = position_dodge(width = 0.75)) +
# CI95%
geom_errorbar(data = tmp_plot_data,
aes(x = plot_x, ymin = mean-1.96*(sd/sqrt(nobs)), ymax = mean+1.96*(sd/sqrt(nobs)), colour = FQS),
linewidth=1,width = 0.5,position = position_dodge(width = 0.75)) +
# sd
geom_errorbar(data = tmp_plot_data,
aes(x = plot_x, ymin = mean-sd, ymax = mean+sd, colour = FQS),
linewidth=0.5,width = 0.5,linetype = "dashed",position = position_dodge(width = 0.75)) +
# n
geom_text(data = tmp_plot_data,
aes(x = plot_x, y=max(mean+sd)*1.1,colour = FQS,label = paste0("n = ",as.character(nobs))),
size=5,position = position_dodge(width = 1)) +
# stat groups
geom_text(data = tmp_plot_data,
aes(x = plot_x,y=0,colour = FQS,label = stat_grp),
size=5,position = position_dodge(width = 1))+
# theme
coord_flip() +
ylim(c(0,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +
facet_wrap(vars(production_type),scales = "free_y",ncol = 1,
labeller = labeller(CROP = "Crops", MILK = "Milk")) +
labs(y = "BVIAS_ha",x= "Products") +
scale_fill_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels,) +
scale_colour_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels) +
theme_light() +
theme(legend.position = "none",
legend.direction = "horizontal",legend.title = element_blank(),
strip.background = element_rect(
color="#cccccc", fill="white", linewidth = 1, linetype="solid"),
strip.text = element_text(colour = "#333333"))
library(dplyr)
library(tidyr)
library(ggplot2)
source("~/BiodivLabel/huet_estimating_2025/result_tables.R")
# plot data ----
tmp_plot_data <- tmp_table0 %>%
# select only one practice for some products
filter(
practice == tmp_practice_names$labels[tmp_practice_names$practice == "BVIAS_t"]
& product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]
& FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%
# change names for counterfactuals
filter(match == "no_match" | FQS == "Conventional") %>%
mutate(FQS = factor(case_when(
match == "no_match" ~ FQS,
match != "no_match" ~ "Counterfactual"
))) %>%
# add asterisk when signif
mutate(
stat_grp = case_when(
match == "no_match" ~ stat_grp,
match != "no_match" & padjust_bonf <= 0.05 ~ "*",
.default = ""
)) %>%
# add plot_x
mutate(
plot_x = paste0(product_name,match,FQS)
)
# plot order ----
tmp_plot_order <- tibble(
plot_x = rev(c("Soft Wheatno_matchConventional",
"Soft Wheatno_matchOrganic Farming",
"Soft WheatBle_tendre__ABCounterfactual",
"Soft Wheatno_matchLabel Rouge",
"Soft WheatBle_tendre__LRCounterfactual",
"Grain Maizeno_matchConventional",
"Grain Maizeno_matchOrganic Farming",
"Grain MaizeMais_grain__ABCounterfactual",
"Milkno_matchConventional",
"Milkno_matchOrganic Farming",
"MilkLait__ABCounterfactual",
"Milkno_matchCharentes-Poitou Butter",
"MilkLait__Beurre de Charentes-PoitouCounterfactual",
"Milkno_matchComté - Morbier",
"MilkLait__Comte - MorbierCounterfactual"
)),
labels = rev(c("Soft Wheat - Conventional",
"Soft Wheat - Organic Farming",
"Soft Wheat - Counterfactual Organic Farming",
"Soft Wheat - Label Rouge",
"Soft Wheat - Counterfactual Label Rouge",
"Grain Maize - Conventional",
"Grain Maize - Organic Farming",
"Grain Maize - Counterfactual Organic Farming",
"Milk - Conventional",
"Milk - Organic Farming",
"Milk - Counterfactual Organic Farming",
"Milk - Charentes-Poitou Butter",
"Milk - Counterfactual Charentes-Poitou Butter",
"Milk - Comte - Morbier",
"Milk - Counterfactual Comte - Morbier")))
tmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,
levels = tmp_plot_order$plot_x,
labels = tmp_plot_order$labels)
tmp_plot_data <- tmp_plot_data %>%
filter(!is.na(plot_x))
tmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)
# plot ----
ggplot() +
# mean
geom_point(data = tmp_plot_data,
aes(x = plot_x, y = mean, fill = FQS,colour = FQS),
shape = 21, size=2, stroke = 1, position = position_dodge(width = 0.75)) +
# CI95%
geom_errorbar(data = tmp_plot_data,
aes(x = plot_x, ymin = mean-1.96*(sd/sqrt(nobs)), ymax = mean+1.96*(sd/sqrt(nobs)), colour = FQS),
linewidth=1,width = 0.5,position = position_dodge(width = 0.75)) +
# sd
geom_errorbar(data = tmp_plot_data,
aes(x = plot_x, ymin = mean-sd, ymax = mean+sd, colour = FQS),
linewidth=0.5,width = 0.5,linetype = "dashed",position = position_dodge(width = 0.75)) +
# n
geom_text(data = tmp_plot_data,
aes(x = plot_x, y=max(mean+sd)*1.1,colour = FQS,label = paste0("n = ",as.character(nobs))),
size=5,position = position_dodge(width = 1)) +
# stat groups
geom_text(data = tmp_plot_data,
aes(x = plot_x,y=0,colour = FQS,label = stat_grp),
size=5,position = position_dodge(width = 1))+
# theme
coord_flip() +
ylim(c(0,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +
#  ylim(c(min(tmp_plot_data$mean-tmp_plot_data$sd)*1.03,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +
facet_wrap(vars(production_type),scales = "free_y",ncol = 1) +
labs(y = "BVIAS_t",x= "Produits") +
scale_fill_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels,) +
scale_colour_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels) +
theme_light() +
theme(legend.position = "none",
legend.direction = "horizontal",legend.title = element_blank(),
strip.background = element_rect(
color="#cccccc", fill="white", linewidth = 1, linetype="solid"),
strip.text = element_text(colour = "#333333"))
