"0",""
"0","library(dplyr)"
"0","library(tidyr)"
"0","library(ggplot2)"
"0",""
"0","source(""~/BiodivLabel/huet_estimating_2025/result_tables.R"")"
"1","[1mRows: [22m[34m1387[39m [1mColumns: [22m[34m18[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (7): production_type, product_name, FQS, product_FQS, practice, match, practice_...
[32mdbl[39m (11): mean, sd, nobs, q0, q5, q25, q50, q75, q95, q100, se
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"1","[1mRows: [22m[34m403[39m [1mColumns: [22m[34m24[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (9): trt, stat_grp, practice_subset, practice, production_type, product_name, FQ...
[32mdbl[39m (14): trt_mean, std, r, se, Min, Max, Q25, Q50, Q75, FQS_mean, max_value, conv_me...
[33mlgl[39m  (1): stat_grp_conv_diff
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"1","[1mRows: [22m[34m540[39m [1mColumns: [22m[34m16[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (5): production_type, product_name, FQS, match, practice
[32mdbl[39m (11): mean, sd, min, max, q25, q50, q75, n_matched, mean_diff_match, pval_pttest,...
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"0","# plot data ----"
"0",""
"0","tmp_plot_data <- tmp_table0 %>%"
"0","  # select only one practice for some products"
"0","  filter("
"0","    practice == tmp_practice_names$labels[tmp_practice_names$practice == ""BVIAS_t""]"
"0","    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]"
"0","    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%"
"0","  # change names for counterfactuals"
"0","  filter(match == ""no_match"" | FQS == ""Conventional"") %>%"
"0","  mutate(FQS = factor(case_when("
"0","    match == ""no_match"" ~ FQS,"
"0","    match != ""no_match"" ~ ""Counterfactual"""
"0","  ))) %>%"
"0","  # add asterisk when signif"
"0","  mutate("
"0","    stat_grp = case_when("
"0","      match == ""no_match"" ~ stat_grp,"
"0","      match != ""no_match"" & padjust_bonf <= 0.05 ~ ""*"","
"0","      .default = """""
"0","  )) %>%"
"0","  # add plot_x"
"0","  mutate("
"0","    plot_x = paste0(product_name,match,FQS)"
"0","  )"
"0",""
"0",""
"0","# plot order ----"
"0",""
"0","tmp_plot_order <- tibble("
"0","  plot_x = rev(c(""Soft Wheatno_matchConventional"","
"0","                 ""Soft Wheatno_matchOrganic Farming"","
"0","                 ""Soft WheatBle_tendre__ABCounterfactual"","
"0","                 ""Soft Wheatno_matchLabel Rouge"","
"0","                 ""Soft WheatBle_tendre__LRCounterfactual"","
"0","                 ""Grain Maizeno_matchConventional"","
"0","                 ""Grain Maizeno_matchOrganic Farming"","
"0","                 ""Grain MaizeMais_grain__ABCounterfactual"","
"0","                 ""Milkno_matchConventional"","
"0","                 ""Milkno_matchOrganic Farming"","
"0","                 ""MilkLait__ABCounterfactual"","
"0","                 ""Milkno_matchCharentes-Poitou Butter"","
"0","                 ""MilkLait__Beurre de Charentes-PoitouCounterfactual"","
"0","                 ""Milkno_matchComtÃ© - Morbier"","
"0","                 ""MilkLait__Comte - MorbierCounterfactual"""
"0","                 )),"
"0","  labels = rev(c(""Soft Wheat - Conventional"","
"0","                 ""Soft Wheat - Organic Farming"","
"0","                 ""Soft Wheat - Counterfactual Organic Farming"","
"0","                 ""Soft Wheat - Label Rouge"","
"0","                 ""Soft Wheat - Counterfactual Label Rouge"","
"0","                 ""Grain Maize - Conventional"","
"0","                 ""Grain Maize - Organic Farming"","
"0","                 ""Grain Maize - Counterfactual Organic Farming"","
"0","                 ""Milk - Conventional"","
"0","                 ""Milk - Organic Farming"","
"0","                 ""Milk - Counterfactual Organic Farming"","
"0","                 ""Milk - Charentes-Poitou Butter"","
"0","                 ""Milk - Counterfactual Charentes-Poitou Butter"","
"0","                 ""Milk - Comte - Morbier"","
"0","                 ""Milk - Counterfactual Comte - Morbier"")))"
"0",""
"0","tmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,"
"0","                               levels = tmp_plot_order$plot_x,"
"0","                               labels = tmp_plot_order$labels)"
"0","tmp_plot_data <- tmp_plot_data %>% "
"0","  filter(!is.na(plot_x))"
"0","tmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)"
"0",""
"0","# plot ----"
"0",""
"0","ggplot() +"
"0","    # mean"
"0","  geom_point(data = tmp_plot_data,"
"0","             aes(x = plot_x, y = mean, fill = FQS,colour = FQS),"
"0","             shape = 21, size=2, stroke = 1, position = position_dodge(width = 0.75)) +"
"0","  # CI95%"
"0","  geom_errorbar(data = tmp_plot_data,"
"0","                aes(x = plot_x, ymin = mean-1.96*(sd/sqrt(nobs)), ymax = mean+1.96*(sd/sqrt(nobs)), colour = FQS),"
"0","                linewidth=1,width = 0.5,position = position_dodge(width = 0.75)) +"
"0","  # sd"
"0","  geom_errorbar(data = tmp_plot_data,"
"0","                aes(x = plot_x, ymin = mean-sd, ymax = mean+sd, colour = FQS),"
"0","                linewidth=0.5,width = 0.5,linetype = ""dashed"",position = position_dodge(width = 0.75)) +"
"0","  # n"
"0","  geom_text(data = tmp_plot_data,"
"0","            aes(x = plot_x, y=max(mean+sd)*1.1,colour = FQS,label = paste0(""n = "",as.character(nobs))),"
"0","            size=5,position = position_dodge(width = 1)) +"
"0","  # stat groups"
"0","  geom_text(data = tmp_plot_data,"
"0","            aes(x = plot_x,y=0,colour = FQS,label = stat_grp),"
"0","            size=5,position = position_dodge(width = 1))+"
"0","  # theme"
"0","  coord_flip() +"
"0","  ylim(c(0,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +"
"0","#  ylim(c(min(tmp_plot_data$mean-tmp_plot_data$sd)*1.03,max(tmp_plot_data$mean+tmp_plot_data$sd)*1.2)) +"
"0","  facet_wrap(vars(production_type),scales = ""free_y"",ncol = 1) +"
"0","  labs(y = ""BVIAS_t"",x= ""Produits"") +"
"0","  scale_fill_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels,) +"
"0","  scale_colour_manual(values = tmp_FQS_names$colors,labels = tmp_FQS_names$labels) +"
"0","  theme_light() +"
"0","  theme(legend.position = ""none"","
"0","        legend.direction = ""horizontal"",legend.title = element_blank(),"
"0","        strip.background = element_rect("
"0","          color=""#cccccc"", fill=""white"", linewidth = 1, linetype=""solid""),"
"0","        strip.text = element_text(colour = ""#333333""))"
