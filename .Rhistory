# area in hectares for each crop
area_ha = area_ha,
# production quantity in kg for each crop
prod_kg = prod_t*10^3,
# sales quantity in kg for each crop
sales_kg = sales_t*10^3) %>%
# select variables
select(farm_id,farm_region,crop,area_ha,prod_kg,sales_kg)
}
source("scripts/yield_crop.R")
## We will consider only crops used to feed livestock
# transfert table
tmp_TT_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>% rename(crop = FADN_code_letter) %>% select(crop)
) %>% distinct()
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>% rename(crop = FADN_code_letter) %>% select(crop,feed_type,feed_tables,land_use_type)
) %>% distinct()
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>%
rename(crop = FADN_code_letter) %>%
group_by(crop) %>%
summarise(
feed_type = unique(feed_type),
feed_tables = paste0(unique(feed_tables),collapse = ";"),
land_use_type = unique(land_use_type)
)
) %>% distinct()
tmp_TT_crops0 %>%
rename(crop = FADN_code_letter) %>%
group_by(crop) %>%
summarise(
feed_type = unique(feed_type),
feed_tables = paste0(unique(feed_tables),collapse = ";"),
land_use_type = unique(land_use_type)
)
tmp_TT_crops0 %>%
rename(crop = FADN_code_letter) %>%
group_by(crop) %>%
summarise(
feed_type = unique(na.omit(feed_type)),
feed_tables = paste0(unique(na.omit(feed_tables)),collapse = ";"),
land_use_type = unique(na.omit(land_use_type))
)
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>%
rename(crop = FADN_code_letter) %>%
group_by(crop) %>%
summarise(
feed_type = unique(na.omit(feed_type)),
feed_tables = paste0(unique(na.omit(feed_tables)),collapse = ";"),
land_use_type = unique(na.omit(land_use_type))
)
) %>% distinct()
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>%
rename(crop = FADN_code_letter) %>%
group_by(crop) %>%
reframe(
feed_type = unique(na.omit(feed_type)),
feed_tables = paste0(unique(na.omit(feed_tables)),collapse = ";"),
land_use_type = unique(na.omit(land_use_type))
)
) %>% distinct()
View(tmp_TT_crops)
# create a table with both RICA and FADN crop codes
tmp_TT_crops_as_feed <- tmp_TT_crops %>%
filter(!is.na(feed_type))
source("d:/users/srhuet/documents/FADN2Footprint/scripts/feed_produced.R")
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>%
rename(crop = FADN_code_letter) %>%
group_by(crop) %>%
reframe(
feed_type = unique(na.omit(feed_type)),
feed_tables = paste0(unique(na.omit(feed_tables)),collapse = ";"),
land_use_type = unique(na.omit(land_use_type))
)
) %>% distinct()
tmp_input <- FADN_18 %>%
## area in hectares for each crop
select(ID, NUTS3, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID,NUTS3),names_to = "crop",values_to = "area_ha") %>%
mutate(crop = gsub("_TA","",crop)) %>%
## production quantity in kg for each crop
left_join(.,FADN_18 %>%
select(ID, NUTS3, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_PRQ"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID,NUTS3),names_to = "crop",values_to = "prod_t") %>%
mutate(crop = gsub("_PRQ","",crop))) %>%
## sales quantity in kg for each crop
left_join(.,FADN_18 %>%
select(ID, NUTS3, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_SQ"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID,NUTS3),names_to = "crop",values_to = "sales_t") %>%
mutate(crop = gsub("_SQ","",crop)))
tmp_input <- tmp_input %>%
mutate(
# farm Unique Identifier
farm_id = ID,
# farm region (smallest area)
farm_region = NUTS3,
# crop code
crop = crop,
# area in hectares for each crop
area_ha = area_ha,
# production quantity in kg for each crop
prod_kg = prod_t*10^3,
# sales quantity in kg for each crop
sales_kg = sales_t*10^3) %>%
# select variables
select(farm_id,farm_region,crop,area_ha,prod_kg,sales_kg)
}
# create a table with both RICA and FADN crop codes
tmp_TT_crops_as_feed <- tmp_TT_crops %>%
filter(!is.na(feed_type))
tmp_feed_produced_qty <- tmp_yield %>%
left_join(.,tmp_input %>% select(farm_id,crop,sales_kg)) %>%
# filter crops used as feed
filter(crop %in% tmp_TT_crops_as_feed$crop) %>%
# estimate produced feed quantity
mutate(
feed_kg_crop = prod_kg - sales_kg) %>% ungroup()
# feed tables
## we considered that crop productions are recorded as dry matter
tmp_feed_table <- read_excel("data_in/supp_data.xlsx",sheet = "feed_table_all_as_DM")
# average GE, DM & CP
tmp_avrg_feed_qlty <- tmp_TT_crops_as_feed %>%
filter(crop %in% tmp_input$crop) %>%
# add GE, DM & CP
rowwise() %>%
mutate(
GE_MJ_kg = mean(tmp_feed_table$`GE MJ/kg`[
tmp_feed_table$Feed %in% unlist(strsplit(feed_tables,";"))
],na.rm = T),
CP_pc = mean(tmp_feed_table$`CP %`[
tmp_feed_table$Feed %in% unlist(strsplit(feed_tables,";"))
],na.rm = T)) %>% ungroup()
# Total GE, DM & CP
tmp_feed_produced_qlty <- tmp_feed_produced_qty %>%
# add feed_type
left_join(.,tmp_TT_crops_as_feed %>% select(feed_type,crop,land_use_type)) %>%
select(farm_id,crop,land_use_type,feed_type,feed_kg_crop) %>%
# add average feed DM and CP content
left_join(.,tmp_avrg_feed_qlty %>% select(crop,GE_MJ_kg,CP_pc)) %>%
mutate(
GE_MJ_crop = feed_kg_crop * GE_MJ_kg,
DM_kg_crop = feed_kg_crop,
CP_kg_crop = feed_kg_crop * (CP_pc / 100)
) %>% ungroup()
# CHECK ----
# WIP
print("Everything's good if TRUE")
print(nrow(tmp_input[tmp_input$crop %in% tmp_SAA_yield$crop
& tmp_input$area_ha >0,]) == nrow(tmp_feed_produced_qlty[tmp_feed_produced_qlty$crop %in% tmp_SAA_yield$crop,]))
feed_produced <- tmp_feed_produced_qlty %>%
filter(DM_kg_crop >0
& land_use_type == "arable") %>%
select(farm_id,feed_type,crop,GE_MJ_crop,DM_kg_crop,CP_kg_crop)
feed_grassland <- tmp_feed_produced_qlty %>%
filter(DM_kg_crop >0
& land_use_type == "grassland") %>%
select(farm_id,feed_type,crop,GE_MJ_crop,DM_kg_crop,CP_kg_crop)
rm(list = names(.GlobalEnv)[grep("tmp",names(.GlobalEnv))])
library(readr)
library(readxl)
library(tidyr)
library(dplyr)
library(tibble)
rm(list = names(.GlobalEnv)[grep("tmp",names(.GlobalEnv))])
#rm(list = ls())
# which data base are you using? either "FADN" or "RICA"
my_DB = "FADN"
# Chunk 1: packages
library(readr)
library(readxl)
library(tidyr)
library(dplyr)
library(tibble)
rm(list = names(.GlobalEnv)[grep("tmp",names(.GlobalEnv))])
rm(list = ls())
# which data base are you using? either "FADN" or "RICA"
my_DB = "FADN"
# Chunk 2: load_data
load("data_in/FADN_2018.RData")
# Chunk 3: import_data_2004-2018
# Get the files names
#tmp_ls_files = paste0(getwd(),"/FADN_LIFT_2004-2018/raw_data/",list.files(path = paste0(getwd(),"/FADN_LIFT_2004-2018/raw_data/"),pattern = "*.csv"))
# First apply read.csv, then rbind
#FADN_04_18 = lapply(tmp_ls_files, read_csv) %>% bind_rows()
# Chunk 4: import_data_2018
# Get the files names
#tmp_ls_files = paste0(getwd(),"/FADN_LIFT_2004-2018/raw_data/",list.files(path = paste0(getwd(),"/FADN_LIFT_2004-2018/raw_data/"),pattern = "*2018.csv"))
# First apply read.csv, then rbind
#FADN_18 = lapply(tmp_ls_files, read_csv) %>% bind_rows() %>% mutate(ID = as.character(ID))
# Chunk 5: feed_purchased
source("scripts/feed_purchased.R",local = knitr::knit_global()) # concentrate + rough
# Chunk 6: feed_produced
# As input, a table with:
## farm Unique Identifier
## farm region
## crop code
## area in hectares for each crop
## production quantity in kg for each crop
## sales quantity in kg for each crop
source("scripts/feed_produced.R",local = knitr::knit_global()) # crops + grassland
rm(list = names(.GlobalEnv)[grep("tmp",names(.GlobalEnv))])
source("scripts/yield_crop.R")
rm(list = names(.GlobalEnv)[grep("tmp",names(.GlobalEnv))])
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_TT_crops0 <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops")
tmp_TT_crops <- left_join(
tmp_FADN_crops %>% rename(crop = code_letter),
tmp_TT_crops0 %>%
rename(crop = FADN_code_letter) %>%
group_by(crop) %>%
reframe(
feed_type = unique(na.omit(feed_type)),
feed_tables = paste0(unique(na.omit(feed_tables)),collapse = ";"),
land_use_type = unique(na.omit(land_use_type))
)
) %>% distinct()
tmp_input <- FADN_18 %>%
## area in hectares for each crop
select(ID, NUTS3, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID,NUTS3),names_to = "crop",values_to = "area_ha") %>%
mutate(crop = gsub("_TA","",crop)) %>%
## production quantity in kg for each crop
left_join(.,FADN_18 %>%
select(ID, NUTS3, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_PRQ"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID,NUTS3),names_to = "crop",values_to = "prod_t") %>%
mutate(crop = gsub("_PRQ","",crop))) %>%
## sales quantity in kg for each crop
left_join(.,FADN_18 %>%
select(ID, NUTS3, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_SQ"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID,NUTS3),names_to = "crop",values_to = "sales_t") %>%
mutate(crop = gsub("_SQ","",crop)))
tmp_input <- tmp_input %>%
mutate(
# farm Unique Identifier
farm_id = ID,
# farm region (smallest area)
farm_region = NUTS3,
# crop code
crop = crop,
# area in hectares for each crop
area_ha = area_ha,
# production quantity in kg for each crop
prod_kg = prod_t*10^3,
# sales quantity in kg for each crop
sales_kg = sales_t*10^3) %>%
# select variables
select(farm_id,farm_region,crop,area_ha,prod_kg,sales_kg)
}
# create a table with both RICA and FADN crop codes
tmp_TT_crops_as_feed <- tmp_TT_crops %>%
filter(!is.na(feed_type))
tmp_feed_produced_qty <- crop_yield %>%
left_join(.,tmp_input %>% select(farm_id,crop,sales_kg)) %>%
# filter crops used as feed
filter(crop %in% tmp_TT_crops_as_feed$crop) %>%
# estimate produced feed quantity
mutate(
feed_kg_crop = prod_kg - sales_kg) %>% ungroup()
# feed tables
## we considered that crop productions are recorded as dry matter
tmp_feed_table <- read_excel("data_in/supp_data.xlsx",sheet = "feed_table_all_as_DM")
# average GE, DM & CP
tmp_avrg_feed_qlty <- tmp_TT_crops_as_feed %>%
filter(crop %in% tmp_input$crop) %>%
# add GE, DM & CP
rowwise() %>%
mutate(
GE_MJ_kg = mean(tmp_feed_table$`GE MJ/kg`[
tmp_feed_table$Feed %in% unlist(strsplit(feed_tables,";"))
],na.rm = T),
CP_pc = mean(tmp_feed_table$`CP %`[
tmp_feed_table$Feed %in% unlist(strsplit(feed_tables,";"))
],na.rm = T)) %>% ungroup()
# Total GE, DM & CP
tmp_feed_produced_qlty <- tmp_feed_produced_qty %>%
# add feed_type
left_join(.,tmp_TT_crops_as_feed %>% select(feed_type,crop,land_use_type)) %>%
select(farm_id,crop,land_use_type,feed_type,feed_kg_crop) %>%
# add average feed DM and CP content
left_join(.,tmp_avrg_feed_qlty %>% select(crop,GE_MJ_kg,CP_pc)) %>%
mutate(
GE_MJ_crop = feed_kg_crop * GE_MJ_kg,
DM_kg_crop = feed_kg_crop,
CP_kg_crop = feed_kg_crop * (CP_pc / 100)
) %>% ungroup()
# CHECK ----
# WIP
print("Everything's good if TRUE")
print(nrow(tmp_input[tmp_input$crop %in% tmp_TT_crops_as_feed$crop
& tmp_input$area_ha >0,]) == nrow(tmp_feed_produced_qlty[tmp_feed_produced_qlty$crop %in% tmp_TT_crops_as_feed$crop,]))
feed_produced <- tmp_feed_produced_qlty %>%
filter(DM_kg_crop >0
& land_use_type == "arable") %>%
select(farm_id,feed_type,crop,GE_MJ_crop,DM_kg_crop,CP_kg_crop)
feed_grassland <- tmp_feed_produced_qlty %>%
filter(DM_kg_crop >0
& land_use_type == "grassland") %>%
select(farm_id,feed_type,crop,GE_MJ_crop,DM_kg_crop,CP_kg_crop)
rm(list = names(.GlobalEnv)[grep("tmp",names(.GlobalEnv))])
source("scripts/feed_produced.R",local = knitr::knit_global()) # crops + grassland
### Répartir la quantité ingérée d'aliments par type de bétail
source("scripts/feed_by_livestock_category.R",local = knitr::knit_global())
source("scripts/feed_by_livestock_category.R",local = knitr::knit_global())
# NB : guidelines IPCC are for one animal, not for one livestock unit
source("scripts/N_excretion_from_livestock.R",local = knitr::knit_global())
### output => kg N yr-1
source("scripts/BVI_A31.R",local = knitr::knit_global())
source("scripts/BVI_A45.R",local = knitr::knit_global())
source("scripts/BVI_A51.R",local = knitr::knit_global())
source("scripts/BVI_crops.R",local = knitr::knit_global())
source("scripts/BVI_herd.R",local = knitr::knit_global())
source("scripts/BVI_milk.R",local = knitr::knit_global())
save.image("~/FADN2Footprint/.RData")
# transfert table
tmp_FADN_code <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_livestock_code")
tmp_TT_livestock0 <- read_xlsx("data_in/supp_data.xlsx", sheet ="TT_livestock")
tmp_TT_livestock <- tmp_TT_livestock0 %>%
# add row for diary buffalo
rbind(tmp_TT_livestock0 %>%
filter(FADN_code_letter == "LCOWDAIR") %>%
select(!all_of(colnames(tmp_FADN_code))) %>%
cbind(tmp_FADN_code %>%
filter(FADN_code_letter == "LBUFDAIRPRS"))) %>%
rename(code_livestock = FADN_code_letter) %>%
# concatenate when multiple rows for one FADN code
filter(!is.na(code_livestock)) %>%
group_by(code_livestock) %>%
summarise(
species = unique(na.omit(species)),
# for livestock categories, see Table 10.1 IPCC Guidelines 2019 Refinement
IPCC_mix_cat = paste0(unique(na.omit(unlist(strsplit(IPCC_mix_cat,";")))),collapse = ";"),
UGB = unique(na.omit(UGB))
)
View(tmp_TT_livestock)
View(tmp_TT_livestock0)
tmp_feed_intake <- feed_by_livestock %>%
# add livestock unit coefficient to convert to animal
left_join(.,tmp_TT_livestock %>% select(code_livestock,UGB)) %>%
# estimate feed intake per animal using livestock unit coefficient to convert to animal
group_by(farm_id,code_livestock) %>%
summarise(
DM_kg_animal = sum(DM_kg_crop_LU*UGB),
# add crude protein content
CP_p100 = (sum(CP_kg_crop_LU*UGB) / DM_kg_animal)*100)
source("d:/users/srhuet/documents/FADN2Footprint/R/N_excretion_from_livestock.R")
if (my_DB == "FADN") {
# transfert table
tmp_FADN_code <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_livestock_code")
tmp_TT_livestock0 <- read_xlsx("data_in/supp_data.xlsx", sheet ="TT_livestock")
tmp_TT_livestock <- tmp_TT_livestock0 %>%
# add row for diary buffalo
rbind(tmp_TT_livestock0 %>%
filter(FADN_code_letter == "LCOWDAIR") %>%
select(!all_of(colnames(tmp_FADN_code))) %>%
cbind(tmp_FADN_code %>%
filter(FADN_code_letter == "LBUFDAIRPRS"))) %>%
rename(code_livestock = FADN_code_letter) %>%
# concatenate when multiple rows for one FADN code
filter(!is.na(code_livestock)) %>%
group_by(code_livestock) %>%
summarise(
species = unique(na.omit(species)),
# for livestock categories, see Table 10.1 IPCC Guidelines 2019 Refinement
IPCC_mix_cat = paste0(unique(na.omit(unlist(strsplit(IPCC_mix_cat,";")))),collapse = ";"),
UGB = unique(na.omit(UGB))
)
# FADN data
tmp_input <- FADN_18 %>%
## area in hectares for each crop
select(ID, all_of(intersect(paste0(tmp_FADN_code$FADN_code_letter,"_ALU"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID),names_to = "code_livestock",values_to = "livestock_unit") %>%
rename(farm_id = ID) %>%
mutate(code_livestock = gsub("_ALU","",code_livestock)) %>%
# add species
left_join(., tmp_TT_livestock)  %>%
# add livestock unit coefficient to convert to animal
left_join(.,tmp_TT_livestock0 %>%
filter(!is.na(FADN_code_letter)) %>%
select(FADN_code_letter,UGB) %>%
distinct() %>%
rename(code_livestock = FADN_code_letter)) %>%
# remove livestock without population
filter(livestock_unit >0 )
}
tmp_feed_intake <- feed_by_livestock %>%
# add livestock unit coefficient to convert to animal
left_join(.,tmp_TT_livestock %>% select(code_livestock,UGB)) %>%
# estimate feed intake per animal using livestock unit coefficient to convert to animal
group_by(farm_id,code_livestock) %>%
summarise(
DM_kg_animal = sum(DM_kg_crop_LU*UGB),
# add crude protein content
CP_p100 = (sum(CP_kg_crop_LU*UGB) / DM_kg_animal)*100)
## milk production
tmp_prod_milk <- FADN_18 %>%
# filter farms in OTEX diary cattle, mixed cattle, mixed farming and have sold milk
filter(TF %in% c(4500,4700,7310) & PMLKCOW_SV >0) %>%
# extract milk production
mutate(code = "PMLKCOW",
prod_kg = PMLKCOW_PRQ*10^3) %>%
rename(farm_id = ID) %>%
select(farm_id,code,prod_kg)
# FADN data
tmp_input <- FADN_18 %>%
## livestock unit
select(ID, all_of(intersect(paste0(tmp_FADN_code$FADN_code_letter,"_ALU"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID),names_to = "code_livestock",values_to = "livestock_unit") %>%
rename(farm_id = ID) %>%
mutate(code_livestock = gsub("_ALU","",code_livestock)) %>%
# add species
left_join(., tmp_TT_livestock)  %>%
# add livestock unit coefficient to convert to animal
left_join(.,tmp_TT_livestock0 %>%
filter(!is.na(FADN_code_letter)) %>%
select(FADN_code_letter,UGB) %>%
distinct() %>%
rename(code_livestock = FADN_code_letter)) %>%
# remove livestock without population
filter(livestock_unit >0 ) %>%
## milk production
left_join(
.,
FADN_18 %>%
# extract milk production
mutate(code_livestock = "PMLKCOW",
prod_milk_kg = PMLKCOW_PRQ*10^3) %>%
rename(farm_id = ID) %>%
select(farm_id,code_livestock,prod_milk_kg))
View(tmp_input)
# FADN data
tmp_input <- FADN_18 %>%
## livestock unit
select(ID, all_of(intersect(paste0(tmp_FADN_code$FADN_code_letter,"_ALU"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID),names_to = "code_livestock",values_to = "livestock_unit") %>%
rename(farm_id = ID) %>%
mutate(code_livestock = gsub("_ALU","",code_livestock)) %>%
# add species
left_join(., tmp_TT_livestock)  %>%
# add livestock unit coefficient to convert to animal
left_join(.,tmp_TT_livestock0 %>%
filter(!is.na(FADN_code_letter)) %>%
select(FADN_code_letter,UGB) %>%
distinct() %>%
rename(code_livestock = FADN_code_letter)) %>%
# remove livestock without population
filter(livestock_unit >0 ) %>%
## milk production
left_join(
.,
FADN_18 %>%
# extract milk production
mutate(code_livestock = "LCOWDAIR",
prod_milk_kg = PMLKCOW_PRQ*10^3) %>%
rename(farm_id = ID) %>%
select(farm_id,code_livestock,prod_milk_kg))
# FADN data
tmp_input <- FADN_18 %>%
## livestock unit
select(ID, all_of(intersect(paste0(tmp_FADN_code$FADN_code_letter,"_ALU"),colnames(FADN_18)))) %>%
pivot_longer(cols = !c(ID),names_to = "code_livestock",values_to = "livestock_unit") %>%
rename(farm_id = ID) %>%
mutate(code_livestock = gsub("_ALU","",code_livestock)) %>%
# add species
left_join(., tmp_TT_livestock)  %>%
# add livestock unit coefficient to convert to animal
left_join(.,tmp_TT_livestock0 %>%
filter(!is.na(FADN_code_letter)) %>%
select(FADN_code_letter,UGB) %>%
distinct() %>%
rename(code_livestock = FADN_code_letter)) %>%
mutate(livestock_head = livestock_unit*UGB) %>%
# remove livestock without population
filter(livestock_unit >0 ) %>%
## milk production
left_join(
.,
FADN_18 %>%
# extract milk production
mutate(code_livestock = "LCOWDAIR",
prod_milk_kg = PMLKCOW_PRQ*10^3) %>%
rename(farm_id = ID) %>%
select(farm_id,code_livestock,prod_milk_kg))
View(tmp_input)
