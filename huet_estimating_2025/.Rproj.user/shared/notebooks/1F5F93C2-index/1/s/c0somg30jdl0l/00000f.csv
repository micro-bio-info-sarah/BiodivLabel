"0",""
"0","library(dplyr)"
"2","
Attachement du package : â€˜dplyrâ€™

"
"2","Les objets suivants sont masquÃ©s depuis â€˜package:statsâ€™:

    filter, lag

"
"2","Les objets suivants sont masquÃ©s depuis â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

"
"0","library(tidyr)"
"0","library(gt)"
"2","Avis :"
"2"," le package â€˜gtâ€™ a Ã©tÃ© compilÃ© avec la version R 4.4.1
"
"2","Registered S3 methods overwritten by 'htmltools':
  method               from         
  print.html           tools:rstudio
  print.shiny.tag      tools:rstudio
  print.shiny.tag.list tools:rstudio
"
"0","source(""~/BiodivLabel/huet_estimating_2025/result_tables.R"")"
"1","[1mRows: [22m[34m1387[39m [1mColumns: [22m[34m18[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (7): production_type, product_name, FQS, product_FQS, practice, match, p...
[32mdbl[39m (11): mean, sd, nobs, q0, q5, q25, q50, q75, q95, q100, se
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"1","[1mRows: [22m[34m403[39m [1mColumns: [22m[34m24[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (9): trt, stat_grp, practice_subset, practice, production_type, product_...
[32mdbl[39m (14): trt_mean, std, r, se, Min, Max, Q25, Q50, Q75, FQS_mean, max_value,...
[33mlgl[39m  (1): stat_grp_conv_diff
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"1","[1mRows: [22m[34m540[39m [1mColumns: [22m[34m16[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (5): production_type, product_name, FQS, match, practice
[32mdbl[39m (11): mean, sd, min, max, q25, q50, q75, n_matched, mean_diff_match, pval...
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"0","tmp_table <- tmp_table0 %>%"
"0","    filter(production_type == ""crop"" & !is.na(product_name)) %>%"
"0","    select(practice,product_name,match,FQS,"
"0","           nobs,mean,sd,mean_conv_diff,pval_tukey,mean_diff_match,padjust_bonf) %>%"
"0","    filter(!(match !=""no_match"" & FQS != ""Conventional"")) %>%"
"0","    left_join(.,"
"0","              tmp_table0 %>%"
"0","                  filter(production_type == ""crop"" & !is.na(product_name)) %>%"
"0","                  filter(match != ""no_match"" & FQS !=""Conventional"") %>%"
"0","                  select(practice,product_name,match,FQS) %>%"
"0","                  distinct() %>%"
"0","                  rename(FQS_match = FQS),"
"0","              by = join_by(practice, product_name, match)) %>%"
"0","    mutate(FQS = case_when("
"0","        match != ""no_match"" ~paste0(FQS_match,"" Counterfactual""),"
"0","        .default = FQS"
"0","    )) %>%"
"0","    select(!c(match,FQS_match)) %>%"
"0","    arrange(practice,product_name,FQS)"
"0",""
"0","tmp_table %>%"
"0","  # groups"
"0","  mutate(product_name = ifelse(row_number() == 1,"
"0","                               as.character(product_name), """"),"
"0","         .by = c(practice, product_name)) %>%"
"0","  gt(groupname_col = ""practice"") %>%"
"0","  tab_style("
"0","    style = list("
"0","      cell_fill(color = ""gray""),"
"0","      cell_text(weight = ""bolder"")"
"0","    ),"
"0","    locations = cells_row_groups(groups = everything())"
"0","  ) %>%"
"0","  # format numbers"
"0","  fmt_auto() %>%"
"0","  tab_style("
"0","    style = list("
"0","      cell_text(weight = ""bold"")"
"0","    ),"
"0","    locations = cells_body("
"0","      columns = c(mean_conv_diff,pval_tukey),"
"0","      rows = pval_tukey <= 0.05"
"0","    )"
"0","  ) %>%"
"0","  tab_style("
"0","    style = list("
"0","      cell_text(weight = ""bold"")"
"0","    ),"
"0","    locations = cells_body("
"0","      columns = c(mean_diff_match,padjust_bonf),"
"0","      rows = padjust_bonf <= 0.05"
"0","    )"
"0","  ) %>%"
"0","  # replace NAs"
"0","  sub_missing(missing_text = ""-"") %>%"
"0","  # column labels"
"0","  tab_style("
"0","    style = list("
"0","      cell_text(weight = ""bolder"",size = ""large"")"
"0","    ),"
"0","    locations = cells_column_labels(everything())"
"0","  ) %>%"
"0","  cols_label("
"0","    practice = ""Practices"","
"0","    product_name = ""Product"","
"0","    FQS = ""FQS"","
"0","    nobs = ""Observations"","
"0","    mean = ""Mean"","
"0","    sd = ""Standard Deviation"","
"0","    mean_conv_diff = ""Difference from conventional mean (%)"","
"0","    pval_tukey = ""Tukey HSD p-value"","
"0","    mean_diff_match = ""Average paired difference from counterfactual mean"","
"0","    padjust_bonf = ""Paired t-test Bonferroni adjusted p-value"""
"0","  )"
