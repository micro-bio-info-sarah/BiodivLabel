load("data_in/FADN_2018.RData")
source("d:/users/srhuet/documents/BiodivLabel/R/in_practice_A33.R")
library(modelsummary)
datasummary_skim(BV_A.3.3)
tmp <- BV_A.3.3 %>%
left_join(.,
FADN_18 %>% select(id,COUNTRY,TF14) %>% rename(farim_id = id),
by = join_by(farm_id))
tmp <- BV_A.3.3 %>%
left_join(.,
FADN_18 %>% select(ID,COUNTRY,TF14) %>% rename(farim_id = ID),
by = join_by(farm_id))
tmp <- BV_A.3.3 %>%
left_join(.,
FADN_18 %>% select(ID,COUNTRY,TF14) %>% rename(farm_id = ID),
by = join_by(farm_id))
datasummary_balance(~TF14,tmp)
tmp <- BV_A.3.3 %>%
left_join(.,
FADN_18 %>% select(ID,COUNTRY,TF8) %>% rename(farm_id = ID),
by = join_by(farm_id))
datasummary_balance(~TF8,tmp)
install.packages("estimatr")
load("d:/users/srhuet/documents/BiodivLabel/data_in/FADN_2018.RData")
str(FADN_18)
write.csv(FADN_18,quote = F,row.names = F,file = "FADN_18.csv")
write.csv(FADN_18[FADN_18$COUNTRY == "FRA"],quote = F,row.names = F,file = "FADN_18_FRA.csv")
write.csv(FADN_18[FADN_18$COUNTRY == "FRA",],quote = F,row.names = F,file = "FADN_18_FRA.csv")
if (my_DB == "RICA") {
# transfert table
tmp_TT_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops") %>%
rename(crop = RICA_code_number)
tmp_input <- RICA_2020_veg %>%
# summaries areas by crops
group_by(IDENT,CODE3)%>%
summarise(
area_ha = sum(SUPER3*10^-2,na.rm = T)
) %>%
# add mineral nitrogen consumption (kg N)
left_join(.,RICA_2020 %>% select(IDENT,CONSON,AGBIO)) %>%
mutate(crop = CODE3,
org_farming = case_when(
AGBIO %in% c(2,4) ~ T,
.default = F
)) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0, # 7264 farms
# remove organic farms with CONSON>0, as mineral fertilization is supposed to be null in organic farms
!(org_farming == 1 & CONSON >0)
)
# 7069 farms
}
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_input <- FADN_18 %>%
# area in hectares for each crop
select(ID,ORGANIC, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18))),
names_to = "crop",values_to = "area") %>%
mutate(
crop = gsub("_TA","",crop),
org_farming = case_when(ORGANIC %in% c(2,4) ~ T,.default = F),
area_ha = area
) %>%
rename(farm_id = ID) %>%
# select variables and obs
select(farm_id,org_farming,crop,area_ha) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0
)
}
# TEST
tmp_input <- tmp_input %>%
filter(farm_id %in% FADN_18$ID[FADN_18$COUNTRY =="FRA"])
write.csv(tmp_area_18_FRA,quote = F,row.names = F,file = "FADN_area_18_FRA.csv")
write.csv(tmp_input,quote = F,row.names = F,file = "FADN_area_18_FRA.csv")
source("d:/users/srhuet/documents/BiodivLabel/R/in_practice_A33.R")
library(tibble)
library(dplyr)
library(tidyr)
library(readr)
library(readxl)
library(stringi)
library(stringr)
if (my_DB == "RICA") {
# transfert table
tmp_TT_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops") %>%
rename(crop = RICA_code_number)
tmp_input <- RICA_2020_veg %>%
# summaries areas by crops
group_by(IDENT,CODE3)%>%
summarise(
area_ha = sum(SUPER3*10^-2,na.rm = T)
) %>%
# add mineral nitrogen consumption (kg N)
left_join(.,RICA_2020 %>% select(IDENT,CONSON,AGBIO)) %>%
mutate(crop = CODE3,
org_farming = case_when(
AGBIO %in% c(2,4) ~ T,
.default = F
)) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0, # 7264 farms
# remove organic farms with CONSON>0, as mineral fertilization is supposed to be null in organic farms
!(org_farming == 1 & CONSON >0)
)
# 7069 farms
}
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_input <- FADN_18 %>%
# area in hectares for each crop
select(ID,ORGANIC, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18))),
names_to = "crop",values_to = "area") %>%
mutate(
crop = gsub("_TA","",crop),
org_farming = case_when(ORGANIC %in% c(2,4) ~ T,.default = F),
area_ha = area
) %>%
rename(farm_id = ID) %>%
# select variables and obs
select(farm_id,org_farming,crop,area_ha) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0
)
}
# TEST
tmp_input <- tmp_input %>%
filter(farm_id %in% FADN_18$ID[FADN_18$COUNTRY =="FRA"])
tmp_area_tot <- tmp_input %>%
group_by(farm_id) %>%
summarise(area_tot_ha = sum(area_ha),.groups = "keep") %>%
ungroup()
hist(tmp_area_tot$area_tot_ha)
quantile(tmp_area_tot$area_tot_ha)
tmp_Shannon <- tmp_input %>%
left_join(.,tmp_area_tot,by = join_by(farm_id)) %>%
group_by(farm_id) %>%
summarise(
Shannon = - sum( (area_ha / area_tot_ha) * log(area_ha/area_tot_ha)),
.groups = "keep") %>%
ungroup()
hist(tmp_Shannon$Shannon)
quantile(tmp_Shannon$Shannon)
tmp_Simpson <- tmp_input %>%
left_join(.,tmp_area_tot,by = join_by(farm_id)) %>%
group_by(farm_id) %>%
summarise(
Simpson = 1/ sum((
area_ha*(area_ha-1)
/ area_tot_ha*(area_tot_ha-1))^2
),
.groups = "keep") %>%
ungroup()
hist(tmp_Simpson$Simpson)
quantile(tmp_Simpson$Simpson)
View(tmp_Simpson)
tmp_Simpson <- tmp_input %>%
left_join(.,tmp_area_tot,by = join_by(farm_id)) %>%
mutate(
n = (area_ha*(area_ha-1))^2,
N = (area_tot*(area_tot-1))^2,
R = n / N
) %>%
group_by(farm_id) %>%
mutate(
sum_R = sum(R),
recip_simps = 1/sum_R
)
tmp_Simpson <- tmp_input %>%
left_join(.,tmp_area_tot,by = join_by(farm_id)) %>%
mutate(
n = (area_ha*(area_ha-1))^2,
N = (area_tot_ha*(area_tot_ha-1))^2,
R = n / N
) %>%
group_by(farm_id) %>%
mutate(
sum_R = sum(R),
recip_simps = 1/sum_R
)
View(tmp_Simpson)
tmp_Simpson <- tmp_input %>%
left_join(.,tmp_area_tot,by = join_by(farm_id)) %>%
mutate(
n = (area_ha*(area_ha-1))^2,
N = (area_tot_ha*(area_tot_ha-1))^2,
R = n / N
) %>%
group_by(farm_id) %>%
mutate(
sum_R = sum(R),
recip_simps = 1/sum_R
) %>%
summarise(
Simpson = mean(recip_simps),
.groups = "keep") %>%
ungroup()
hist(tmp_Simpson$Simpson)
quantile(tmp_Simpson$Simpson)
quantile(tmp_Simpson$Simpson,na.rm = T)
summary(tmp_Simpson$Simpson,na.rm = T)
summary(tmp_Simpson$Simpson[is.finite(tmp_Simpson$Simpson)],na.rm = T)
(0.11-1.35e-11)^2
library(readr)
FADN_18_FRA <- read_csv("data_in/FADN_18_FRA.csv")
View(FADN_18_FRA)
library(tibble)
library(dplyr)
library(tidyr)
library(readr)
library(readxl)
library(stringi)
library(stringr)
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_input <- FADN_18_FRA %>%
# area in hectares for each crop
select(ID,ORGANIC, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18))),
names_to = "crop",values_to = "area") %>%
mutate(
crop = gsub("_TA","",crop),
org_farming = case_when(ORGANIC %in% c(2,4) ~ T,.default = F),
area_ha = area
) %>%
rename(farm_id = ID) %>%
# select variables and obs
select(farm_id,org_farming,crop,area_ha) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0
)
load("d:/users/srhuet/documents/BiodivLabel/data_in/FADN_2018.RData")
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_input <- FADN_18 %>%
# area in hectares for each crop
select(ID,ORGANIC, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18))),
names_to = "crop",values_to = "area") %>%
mutate(
crop = gsub("_TA","",crop),
org_farming = case_when(ORGANIC %in% c(2,4) ~ T,.default = F),
area_ha = area
) %>%
rename(farm_id = ID) %>%
# select variables and obs
select(farm_id,org_farming,crop,area_ha) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0
)
}
(my_DB = "FADN"
)
if (my_DB == "RICA") {
# transfert table
tmp_TT_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops") %>%
rename(crop = RICA_code_number)
tmp_input <- RICA_2020_veg %>%
# summaries areas by crops
group_by(IDENT,CODE3)%>%
summarise(
area_ha = sum(SUPER3*10^-2,na.rm = T)
) %>%
# add mineral nitrogen consumption (kg N)
left_join(.,RICA_2020 %>% select(IDENT,CONSON,AGBIO)) %>%
mutate(crop = CODE3,
org_farming = case_when(
AGBIO %in% c(2,4) ~ T,
.default = F
)) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0, # 7264 farms
# remove organic farms with CONSON>0, as mineral fertilization is supposed to be null in organic farms
!(org_farming == 1 & CONSON >0)
)
# 7069 farms
}
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_input <- FADN_18 %>%
# area in hectares for each crop
select(ID,ORGANIC, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18))),
names_to = "crop",values_to = "area") %>%
mutate(
crop = gsub("_TA","",crop),
org_farming = case_when(ORGANIC %in% c(2,4) ~ T,.default = F),
area_ha = area
) %>%
rename(farm_id = ID) %>%
# select variables and obs
select(farm_id,org_farming,crop,area_ha) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0
)
}
# TEST
tmp_input <- tmp_input %>%
filter(farm_id %in% FADN_18$ID[FADN_18$COUNTRY =="FRA"])
tmp_area_tot <- tmp_input %>%
group_by(farm_id) %>%
summarise(area_tot_ha = sum(area_ha),.groups = "keep") %>%
ungroup()
library(modelsummary)
datasummary_skim(tmp_input)
tmp = tmp_input %>% group_by(farm_id) %>% summarise(n_crop = length(unique(crop)))
view(tmp)
nrow(tmp[tmp$n_crop == 1])
nrow(tmp[tmp$n_crop == 1,])
nrow(tmp[tmp$n_crop >= 3,])
log(0.5)
log(0.5)*0.5
log(1)*1
library(tibble)
library(dplyr)
library(tidyr)
library(readr)
library(readxl)
library(stringi)
library(stringr)
if (my_DB == "RICA") {
# transfert table
tmp_TT_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "TT_crops") %>%
rename(crop = RICA_code_number)
tmp_input <- RICA_2020_veg %>%
# summaries areas by crops
group_by(IDENT,CODE3)%>%
summarise(
area_ha = sum(SUPER3*10^-2,na.rm = T)
) %>%
# add mineral nitrogen consumption (kg N)
left_join(.,RICA_2020 %>% select(IDENT,CONSON,AGBIO)) %>%
mutate(crop = CODE3,
org_farming = case_when(
AGBIO %in% c(2,4) ~ T,
.default = F
)) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0, # 7264 farms
# remove organic farms with CONSON>0, as mineral fertilization is supposed to be null in organic farms
!(org_farming == 1 & CONSON >0)
)
# 7069 farms
}
if (my_DB == "FADN") {
# transfert table
tmp_FADN_crops <- read_xlsx("data_in/supp_data.xlsx",sheet = "FADN_crop_code")
tmp_input <- FADN_18 %>%
# area in hectares for each crop
select(ID,ORGANIC, all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18)))) %>%
pivot_longer(cols = all_of(intersect(paste0(tmp_FADN_crops$code_letter,"_TA"),colnames(FADN_18))),
names_to = "crop",values_to = "area") %>%
mutate(
crop = gsub("_TA","",crop),
org_farming = case_when(ORGANIC %in% c(2,4) ~ T,.default = F),
area_ha = area
) %>%
rename(farm_id = ID) %>%
# select variables and obs
select(farm_id,org_farming,crop,area_ha) %>%
filter(
# keep only crops & grasslands with areas
area_ha > 0
)
}
my_DB = "RICA"
tmp_OFB_data <- readr::read_delim("C:/Users/srhuet/Downloads/surf_nbpar_haie_bio_nonbio/surf_nbpar_haie_bio_nonbio_dep.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
my_DB = "FADN"
tmp_OFB_Shannon <- tmp_OFB_data %>%
filter(!is.na(surface_tot)) %>%
group_by(insee_departement,mode_prod) %>%
summarise(
Shannon = - sum( (surface_tot / sum(surface_tot)) * log(surface_tot/sum(surface_tot))),
.groups = "keep") %>%
ungroup()
tmp_OFB_Simpson <-tmp_OFB_data %>%
filter(!is.na(surface_tot)) %>%
group_by(insee_departement,mode_prod) %>%
summarise(
Simpson = sum(surface_tot^2 / sum(surface_tot)^2),
Gini_Simpson = 1 - Simpson,
R_Simpson = 1/Simpson,
.groups = "keep") %>%
ungroup()
tmp_div_mean <- tmp_OFB_data %>%
filter(!is.na(surface_tot)) %>%
left_join(.,tmp_OFB_Shannon,by = join_by(insee_departement, mode_prod)) %>%
left_join(.,tmp_OFB_Simpson,by = join_by(insee_departement, mode_prod)) %>%
group_by(mode_prod,gpe_culture_rpg) %>%
summarise(
Shannon = weighted.mean(Shannon,surface_tot),
Simspon = weighted.mean(Simpson,surface_tot),
Gini_Simpson = weighted.mean(Gini_Simpson,surface_tot),
R_Simpson = weighted.mean(R_Simpson,surface_tot),
.groups = "keep"
)
esquisse::esquisser(tmp_div_mean)
tmp_OFB_data <- readr::read_delim("C:/Users/srhuet/Downloads/surf_nbpar_haie_bio_nonbio/surf_nbpar_haie_bio_nonbio_reg.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
tmp_OFB_data <- readr::read_delim("C:/Users/srhuet/Downloads/surf_nbpar_haie_bio_nonbio/surf_nbpar_haie_bio_nonbio_reg.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
tmp_OFB_data <- readr::read_delim("C:/Users/srhuet/Downloads/surf_nbpar_haie_bio_nonbio/surf_nbpar_haie_bio_nonbio_reg.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
rename(spatial_scale = insee_region)
tmp_p100 <- tmp_OFB_data %>%
group_by(spatial_scale,mode_prod,gpe_culture_rpg) %>%
summarise(area_p100 = surface_tot / sum(surface_tot))
tmp_p100 <- tmp_OFB_data %>%
group_by(spatial_scale,mode_prod,gpe_culture_rpg) %>%
summarise(area_p100 = surface_tot / sum(surface_tot),
.groups = "keep")
View(tmp_p100)
tmp_p100 <- tmp_OFB_data %>%
group_by(spatial_scale,mode_prod) %>%
mutate(area_p100 = surface_tot / sum(surface_tot))
View(tmp_p100)
tmp_p100 <- tmp_OFB_data %>%
group_by(spatial_scale,mode_prod) %>%
mutate(area_p100 = surface_tot / sum(surface_tot,na.rm = T))
tmp_p100 <- tmp_OFB_data %>%
group_by(spatial_scale,mode_prod) %>%
mutate(area_p100 = surface_tot / sum(surface_tot,na.rm = T) *100)
sum(tmp_OFB_data$surface_tot[tmp_OFB_data$spatial_scale == "11" & tmp_OFB_data$mode_prod == "non bio"])
sum(tmp_OFB_data$surface_tot[tmp_OFB_data$spatial_scale == "11" & tmp_OFB_data$mode_prod == "non bio"],na.rm = T)
sum(tmp_OFB_data$surface_tot[tmp_OFB_data$spatial_scale == "11" & tmp_OFB_data$mode_prod == "non bio" & tmp_OFB_data$gpe_culture_rpg == " Blé tendre"],na.rm = T)
sum(tmp_OFB_data$surface_tot[tmp_OFB_data$spatial_scale == "11" & tmp_OFB_data$mode_prod == "non bio" & tmp_OFB_data$gpe_culture_rpg == "Blé tendre"],na.rm = T)
sum(tmp_OFB_data$surface_tot[tmp_OFB_data$spatial_scale == "11" & tmp_OFB_data$mode_prod == "non bio" & tmp_OFB_data$gpe_culture_rpg == "Blé tendre"],na.rm = T) / sum(tmp_OFB_data$surface_tot[tmp_OFB_data$spatial_scale == "11" & tmp_OFB_data$mode_prod == "non bio"],na.rm = T) *100
sum(tmp_OFB_data$surface_tot[tmp_OFB_data$spatial_scale == "11" & tmp_OFB_data$mode_prod == "bio" & tmp_OFB_data$gpe_culture_rpg == "Blé tendre"],na.rm = T) / sum(tmp_OFB_data$surface_tot[tmp_OFB_data$spatial_scale == "11" & tmp_OFB_data$mode_prod == "bio"],na.rm = T) *100
sort(unique(tmp_OFB_data$gpe_culture_rpg))
tmp_OFB_data <- readr::read_delim("C:/Users/srhuet/Downloads/surf_nbpar_haie_bio_nonbio/surf_nbpar_haie_bio_nonbio_reg.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
rename(spatial_scale = insee_region)
tmp_OFB_Shannon <- tmp_OFB_data %>%
filter(!is.na(surface_tot)) %>%
group_by(spatial_scale,mode_prod) %>%
summarise(
Shannon = - sum( (surface_tot / sum(surface_tot)) * log(surface_tot/sum(surface_tot))),
.groups = "keep") %>%
ungroup()
tmp_OFB_Simpson <-tmp_OFB_data %>%
filter(!is.na(surface_tot)) %>%
group_by(spatial_scale,mode_prod) %>%
summarise(
Simpson = sum(surface_tot^2 / sum(surface_tot)^2),
Gini_Simpson = 1 - Simpson,
R_Simpson = 1/Simpson,
.groups = "keep") %>%
ungroup()
tmp_div_mean <- tmp_OFB_data %>%
filter(!is.na(surface_tot)) %>%
left_join(.,tmp_OFB_Shannon,by = join_by(spatial_scale, mode_prod)) %>%
left_join(.,tmp_OFB_Simpson,by = join_by(spatial_scale, mode_prod)) %>%
group_by(mode_prod,gpe_culture_rpg) %>%
summarise(
Shannon = weighted.mean(Shannon,surface_tot),
Simspon = weighted.mean(Simpson,surface_tot),
Gini_Simpson = weighted.mean(Gini_Simpson,surface_tot),
R_Simpson = weighted.mean(R_Simpson,surface_tot),
.groups = "keep"
)
View(tmp_div_mean)
tmp_OFB_data <- readr::read_delim("C:/Users/srhuet/Downloads/surf_nbpar_haie_bio_nonbio/surf_nbpar_haie_bio_nonbio_dep.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
rename(spatial_scale = insee_region)
tmp_OFB_data <- readr::read_delim("C:/Users/srhuet/Downloads/surf_nbpar_haie_bio_nonbio/surf_nbpar_haie_bio_nonbio_dep.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
rename(spatial_scale = insee_departement)
tmp_OFB_Shannon <- tmp_OFB_data %>%
filter(!is.na(surface_tot)) %>%
group_by(spatial_scale,mode_prod) %>%
summarise(
Shannon = - sum( (surface_tot / sum(surface_tot)) * log(surface_tot/sum(surface_tot))),
.groups = "keep") %>%
ungroup()
tmp_OFB_Simpson <-tmp_OFB_data %>%
filter(!is.na(surface_tot)) %>%
group_by(spatial_scale,mode_prod) %>%
summarise(
Simpson = sum(surface_tot^2 / sum(surface_tot)^2),
Gini_Simpson = 1 - Simpson,
R_Simpson = 1/Simpson,
.groups = "keep") %>%
ungroup()
tmp_div_mean <- tmp_OFB_data %>%
filter(!is.na(surface_tot)) %>%
left_join(.,tmp_OFB_Shannon,by = join_by(spatial_scale, mode_prod)) %>%
left_join(.,tmp_OFB_Simpson,by = join_by(spatial_scale, mode_prod)) %>%
group_by(mode_prod,gpe_culture_rpg) %>%
summarise(
Shannon = weighted.mean(Shannon,surface_tot),
Simspon = weighted.mean(Simpson,surface_tot),
Gini_Simpson = weighted.mean(Gini_Simpson,surface_tot),
R_Simpson = weighted.mean(R_Simpson,surface_tot),
.groups = "keep"
)
View(tmp_div_mean)
