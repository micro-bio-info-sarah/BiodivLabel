"0",""
"0","library(dplyr)"
"2","
Attachement du package : â€˜dplyrâ€™

"
"2","Les objets suivants sont masquÃ©s depuis â€˜package:statsâ€™:

    filter, lag

"
"2","Les objets suivants sont masquÃ©s depuis â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

"
"0","library(tidyr)"
"0","library(ggplot2)"
"2","Use suppressPackageStartupMessages() to eliminate package startup messages
"
"0","source(""~/BiodivLabel/huet_estimating_2025/result_tables.R"")"
"1","[1mRows: [22m[34m1387[39m [1mColumns: [22m[34m18[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (7): production_type, product_name, FQS, product_FQS, practice, match, practice_subset
[32mdbl[39m (11): mean, sd, nobs, q0, q5, q25, q50, q75, q95, q100, se
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"1","[1mRows: [22m[34m403[39m [1mColumns: [22m[34m24[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (9): trt, stat_grp, practice_subset, practice, production_type, product_name, FQS, product_FQS, s...
[32mdbl[39m (14): trt_mean, std, r, se, Min, Max, Q25, Q50, Q75, FQS_mean, max_value, conv_mean, mean_conv_dif...
[33mlgl[39m  (1): stat_grp_conv_diff
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"1","[1mRows: [22m[34m540[39m [1mColumns: [22m[34m16[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (5): production_type, product_name, FQS, match, practice
[32mdbl[39m (11): mean, sd, min, max, q25, q50, q75, n_matched, mean_diff_match, pval_pttest, padjust_bonf
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"0","# plot data ----"
"0",""
"0","tmp_plot_data <- tmp_table0 %>%"
"0","  # select only one practice for some products"
"0","  filter("
"0","    practice_subset == ""crops"""
"0","    & production_type == ""crop"""
"0","    & product_name %in% tmp_product_names$labels[tmp_product_names$plot == T]"
"0","    & FQS %in% tmp_FQS_names$labels[tmp_FQS_names$plot == T]) %>%"
"0","  # add conventional mean"
"0","    inner_join(.,tmp_table0 %>%"
"0","              filter(FQS %in% c(""Conventional"",""Counterfactual"")) %>%"
"0","              group_by(product_name,match,practice) %>%"
"0","              reframe(mean_conv = mean,.groups = ""keep""),"
"0","            by = join_by(product_name, practice, match)) %>%"
"0","  # change names for counterfactuals"
"0","  filter(match == ""no_match"" | FQS != ""Conventional"") %>%"
"0","  mutate(FQS = factor(case_when("
"0","    match == ""no_match"" ~ FQS,"
"0","    match != ""no_match"" ~ ""Counterfactual"""
"0","  ))) %>%"
"0","  # add asterisk when signif"
"0","  mutate("
"0","    stat_grp = case_when("
"0","      match == ""no_match"" ~ stat_grp,"
"0","      match != ""no_match"" & padjust_bonf <= 0.05 ~ ""*"","
"0","      .default = """""
"0","  )) %>%"
"0","  # add plot_x"
"0","  mutate("
"0","    plot_x = paste0(product_name,match,FQS)"
"0","  )"
"0",""
"0",""
"0","# plot order ----"
"0",""
"0","tmp_plot_order <- tibble("
"0","  plot_x = rev(c(""Soft Wheatno_matchConventional"","
"0","                 ""Soft Wheatno_matchOrganic Farming"","
"0","                 ""Soft WheatBle_tendre__ABCounterfactual"","
"0","                 ""Soft Wheatno_matchLabel Rouge"","
"0","                 ""Soft WheatBle_tendre__LRCounterfactual"","
"0","                 ""Grain Maizeno_matchConventional"","
"0","                 ""Grain Maizeno_matchOrganic Farming"","
"0","                 ""Grain MaizeMais_grain__ABCounterfactual"""
"0","                 )),"
"0","  labels = rev(c(""Soft Wheat - Conventional"","
"0","                 ""Soft Wheat - Organic Farming"","
"0","                 ""Soft Wheat - Counterfactual Organic Farming"","
"0","                 ""Soft Wheat - Label Rouge"","
"0","                 ""Soft Wheat - Counterfactual Label Rouge"","
"0","                 ""Grain Maize - Conventional"","
"0","                 ""Grain Maize - Organic Farming"","
"0","                 ""Grain Maize - Counterfactual Organic Farming"""
"0","                 )))"
"0",""
"0","tmp_plot_data$plot_x <- factor(tmp_plot_data$plot_x,"
"0","                               levels = tmp_plot_order$plot_x,"
"0","                               labels = tmp_plot_order$labels)"
"0","tmp_plot_data$production_type <- toupper(tmp_plot_data$production_type)"
"0",""
"0","tmp_plot_data <- tmp_plot_data %>%"
"0","  mutate("
"0","    both_pval = case_when("
"0","      pval_tukey <= 0.05 ~ pval_tukey,"
"0","      padjust_bonf <= 0.05 ~ padjust_bonf,"
"0","      .default = NA"
"0","    ),"
"0","    both_mean_diff = case_when("
"0","      both_pval <= 0.05 ~ mean/mean_conv,"
"0","      .default = 0"
"0","    )"
"0","  ) %>%"
"0","  mutate("
"0","    comp = case_when("
"0","      both_pval <= 0.05 & both_mean_diff < 1 ~ 1-both_mean_diff,"
"0","      both_pval <= 0.05 & both_mean_diff >= 1 ~ both_mean_diff,"
"0","      .default = 0"
"0","    ),"
"0","    comp_bin = case_when("
"0","      both_mean_diff > 1 ~ T,"
"0","      .default = F"
"0","    )"
"0","  ) %>%"
"0","  mutate("
"0","    text = case_when("
"0","      FQS == ""Counterfactual"" ~ mean_conv,"
"0","      .default = mean"
"0","    )"
"0","  )"
"0",""
"0","ggplot() +"
"0","    geom_count(data = tmp_plot_data,"
"0","               aes(x = practice, y = plot_x,"
"0","                   colour = comp_bin,"
"0","                   size = comp)"
"0","    ) +"
"0","    geom_text(data = tmp_plot_data,"
"0","              aes(x = practice, y = plot_x, label = format(text,scientific = T,digits = 2)),"
"0","              size = 3.5, angle = 45) +"
"0","    # theme"
"0","    #scale_color_binned(type = ""viridis"")+"
"0","    scale_size(""Significant differences"",range = c(0,15)"
"0","    ) +"
"0","    scale_color_discrete(""FQS > Conventional"") +"
"0","    labs(x = ""Practices (mean)"", y = ""Products"") +"
"0","    theme_light() +"
"0","    theme(axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1),"
"0","          axis.text.y = element_text(angle = 45,vjust = 1,hjust = 1),"
"0","          text = element_text(size = 12),"
"0","          legend.position = ""bottom"","
"0","          legend.box=""horizontal"","
"0","          legend.margin = margin(),"
"0","          legend.direction = ""vertical"","
"0","          legend.justification  = ""right"")"
"0",""
